[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W17-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-W17-4/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W17-4/tp/branch/master/graph/badge.svg?token\u003d5KEF39JO86)](https://codecov.io/gh/AY2223S1-CS2103T-W17-4/tp)","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"# Please Hire Us","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"* This is a brownfield project adapted from AddressBook 3(AB3) for **Software Engineering (SE) Students**","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"* The project simulates an ongoing software project for a desktop application used for managing internships details.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base (around 6 KLoC) .","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"* It is named `PleaseHireUs` (`PHU` for short) because as students we are constantly on the lookout for internship opportunities","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"* For the detailed documentation of this project, see the **[PleaseHireUs Website](https://ay2223s1-cs2103t-w17-4.github.io/tp/)**.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"## Features","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"- [x] Add internship details","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"- [x] Sort internships by categories","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"- [x] Filter relevant internships","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"- [x] Edit / Update internship details","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"## Quick Start","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"2. Download the latest `PleaseHireUs.jar` from [here](https://github.com/AY2223S1-CS2103T-W17-4/tp/releases).","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your application.","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"4. Double-click the file to start the app. The GUI similar to the above should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"   Some example commands you can try:","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"  * **`list`** : Lists all internships.","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"  * **`add n/Grab p/software engineer pr/ASSESSMENT web/https://www.grab.com/sg/about`** : Adds a new internship to the internship tracker.","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"  * **`delete 3`** : Deletes the 3rd internship shown in the current list.","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"  * **`clear`** : Deletes all internships.","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"  * **`exit`** : Exits the app.","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"JustinS00":39,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"### Aaron Tan Gui Rong","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"\u003cimg src\u003d\"images/aarontangr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"[ [github](https://github.com/aarontangr) ][ [portfolio](team/aarontangr.md) ]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"* Role: Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"### Elbert Benedict","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Elben85"},"content":"\u003cimg src\u003d\"images/elben85.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Elben85"},"content":"[ [github](http://github.com/Elben85) ]","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"[ [portfolio](team/elben85.md) ]","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"sugiyem"},"content":"### Farrel Dwireswara Salim","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"sugiyem"},"content":"\u003cimg src\u003d\"images/sugiyem.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"sugiyem"},"content":"[ [github](http://github.com/sugiyem) ] [ [portfolio](team/sugiyem.md) ]","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"### Rachel Angelyn Gunawan","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"\u003cimg src\u003d\"images/rachel-ag.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"[ [github](https://github.com/Rachel-AG) ]","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"[ [portfolio](team/rachel-ag.md) ]","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"* Responsibilities: UI","lastModifiedDate":"2022-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"### Justin Siaw","lastModifiedDate":"2022-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"\u003cimg src\u003d\"images/justins00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"[ [github](http://github.com/justinS00) ]","lastModifiedDate":"2022-09-24"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"[ [portfolio](team/justins00.md) ]","lastModifiedDate":"2022-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"Elben85":4,"Rachel-AG":4,"aarontangr":2,"JustinS00":9,"-":33,"sugiyem":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Rachel-AG"},"content":"* computer science students","lastModifiedDate":"2022-09-26"},{"lineNumber":261,"author":{"gitId":"Rachel-AG"},"content":"* has a need to keep track of the list of internships application and their status","lastModifiedDate":"2022-09-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​            | I want to …​                                                              | So that I can…​                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"JustinS00"},"content":"|----------|--------------------|---------------------------------------------------------------------------|-------------------------------------------------|","lastModifiedDate":"2022-09-28"},{"lineNumber":276,"author":{"gitId":"Elben85"},"content":"| `* * *`  | Basic user         | Add an internship                                                         |                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":277,"author":{"gitId":"Elben85"},"content":"| `* * *`  | Basic user         | Delete an internship                                                      |                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":278,"author":{"gitId":"Elben85"},"content":"| `* * *`  | Basic user         | View an internship details                                                |                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":279,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | Update the internship details                                             |                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":280,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | Keep track of the list of internships I applied to                        |                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":281,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | Add tag to internship                                                     | Find the relevant information easily            |","lastModifiedDate":"2022-09-28"},{"lineNumber":282,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | Filter the internship based on current application process, tagging, etc. | Track my progress                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":283,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | View my interview dates                                                   | Track my interview timings                      |","lastModifiedDate":"2022-09-28"},{"lineNumber":284,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | Know the contact of the HR                                                | Discuss the next step needed to be done         |","lastModifiedDate":"2022-09-28"},{"lineNumber":285,"author":{"gitId":"Elben85"},"content":"| `* * *`  | Basic user         | Sort my internship list by date                                           | View the upcoming internship matters to prepare |","lastModifiedDate":"2022-09-27"},{"lineNumber":286,"author":{"gitId":"JustinS00"},"content":"| `* *  `  | First-time user    | Have a link to the demo video                                             | Learn how to use the app                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":287,"author":{"gitId":"JustinS00"},"content":"| `* *  `  | First-time user    | See a help message explaining which features I should try first           | Learn the basic features of the application     |","lastModifiedDate":"2022-09-28"},{"lineNumber":288,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | First-time user    | See some sample internships when I open the app                           | Understand how the app works                    |","lastModifiedDate":"2022-09-28"},{"lineNumber":289,"author":{"gitId":"JustinS00"},"content":"| `*   `   | Forgetful user     | Get reminder                                                              |                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":290,"author":{"gitId":"JustinS00"},"content":"| `*   `   | Advanced user      | Use a shortcut to do commands                                             | Work more efficiently                           |","lastModifiedDate":"2022-09-28"},{"lineNumber":291,"author":{"gitId":"JustinS00"},"content":"| `*   `   | Advanced user      | Copy internship details easily                                            | Quickly share information to other apps         |","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"JustinS00"},"content":"| `*   `   | Advanced user      | Visit internship website fast                                             |                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":293,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Advanced user      | Delete many internships                                                   |                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":294,"author":{"gitId":"JustinS00"},"content":"| `* *  `  | Visual user        | View my internship application process tag with color                     | I can easily identify which stage I have reached|","lastModifiedDate":"2022-09-28"},{"lineNumber":295,"author":{"gitId":"JustinS00"},"content":"| `*   `   | Visual user        | View the count of internships application at each stages                  | See the success rate of my applications         |","lastModifiedDate":"2022-09-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"Rachel-AG"},"content":"(For all use cases below, the **System** is the `InternshipBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"JustinS00"},"content":"**Use case: List internship(s)**","lastModifiedDate":"2022-09-28"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"sugiyem"},"content":"1. User requests to list internships","lastModifiedDate":"2022-09-26"},{"lineNumber":307,"author":{"gitId":"sugiyem"},"content":"2. PleaseHireUs shows a list of internships","lastModifiedDate":"2022-09-26"},{"lineNumber":308,"author":{"gitId":"sugiyem"},"content":"3. User requests to delete specific internship(s) in the list","lastModifiedDate":"2022-09-26"},{"lineNumber":309,"author":{"gitId":"sugiyem"},"content":"4. PleaseHireUs deletes the internship(s)","lastModifiedDate":"2022-09-26"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"   \t Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"sugiyem"},"content":"* 3a. At least one of the given indexes is invalid.","lastModifiedDate":"2022-09-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"sugiyem"},"content":"    * 3a1. PleaseHireUs shows an error message.","lastModifiedDate":"2022-09-26"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"Rachel-AG"},"content":"**Use case: Add internship**","lastModifiedDate":"2022-09-26"},{"lineNumber":326,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":327,"author":{"gitId":"Rachel-AG"},"content":"**MSS**","lastModifiedDate":"2022-09-26"},{"lineNumber":328,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":329,"author":{"gitId":"Rachel-AG"},"content":"1.  User request to add an internship application","lastModifiedDate":"2022-09-26"},{"lineNumber":330,"author":{"gitId":"Rachel-AG"},"content":"2.  System adds the internship application","lastModifiedDate":"2022-09-26"},{"lineNumber":331,"author":{"gitId":"Rachel-AG"},"content":"3.  System displays the success message","lastModifiedDate":"2022-09-26"},{"lineNumber":332,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":333,"author":{"gitId":"Rachel-AG"},"content":"    Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":334,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":335,"author":{"gitId":"Rachel-AG"},"content":"**Extensions**","lastModifiedDate":"2022-09-26"},{"lineNumber":336,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":337,"author":{"gitId":"Rachel-AG"},"content":"* 1a. The given parameters is invalid.","lastModifiedDate":"2022-09-26"},{"lineNumber":338,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":339,"author":{"gitId":"Rachel-AG"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-09-26"},{"lineNumber":340,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":341,"author":{"gitId":"Rachel-AG"},"content":"    Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":342,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":343,"author":{"gitId":"Rachel-AG"},"content":"* 1b. The given parameters does not include all required parameters.","lastModifiedDate":"2022-09-26"},{"lineNumber":344,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":345,"author":{"gitId":"Rachel-AG"},"content":"    * 1b1. System shows an error message.","lastModifiedDate":"2022-09-26"},{"lineNumber":346,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":347,"author":{"gitId":"Rachel-AG"},"content":"  Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":348,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":349,"author":{"gitId":"aarontangr"},"content":"**Use case: View internship(s)**","lastModifiedDate":"2022-09-28"},{"lineNumber":350,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":351,"author":{"gitId":"aarontangr"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":352,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":353,"author":{"gitId":"aarontangr"},"content":"1. User wants to view more details of an internship application.","lastModifiedDate":"2022-09-28"},{"lineNumber":354,"author":{"gitId":"aarontangr"},"content":"2. System displays more details of the internship application.","lastModifiedDate":"2022-09-28"},{"lineNumber":355,"author":{"gitId":"aarontangr"},"content":"3. Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":356,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":357,"author":{"gitId":"aarontangr"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":358,"author":{"gitId":"aarontangr"},"content":"*{More to be added}*","lastModifiedDate":"2022-09-28"},{"lineNumber":359,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":360,"author":{"gitId":"Elben85"},"content":"**Use case: Filter internship(s)**","lastModifiedDate":"2022-09-27"},{"lineNumber":361,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":362,"author":{"gitId":"Elben85"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":363,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":364,"author":{"gitId":"Elben85"},"content":"1. User requests to filter internships by category and keywords(s)","lastModifiedDate":"2022-09-27"},{"lineNumber":365,"author":{"gitId":"Elben85"},"content":"2. PleaseHireUs shows a list of internships filtered by corresponding categories and keywords","lastModifiedDate":"2022-09-27"},{"lineNumber":366,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":367,"author":{"gitId":"Elben85"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":368,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":369,"author":{"gitId":"Elben85"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":370,"author":{"gitId":"Elben85"},"content":"* 1a. No keywords is given","lastModifiedDate":"2022-09-27"},{"lineNumber":371,"author":{"gitId":"Elben85"},"content":"    * 1a1. PleaseHireUs shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":372,"author":{"gitId":"Elben85"},"content":"    ","lastModifiedDate":"2022-09-27"},{"lineNumber":373,"author":{"gitId":"Elben85"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":374,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":375,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":376,"author":{"gitId":"Elben85"},"content":"* 1c. No category is given","lastModifiedDate":"2022-09-27"},{"lineNumber":377,"author":{"gitId":"Elben85"},"content":"  * 1c1. The category is set to default category","lastModifiedDate":"2022-09-27"},{"lineNumber":378,"author":{"gitId":"Elben85"},"content":"  * 1c2. Continue from 2","lastModifiedDate":"2022-09-27"},{"lineNumber":379,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":380,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":381,"author":{"gitId":"Elben85"},"content":"* 2a. The list is empty. ","lastModifiedDate":"2022-09-27"},{"lineNumber":382,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":383,"author":{"gitId":"Elben85"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":384,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":385,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":386,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"Rachel-AG"},"content":"2.  Should be able to hold up to 500 internships without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-26"},{"lineNumber":392,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"sugiyem"},"content":"### Deleting internship(s)","lastModifiedDate":"2022-09-26"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"sugiyem"},"content":"1. Deleting internship(s) while all internships are being shown","lastModifiedDate":"2022-09-26"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"sugiyem"},"content":"   1. Prerequisites: List all internships using the `list` command. The list is non-empty.","lastModifiedDate":"2022-09-26"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"sugiyem"},"content":"      Expected: First internship is deleted from the list. Details of the deleted internship shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2022-09-26"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"sugiyem"},"content":"   1. Test case: `delete 0 2`\u003cbr\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":439,"author":{"gitId":"sugiyem"},"content":"      Expected: No internship is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-09-26"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"sugiyem"},"content":"1. Deleting internship(s) while only the selected internships are being shown","lastModifiedDate":"2022-09-26"},{"lineNumber":442,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":443,"author":{"gitId":"sugiyem"},"content":"   1. Prerequisites: List specific internships using the `find` command. The list is non-empty.","lastModifiedDate":"2022-09-26"},{"lineNumber":444,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":445,"author":{"gitId":"sugiyem"},"content":"   1. Test case: `delete 1 2`\u003cbr\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":446,"author":{"gitId":"sugiyem"},"content":"      Expected: If there is only one internship in the list, no internship is deleted and error details will be shown in the status message. Else if there are at least two internships on the list, the first and second internship will be deleted from the list. Details of the deleted internships are shown in the status message and the timestamp in the status bar is updated.","lastModifiedDate":"2022-09-26"},{"lineNumber":447,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":448,"author":{"gitId":"sugiyem"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":449,"author":{"gitId":"sugiyem"},"content":"      Expected: No internship is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-09-26"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Elben85":30,"Rachel-AG":28,"aarontangr":11,"JustinS00":18,"-":350,"sugiyem":21}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"PleaseHireUs (PHU) is a **desktop app for managing internships for computer science students ","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"## Table of Contents","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"  {:toc}","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"1. Download the latest `PleaseHireUs.jar` from [here](https://github.com/AY2223S1-CS2103T-W17-4/tp/releases).","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your application.","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"   * **`list`** : Lists all internships.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"   * **`add n/Grab p/software engineer pr/ASSESSMENT web/https://www.grab.com/sg/about`** : Adds a new internship to the internship tracker.","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"   * **`delete 3`** : Deletes the 3rd internship shown in the current list.","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"   * **`clear`** : Deletes all internships.","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"  e.g. in `add n/COMPANY_NAME`, `COMPANY_NAME` is a parameter which can be used as `add n/Grab`.","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"  e.g `n/COMPANY_NAME [t/TAG]` can be used as `n/Jane Street t/$$$` or as `n/Jane Street`.","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/$$$`, `t/free lunch t/transport` etc.","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"  e.g. if the command specifies `n/COMPANY_NAME pr/APPLICATION_PROCESS`, `pr/APPLICATION_PROCESS n/COMPANY_NAME` is also acceptable.","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"  e.g. if you specify `n/Bytedance n/Tiktok`, only `n/Tiktok` will be taken.","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"### Adding an internship: `add`","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Rachel-AG"},"content":"Adds an internship into the list.","lastModifiedDate":"2022-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Rachel-AG"},"content":"Format: `add n/COMPANY_NAME p/POSITION [pr/APPLICATION_PROCESS] [d/DATE] [web/WEBSITE]`","lastModifiedDate":"2022-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"Rachel-AG"},"content":"* Possible options for `APPLICATION_PROCESS` : `APPLY`, `ASSESSMENT`, `INTERVIEW`, `OFFER`, `ACCEPTED`, `REJECTED` ","lastModifiedDate":"2022-09-24"},{"lineNumber":87,"author":{"gitId":"Rachel-AG"},"content":"* Case-insensitive: `Apply`, `APPLY`, and `apply` are all acceptable inputs.","lastModifiedDate":"2022-09-24"},{"lineNumber":88,"author":{"gitId":"Rachel-AG"},"content":"* `DATE` should be in dd-mm-yyyy format.","lastModifiedDate":"2022-09-24"},{"lineNumber":89,"author":{"gitId":"Rachel-AG"},"content":"* `DATE` will be set to today’s date by default.","lastModifiedDate":"2022-09-24"},{"lineNumber":90,"author":{"gitId":"Rachel-AG"},"content":"* `APPLICATION_PROCESS` will be set to `APPLY` by default.","lastModifiedDate":"2022-09-24"},{"lineNumber":91,"author":{"gitId":"Rachel-AG"},"content":"* `WEBSITE` will be set to “NA” by default.","lastModifiedDate":"2022-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"Rachel-AG"},"content":"* `add n/Grab p/software engineer pr/ASSESSMENT web/https://www.grab.com/sg/about`","lastModifiedDate":"2022-09-24"},{"lineNumber":95,"author":{"gitId":"Rachel-AG"},"content":"* `add n/Tiktok p/backend engineer`","lastModifiedDate":"2022-09-24"},{"lineNumber":96,"author":{"gitId":"Rachel-AG"},"content":"* `add n/Shopee p/frontend engineer pr/INTERVIEW d/14-09-2022`","lastModifiedDate":"2022-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"### Listing all internships : `list`","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"Shows a list of all internships. List of internships can be sorted by category in ascending or descending order.","lastModifiedDate":"2022-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"Format: `list [c/CATEGORY] [REVERSE]`","lastModifiedDate":"2022-09-24"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"* List the internships sorted by category and in ascending or descending order","lastModifiedDate":"2022-09-24"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"* The category is optional. By default, without stating the category, `list` will display all internships in no particular order","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"* The CATEGORY tag refers to company_name (or n), position (or p), application_process (or pr), website (or web), date(or d) (case-insensitive)","lastModifiedDate":"2022-09-24"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"* The reverse tag is optional. It can take on the value `true` or `false`. The reverse tag is set to false by default if not stated. List of internships will be shown in ascending order.","lastModifiedDate":"2022-09-24"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"* If REVERSE is set to `true`. List of internships will be displayed in descending order","lastModifiedDate":"2022-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"Examples:","lastModifiedDate":"2022-09-24"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"* `list c/n true`","lastModifiedDate":"2022-09-24"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"* `list c/website true`","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"* `list c/position false`","lastModifiedDate":"2022-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"Elben85"},"content":"### Locating internships by: `find`","lastModifiedDate":"2022-09-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"Elben85"},"content":"Find internships whose data in the target category matched the given keyword/s.","lastModifiedDate":"2022-09-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"Elben85"},"content":"Format: `find [c/CATEGORY] KEYWORDS…`","lastModifiedDate":"2022-09-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"Elben85"},"content":"* The `CATEGORY` tag refers to company_name (or n), position (or p), application_process (or pr), website (or web), date(or d) (case-insensitive)","lastModifiedDate":"2022-09-27"},{"lineNumber":124,"author":{"gitId":"Elben85"},"content":"* If not specified, the `CATEGORY` tag will be set to company_name as a default","lastModifiedDate":"2022-09-27"},{"lineNumber":125,"author":{"gitId":"Elben85"},"content":"* Only the target category is searched.","lastModifiedDate":"2022-09-27"},{"lineNumber":126,"author":{"gitId":"Elben85"},"content":"* A `KEYWORD` will match any string if the `KEYWORD` is contained in that string e.g. `Han` will match both `Reyhan` and `Handy`","lastModifiedDate":"2022-09-27"},{"lineNumber":127,"author":{"gitId":"Elben85"},"content":"* Internships whose target category match at least one keyword will be returned (i.e. OR search). e.g. `c/company_name Hans Bo` can return internships with company name of `Hans Gruber` or `Bo Yang`","lastModifiedDate":"2022-09-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"Elben85"},"content":"* `find c/p engineer` returns a list of internships with a position of Algorithm Engineer and Software Engineer","lastModifiedDate":"2022-09-27"},{"lineNumber":131,"author":{"gitId":"Elben85"},"content":"* `find sea shop` returns a list of internships with company name of Sea Labs, Shopee, and Shopback","lastModifiedDate":"2022-09-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":135,"author":{"gitId":"sugiyem"},"content":"### Deleting internship(s) : `delete`","lastModifiedDate":"2022-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"sugiyem"},"content":"Deletes the specified internship(s) from the list.","lastModifiedDate":"2022-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"sugiyem"},"content":"Format: `delete INDEX...`","lastModifiedDate":"2022-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"sugiyem"},"content":"* Deletes the internship at the specified `INDEX`.","lastModifiedDate":"2022-09-22"},{"lineNumber":142,"author":{"gitId":"sugiyem"},"content":"* The index refers to the index number shown in the displayed internship list.","lastModifiedDate":"2022-09-22"},{"lineNumber":143,"author":{"gitId":"sugiyem"},"content":"* The list use 1-based indexing, which means the index **must be a positive integer** such as 1, 2, 3, …​","lastModifiedDate":"2022-09-22"},{"lineNumber":144,"author":{"gitId":"sugiyem"},"content":"* Can add multiple `INDEX` to delete multiple internships.","lastModifiedDate":"2022-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"sugiyem"},"content":"* `list` followed by `delete 1 3` deletes the 1st and 3rd internship from the list.","lastModifiedDate":"2022-09-22"},{"lineNumber":148,"author":{"gitId":"sugiyem"},"content":"* `find TikTok` followed by `delete 1` deletes the 1st internship in the results of the `find` command.","lastModifiedDate":"2022-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"aarontangr"},"content":"### View details of an internship: `view`","lastModifiedDate":"2022-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"aarontangr"},"content":"View details of list item at index","lastModifiedDate":"2022-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"aarontangr"},"content":"Format: `view NAME [INDEX]`","lastModifiedDate":"2022-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":156,"author":{"gitId":"aarontangr"},"content":"* Only the name is searched.","lastModifiedDate":"2022-09-25"},{"lineNumber":157,"author":{"gitId":"aarontangr"},"content":"* Companies matching the name will be returned (i.e. OR search). ","lastModifiedDate":"2022-09-25"},{"lineNumber":158,"author":{"gitId":"aarontangr"},"content":"e.g. Shopee will return Shopee, Shopee Labs as a numbered list.","lastModifiedDate":"2022-09-25"},{"lineNumber":159,"author":{"gitId":"aarontangr"},"content":"* If only one company matches the name, its details will immediately be shown.","lastModifiedDate":"2022-09-25"},{"lineNumber":160,"author":{"gitId":"aarontangr"},"content":"* Call the command again with the index to retrieve details about the application status at the company with corresponding index.","lastModifiedDate":"2022-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"aarontangr"},"content":"* `view Shopee` returns","lastModifiedDate":"2022-09-25"},{"lineNumber":164,"author":{"gitId":"aarontangr"},"content":"`1. Shopee`","lastModifiedDate":"2022-09-25"},{"lineNumber":165,"author":{"gitId":"aarontangr"},"content":"`2. Shopee Labs`","lastModifiedDate":"2022-09-25"},{"lineNumber":166,"author":{"gitId":"aarontangr"},"content":"* `view Shopee 1` returns `Shopee, CEO, 29/02/23, offer, NA`","lastModifiedDate":"2022-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"JustinS00"},"content":"### Editing internships `[coming in v1.2b]` `edit`","lastModifiedDate":"2022-09-28"},{"lineNumber":169,"author":{"gitId":"JustinS00"},"content":"Edit details of an internship","lastModifiedDate":"2022-09-28"},{"lineNumber":170,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":171,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"JustinS00"},"content":"Clears all entries from the internship tracker.","lastModifiedDate":"2022-09-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"JustinS00"},"content":"PleaseHireUs data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":191,"author":{"gitId":"JustinS00"},"content":"PleaseHireUs data are saved as a JSON file `[JAR file location]/data/pleasehireus.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":197,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":198,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":199,"author":{"gitId":"JustinS00"},"content":"### Archiving data files `[coming in v1.3]`","lastModifiedDate":"2022-09-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"JustinS00"},"content":"## 3. FAQ","lastModifiedDate":"2022-09-28"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"JustinS00"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous PleaseHireUs home folder.","lastModifiedDate":"2022-09-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"JustinS00"},"content":"## 4. Command summary","lastModifiedDate":"2022-09-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"sugiyem"},"content":"**Delete** | `delete INDEX...`\u003cbr\u003e e.g., `delete 1 3`","lastModifiedDate":"2022-09-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"Elben85"},"content":"**Find** | `find [c/CATEGORY] KEYWORDS...`\u003cbr\u003e e.g., `find c/p engineer`","lastModifiedDate":"2022-09-27"},{"lineNumber":221,"author":{"gitId":"JustinS00"},"content":"**List** | list [c/CATEGORY] [REVERSE] \u003cbr\u003e e.g, `list c/website true`","lastModifiedDate":"2022-10-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Elben85":11,"Rachel-AG":11,"aarontangr":12,"JustinS00":44,"-":134,"sugiyem":10}},{"path":"docs/team/aarontangr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"title: Aaron Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"### Project: PleaseHireUs","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"PleaseHireUs (PHU) is a desktop app for managing internships, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PHU can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"* **New Feature**: Added the ability view more details of selected internship.","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"    * What it does: allows the user to view contact details and more.","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    * Justification: This feature improves the product significantly because a user will want to view detailed information.","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003daarontangr\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":" ","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"* **Project management**:","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"    * User Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"        * Added documentation for the features `view` [\\#72]()","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"* **Community**:","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"* **Tools**:","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"aarontangr":25}},{"path":"docs/team/elben85.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Elben85"},"content":"#Elbert Benedict\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"Elben85"},"content":"##\u003cspan style\u003d\"color:orange\"\u003e Project: PleaseHireUs \u003c/span\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"Elben85"},"content":"### Project: PleaseHireUs","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Elben85"},"content":"PleaseHireUs (PHU) is a **desktop app for managing internships, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"Elben85"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"Elben85"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"Elben85"},"content":"    * What it does:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"Elben85"},"content":"    * Justification:","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"Elben85"},"content":"    * Highlights:","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"Elben85"},"content":"    * Credits:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"Elben85"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"Elben85"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dElben85\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"Elben85"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"Elben85"},"content":"    * To be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"Elben85"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"Elben85"},"content":"    * To be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"    * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"        * Added documentations for the features `find`","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"Elben85"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"Elben85"},"content":"        * To be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"Elben85"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"Elben85"},"content":"    * To be added soon","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Elben85":33}},{"path":"docs/team/justins00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"#Justin Siaw\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"##\u003cspan style\u003d\"color:orange\"\u003e Project: PleaseHireUs \u003c/span\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"PleaseHireUs (PHU) is a desktop app for managing internships, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PHU can get your internship management tasks done faster than traditional GUI apps.Given below are my contributions to the project","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"* **Project management**:","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"  * User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"* **Community**:","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"* **Tools**:","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"JustinS00":24}},{"path":"docs/team/rachel-ag.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"# Rachel Angelyn Gunawan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"\u003cspan style\u003d\"color:orange\"\u003e ## Project: PleaseHireUs \u003c/span\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"PleaseHireUs (PHU) is a desktop app for managing internships, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PHU can get your internship management tasks done faster than traditional GUI apps. Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"* **New Feature**: Added the add command that allows the user to add an internship.","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"    * What it does: allows the user to add an internship and its details (such as position, application process, and date) to be managed by the app.","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"* **Project management**:","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"    * User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"        * Added documentation for the features `add` [\\#72]()","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"        *   * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"* **Community**:","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]()) ","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"* **Tools**:","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"Rachel-AG":27}},{"path":"docs/team/sugiyem.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sugiyem"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"sugiyem"},"content":"layout: page","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"sugiyem"},"content":"title: Farrel Dwireswara Salim\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"sugiyem"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"sugiyem"},"content":"### Project: PleaseHireUs","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"sugiyem"},"content":"PleaseHireUs (PHU) is a **desktop app for managing internships, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"sugiyem"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"sugiyem"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"sugiyem"},"content":"  * What it does: ","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"sugiyem"},"content":"  * Justification: ","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"sugiyem"},"content":"  * Highlights: ","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"sugiyem"},"content":"  * Credits: ","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"sugiyem"},"content":"  ","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"sugiyem"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"sugiyem"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dsugiyem\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"sugiyem"},"content":"* **Project management**:","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"sugiyem"},"content":"  * To be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"sugiyem"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"sugiyem"},"content":"  * To be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"sugiyem"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"sugiyem"},"content":"  * User Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"sugiyem"},"content":"    * Added documentations for the features `delete`","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"sugiyem"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"sugiyem"},"content":"    * To be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"sugiyem"},"content":"* **Community**:","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"sugiyem"},"content":"  * To be added soon","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"sugiyem":35}},{"path":"src/main/java/seedu/address/commons/core/index/Indexes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sugiyem"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"sugiyem"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"sugiyem"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"sugiyem"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"sugiyem"},"content":"import seedu.address.commons.exceptions.IllegalIndexException;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"sugiyem"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"sugiyem"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"sugiyem"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"sugiyem"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"sugiyem"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"sugiyem"},"content":" * Represents a unique collection of Index objects.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"sugiyem"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"sugiyem"},"content":"public class Indexes {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"sugiyem"},"content":"    private Set\u003cIndex\u003e indexes;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"sugiyem"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"sugiyem"},"content":"     * Constructs a new Indexes object given an array of strings.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"sugiyem"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"sugiyem"},"content":"     * @param unParsedIndexes The array of strings that is going to be parsed.","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"sugiyem"},"content":"     * @throws ParseException If there is a string from unParsedIndexes that can\u0027t be parsed.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"sugiyem"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"sugiyem"},"content":"    public Indexes(String[] unParsedIndexes) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"sugiyem"},"content":"        indexes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"sugiyem"},"content":"        for (String arg : unParsedIndexes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"sugiyem"},"content":"            indexes.add(ParserUtil.parseIndex(arg));","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"sugiyem"},"content":"    public Indexes(Set\u003cIndex\u003e indexes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"sugiyem"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"sugiyem"},"content":"    public UniquePersonList getAllPersonsFromIndexes(List\u003cPerson\u003e personList)","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"sugiyem"},"content":"            throws IllegalIndexException {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"sugiyem"},"content":"        UniquePersonList selectedPersons \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"sugiyem"},"content":"        for (Index selectedIndex : indexes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"sugiyem"},"content":"            if (selectedIndex.getZeroBased() \u003e\u003d personList.size()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"sugiyem"},"content":"                throw new IllegalIndexException();","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"sugiyem"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"sugiyem"},"content":"            Person currentPerson \u003d personList.get(selectedIndex.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"sugiyem"},"content":"            selectedPersons.add(currentPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"sugiyem"},"content":"        return selectedPersons;","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"sugiyem"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"sugiyem"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"sugiyem"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"sugiyem"},"content":"                || (other instanceof Indexes // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"sugiyem"},"content":"                \u0026\u0026 indexes.equals(((Indexes) other).indexes)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"sugiyem"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"sugiyem":59}},{"path":"src/main/java/seedu/address/commons/exceptions/IllegalIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sugiyem"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"sugiyem"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"sugiyem"},"content":" * Signals that an Index object doesn\u0027t fulfill the range constraint.","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"sugiyem"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"sugiyem"},"content":"public class IllegalIndexException extends Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"sugiyem"},"content":"    public IllegalIndexException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"sugiyem"},"content":"        super(\"The given Index object is invalid!\");","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"sugiyem"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"sugiyem":10}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICATION_PROCESS;","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEBSITE;","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_POSITION + \"POSITION \"","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_APPLICATION_PROCESS + \"APPLICATION PROCESS] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_WEBSITE + \"WEBSITE] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_NAME + \"Google \"","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_REMARK + \"Apply for Y2 summer break \"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_POSITION + \"Backend Intern \"","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_APPLICATION_PROCESS + \"APPLY \"","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_DATE + \"11-12-2022 \"","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_WEBSITE + \"https://careers.google.com/jobs \"","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_TAG + \"high \"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_TAG + \"java\";","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New internship added: %1$s\";","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This internship already exists in the list\";","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rachel-AG":22,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"sugiyem"},"content":"import seedu.address.commons.core.index.Indexes;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"sugiyem"},"content":"import seedu.address.commons.exceptions.IllegalIndexException;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"sugiyem"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2022-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"sugiyem"},"content":" * Deletes all internships identified using their displayed index from the PleaseHireUs","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"sugiyem"},"content":"            + \": Deletes the internships identified by the index numbers used in the displayed internship list.\\n\"","lastModifiedDate":"2022-09-22"},{"lineNumber":24,"author":{"gitId":"sugiyem"},"content":"            + \"Parameters: INDEX... (all indexes must be a positive integer)\\n\"","lastModifiedDate":"2022-09-22"},{"lineNumber":25,"author":{"gitId":"sugiyem"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 3\";","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"sugiyem"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Internship(s):\\n%s\";","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"sugiyem"},"content":"    private final Indexes targetIndexes;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"sugiyem"},"content":"    public DeleteCommand(Indexes targetIndexes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"sugiyem"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"sugiyem"},"content":"        UniquePersonList personsToRemove;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"sugiyem"},"content":"        try {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"sugiyem"},"content":"            personsToRemove \u003d targetIndexes.getAllPersonsFromIndexes(lastShownList);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"sugiyem"},"content":"        } catch (IllegalIndexException error) {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"sugiyem"},"content":"        for (Person personToDelete : personsToRemove) {","lastModifiedDate":"2022-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-09-22"},{"lineNumber":50,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":51,"author":{"gitId":"sugiyem"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personsToRemove));","lastModifiedDate":"2022-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"sugiyem"},"content":"                \u0026\u0026 targetIndexes.equals(((DeleteCommand) other).targetIndexes)); // state check","lastModifiedDate":"2022-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":40,"sugiyem":20}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_POSITION + \"PHONE] \"","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_REMARK + \"ADDRESS] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_POSITION + \"91234567 \"","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"Rachel-AG"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"Rachel-AG"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedRemark, personToEdit.getPosition(),","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"Rachel-AG"},"content":"                personToEdit.getApplicationProcess(), personToEdit.getDate(), personToEdit.getWebsite(), updatedTags);","lastModifiedDate":"2022-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"Rachel-AG"},"content":"        private Remark remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"Rachel-AG"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"Rachel-AG"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, remark, tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"Rachel-AG"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"Rachel-AG"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"Rachel-AG"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2022-10-09"},{"lineNumber":184,"author":{"gitId":"Rachel-AG"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"Rachel-AG"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2022-10-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Rachel-AG":17,"-":209}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICATION_PROCESS;","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEBSITE;","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.ApplicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Position;","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Website;","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_REMARK,","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"                        PREFIX_POSITION, PREFIX_APPLICATION_PROCESS, PREFIX_DATE, PREFIX_WEBSITE, PREFIX_TAG);","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_POSITION)","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(Phone.DEFAULT_VALUE));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElse(Email.DEFAULT_VALUE));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(Remark.DEFAULT_VALUE));","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"        Position position \u003d ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2022-09-23"},{"lineNumber":57,"author":{"gitId":"Rachel-AG"},"content":"        Website website \u003d ParserUtil.parseWebsite(argMultimap.getValue(PREFIX_WEBSITE).orElse(Website.DEFAULT_VALUE));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Rachel-AG"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE)","lastModifiedDate":"2022-09-24"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"                .orElse(LocalDate.now().format(Date.DEFAULT_FORMATTER)));","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"        ApplicationProcess applicationProcess \u003d ParserUtil.parseApplicationProcess(","lastModifiedDate":"2022-09-23"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"                argMultimap.getValue(PREFIX_APPLICATION_PROCESS).orElse(\"APPLY\"));","lastModifiedDate":"2022-09-23"},{"lineNumber":62,"author":{"gitId":"Rachel-AG"},"content":"        Person person \u003d new Person(name, phone, email, remark, position, applicationProcess, date, website, tagList);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Rachel-AG":24,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_APPLICATION_PROCESS \u003d new Prefix(\"pr/\");","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_WEBSITE \u003d new Prefix(\"web/\");","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"ph/\");","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Rachel-AG":6,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"sugiyem"},"content":"import seedu.address.commons.core.index.Indexes;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"sugiyem"},"content":"            String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"sugiyem"},"content":"            String[] selectedIndexes \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"sugiyem"},"content":"            Indexes indexes \u003d new Indexes(selectedIndexes);","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":25,"author":{"gitId":"sugiyem"},"content":"            return new DeleteCommand(indexes);","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":26,"sugiyem":6}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Rachel-AG":4,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.ApplicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Position;","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Website;","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"     * Parses a {@code String remark} into a {@code Remark}.","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"Rachel-AG"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"Rachel-AG"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"Rachel-AG"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"Rachel-AG"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":100,"author":{"gitId":"Rachel-AG"},"content":"     * Parses a {@code String position} into a {@code Position}.","lastModifiedDate":"2022-09-24"},{"lineNumber":101,"author":{"gitId":"Rachel-AG"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-24"},{"lineNumber":102,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-24"},{"lineNumber":103,"author":{"gitId":"Rachel-AG"},"content":"     * @throws ParseException if the given {@code position} is invalid.","lastModifiedDate":"2022-09-24"},{"lineNumber":104,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":105,"author":{"gitId":"Rachel-AG"},"content":"    public static Position parsePosition(String position) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":106,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(position);","lastModifiedDate":"2022-09-23"},{"lineNumber":107,"author":{"gitId":"Rachel-AG"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2022-09-23"},{"lineNumber":108,"author":{"gitId":"Rachel-AG"},"content":"        if (!Position.isValidPosition((trimmedPosition))) {","lastModifiedDate":"2022-09-23"},{"lineNumber":109,"author":{"gitId":"Rachel-AG"},"content":"            throw new ParseException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":110,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":111,"author":{"gitId":"Rachel-AG"},"content":"        return new Position(trimmedPosition);","lastModifiedDate":"2022-09-23"},{"lineNumber":112,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":113,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":114,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":115,"author":{"gitId":"Rachel-AG"},"content":"     * Parses a {@code String website} into a {@code Website}.","lastModifiedDate":"2022-09-24"},{"lineNumber":116,"author":{"gitId":"Rachel-AG"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-24"},{"lineNumber":117,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-24"},{"lineNumber":118,"author":{"gitId":"Rachel-AG"},"content":"     * @throws ParseException if the given {@code website} is invalid.","lastModifiedDate":"2022-09-24"},{"lineNumber":119,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":120,"author":{"gitId":"Rachel-AG"},"content":"    public static Website parseWebsite(String website) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":121,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(website);","lastModifiedDate":"2022-09-23"},{"lineNumber":122,"author":{"gitId":"Rachel-AG"},"content":"        String trimmedWebsite \u003d website.trim();","lastModifiedDate":"2022-09-23"},{"lineNumber":123,"author":{"gitId":"Rachel-AG"},"content":"        if (!Website.isValidWebsite(trimmedWebsite)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":124,"author":{"gitId":"Rachel-AG"},"content":"            throw new ParseException(Website.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":125,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":126,"author":{"gitId":"Rachel-AG"},"content":"        return new Website(trimmedWebsite);","lastModifiedDate":"2022-09-23"},{"lineNumber":127,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":128,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":129,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":130,"author":{"gitId":"Rachel-AG"},"content":"     * Parses a {@code String applicationProcess} into an {@code ApplicationProcess}.","lastModifiedDate":"2022-09-24"},{"lineNumber":131,"author":{"gitId":"Rachel-AG"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-24"},{"lineNumber":132,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-24"},{"lineNumber":133,"author":{"gitId":"Rachel-AG"},"content":"     * @throws ParseException if the given {@code applicationProcess} is invalid.","lastModifiedDate":"2022-09-24"},{"lineNumber":134,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":135,"author":{"gitId":"Rachel-AG"},"content":"    public static ApplicationProcess parseApplicationProcess(String applicationProcess) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":136,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(applicationProcess);","lastModifiedDate":"2022-09-23"},{"lineNumber":137,"author":{"gitId":"Rachel-AG"},"content":"        String trimmedApplicationProcess \u003d applicationProcess.trim();","lastModifiedDate":"2022-09-23"},{"lineNumber":138,"author":{"gitId":"Rachel-AG"},"content":"        if (!ApplicationProcess.isValidApplicationProcess(trimmedApplicationProcess)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":139,"author":{"gitId":"Rachel-AG"},"content":"            throw new ParseException(ApplicationProcess.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":140,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":141,"author":{"gitId":"Rachel-AG"},"content":"        return new ApplicationProcess(trimmedApplicationProcess);","lastModifiedDate":"2022-09-23"},{"lineNumber":142,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":143,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":171,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":172,"author":{"gitId":"Rachel-AG"},"content":"     * Parses a {@code String date} into an {@code Date}.","lastModifiedDate":"2022-09-24"},{"lineNumber":173,"author":{"gitId":"Rachel-AG"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-24"},{"lineNumber":174,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-24"},{"lineNumber":175,"author":{"gitId":"Rachel-AG"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-09-24"},{"lineNumber":176,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":177,"author":{"gitId":"Rachel-AG"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":178,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-09-23"},{"lineNumber":179,"author":{"gitId":"Rachel-AG"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-09-23"},{"lineNumber":180,"author":{"gitId":"Rachel-AG"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":181,"author":{"gitId":"Rachel-AG"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":182,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":183,"author":{"gitId":"Rachel-AG"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2022-09-23"},{"lineNumber":184,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Rachel-AG":71,"-":114}},{"path":"src/main/java/seedu/address/model/person/ApplicationProcess.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":" * Represents an internship\u0027s application process state in the list.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"public class ApplicationProcess {","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"     * Represents the possible state of application process of an internship.","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"    enum ApplicationProcessState {","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"        APPLY, ASSESSMENT, INTERVIEW, OFFER, ACCEPTED, REJECTED;","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"        /**","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"         * Returns true if a given string is a valid application state.","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"         */","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"        public static boolean isInApplicationProcessState(String test) {","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"            return Arrays.stream(ApplicationProcessState.values()).anyMatch(stage -\u003e stage.name().equals(test));","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Application process can take the following values: \"","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"            + \"APPLY, ASSESSMENT, INTERVIEW, OFFER, ACCEPTED, REJECTED\";","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"    public final ApplicationProcessState value;","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs an {@code ApplicationProcess}.","lastModifiedDate":"2022-09-24"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"     * @param state A valid state of application process.","lastModifiedDate":"2022-09-24"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    public ApplicationProcess(String state) {","lastModifiedDate":"2022-09-24"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(state);","lastModifiedDate":"2022-09-24"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"        value \u003d ApplicationProcessState.valueOf(state.toUpperCase());","lastModifiedDate":"2022-09-24"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"     * Returns true if a given string is a valid application state.","lastModifiedDate":"2022-09-24"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"    public static boolean isValidApplicationProcess(String test) {","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"        String upperCasedTest \u003d test.toUpperCase();","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"        return ApplicationProcessState.isInApplicationProcessState(upperCasedTest);","lastModifiedDate":"2022-09-24"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"    public String toString() {","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"        return value.name();","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-23"},{"lineNumber":57,"author":{"gitId":"Rachel-AG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-23"},{"lineNumber":58,"author":{"gitId":"Rachel-AG"},"content":"                || (other instanceof ApplicationProcess // instanceof handles nulls","lastModifiedDate":"2022-09-23"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 value.equals(((ApplicationProcess) other).value)); // state check","lastModifiedDate":"2022-09-23"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":62,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":63,"author":{"gitId":"Rachel-AG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"Rachel-AG"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-23"},{"lineNumber":65,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":66,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":67,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"Rachel-AG":67}},{"path":"src/main/java/seedu/address/model/person/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":" * Represents the date of a internship in the list.","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"public class Date {","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"            \"Date should be in dd-mm-yyyy format\";","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"    public static final DateTimeFormatter DEFAULT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"    public static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"    public final LocalDate value;","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"     * @param date A valid date in string format of dd-mm-yyyy.","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"    public Date(String date) {","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"        this.value \u003d LocalDate.parse(date, DEFAULT_FORMATTER);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    public Date(LocalDate date) {","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"        this.value \u003d date;","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"     * Returns true if a given string is in a valid date position.","lastModifiedDate":"2022-09-24"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"        try {","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"            LocalDate.parse(test, DEFAULT_FORMATTER);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"            return false;","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"        return true;","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"     * Returns a string representation of the date in input format","lastModifiedDate":"2022-09-24"},{"lineNumber":57,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":58,"author":{"gitId":"Rachel-AG"},"content":"    public String toInputFormat() {","lastModifiedDate":"2022-09-24"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"        return value.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-09-24"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Rachel-AG"},"content":"     * Returns a string representation of the date in display format","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Rachel-AG"},"content":"    public String toDisplayFormat() {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"Rachel-AG"},"content":"        return DISPLAY_FORMATTER.format(value);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":70,"author":{"gitId":"Rachel-AG"},"content":"    public String toString() {","lastModifiedDate":"2022-09-23"},{"lineNumber":71,"author":{"gitId":"Rachel-AG"},"content":"        return value.toString();","lastModifiedDate":"2022-09-23"},{"lineNumber":72,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":74,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":75,"author":{"gitId":"Rachel-AG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-23"},{"lineNumber":76,"author":{"gitId":"Rachel-AG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-23"},{"lineNumber":77,"author":{"gitId":"Rachel-AG"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-09-23"},{"lineNumber":78,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 value.equals(((Date) other).value)); // state check","lastModifiedDate":"2022-09-23"},{"lineNumber":79,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":80,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":81,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":82,"author":{"gitId":"Rachel-AG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-23"},{"lineNumber":83,"author":{"gitId":"Rachel-AG"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-23"},{"lineNumber":84,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":85,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":86,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":87,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"Rachel-AG":87}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_VALUE \u003d \"NA\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(DEFAULT_VALUE);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rachel-AG":2,"-":69}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"    private final Position position;","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"    private final Remark remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"    private final ApplicationProcess applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    private final Date date;","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"    private final Website website;","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"    public Person(Name name, Phone phone, Email email, Remark remark, Position position,","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"                  ApplicationProcess applicationProcess, Date date, Website website, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"        requireAllNonNull(name, position, tags);","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"        this.applicationProcess \u003d applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"        this.website \u003d website;","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"    public Remark getRemark() {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"        return remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"Rachel-AG"},"content":"    public Position getPosition() {","lastModifiedDate":"2022-09-23"},{"lineNumber":65,"author":{"gitId":"Rachel-AG"},"content":"        return position;","lastModifiedDate":"2022-09-23"},{"lineNumber":66,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":67,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":68,"author":{"gitId":"Rachel-AG"},"content":"    public Website getWebsite() {","lastModifiedDate":"2022-09-23"},{"lineNumber":69,"author":{"gitId":"Rachel-AG"},"content":"        return website;","lastModifiedDate":"2022-09-23"},{"lineNumber":70,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":71,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":72,"author":{"gitId":"Rachel-AG"},"content":"    public Date getDate() {","lastModifiedDate":"2022-09-23"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"        return date;","lastModifiedDate":"2022-09-23"},{"lineNumber":74,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":75,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":76,"author":{"gitId":"Rachel-AG"},"content":"    public ApplicationProcess getApplicationProcess() {","lastModifiedDate":"2022-09-23"},{"lineNumber":77,"author":{"gitId":"Rachel-AG"},"content":"        return applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"Rachel-AG"},"content":"     * Returns true if both persons have the same name and position.","lastModifiedDate":"2022-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName()) \u0026\u0026 otherPerson.getPosition().equals(getPosition());","lastModifiedDate":"2022-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 otherPerson.getRemark().equals(getRemark())","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-09-23"},{"lineNumber":121,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 otherPerson.getPosition().equals(getPosition())","lastModifiedDate":"2022-09-23"},{"lineNumber":122,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 otherPerson.getWebsite().equals(getWebsite())","lastModifiedDate":"2022-09-23"},{"lineNumber":123,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 otherPerson.getDate().equals(getDate())","lastModifiedDate":"2022-09-23"},{"lineNumber":124,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 otherPerson.getApplicationProcess().equals(getApplicationProcess());","lastModifiedDate":"2022-09-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"Rachel-AG"},"content":"        return Objects.hash(name, phone, email, remark, tags, position, website, date, applicationProcess);","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"Rachel-AG"},"content":"                .append(\"; Position: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"Rachel-AG"},"content":"                .append(getPosition())","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"Rachel-AG"},"content":"                .append(\"; Application Process: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"Rachel-AG"},"content":"                .append(getApplicationProcess())","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"Rachel-AG"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"Rachel-AG"},"content":"                .append(getDate())","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"Rachel-AG"},"content":"                .append(\"; Website: \")","lastModifiedDate":"2022-09-23"},{"lineNumber":148,"author":{"gitId":"Rachel-AG"},"content":"                .append(getWebsite())","lastModifiedDate":"2022-09-23"},{"lineNumber":149,"author":{"gitId":"Rachel-AG"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"Rachel-AG"},"content":"                .append(getRemark());","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rachel-AG":48,"-":112}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_VALUE \u003d \"NA\";","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(DEFAULT_VALUE);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rachel-AG":3,"-":52}},{"path":"src/main/java/seedu/address/model/person/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":" * Represents the position of the internship.","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"public class Position {","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"            \"Position should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"    /*","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"     * The first character of the position must not be a whitespace,","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"    // TODO modify accordingly to the requirement for position","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"    public final String positionName;","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs a {@code Position}.","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"     * @param position A valid position.","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    public Position(String position) {","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(position);","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"        checkArgument(isValidPosition(position), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"        positionName \u003d position;","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"     * Returns true if a given string is a valid position.","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    public static boolean isValidPosition(String test) {","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"    public String toString() {","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"        return positionName;","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"                || (other instanceof Position // instanceof handles nulls","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 positionName.equals(((Position) other).positionName)); // state check","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-23"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"        return positionName.hashCode();","lastModifiedDate":"2022-09-23"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":57,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"Rachel-AG":57}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"public class Remark {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_VALUE \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"    public final String value;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs an {@code Remark}.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"    public Remark(String remark) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"        value \u003d remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"        return value;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Rachel-AG":41}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"sugiyem"},"content":"    @Override","lastModifiedDate":"2022-09-22"},{"lineNumber":125,"author":{"gitId":"sugiyem"},"content":"    public String toString() {","lastModifiedDate":"2022-09-22"},{"lineNumber":126,"author":{"gitId":"sugiyem"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-09-22"},{"lineNumber":127,"author":{"gitId":"sugiyem"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-09-22"},{"lineNumber":128,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":129,"author":{"gitId":"sugiyem"},"content":"        for (Person person : this) {","lastModifiedDate":"2022-09-22"},{"lineNumber":130,"author":{"gitId":"sugiyem"},"content":"            builder.append(index);","lastModifiedDate":"2022-09-22"},{"lineNumber":131,"author":{"gitId":"sugiyem"},"content":"            builder.append(\". \");","lastModifiedDate":"2022-09-22"},{"lineNumber":132,"author":{"gitId":"sugiyem"},"content":"            builder.append(person.toString());","lastModifiedDate":"2022-09-22"},{"lineNumber":133,"author":{"gitId":"sugiyem"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2022-09-22"},{"lineNumber":134,"author":{"gitId":"sugiyem"},"content":"            index++;","lastModifiedDate":"2022-09-22"},{"lineNumber":135,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-09-22"},{"lineNumber":136,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":137,"author":{"gitId":"sugiyem"},"content":"        return builder.toString();","lastModifiedDate":"2022-09-22"},{"lineNumber":138,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":139,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":137,"sugiyem":16}},{"path":"src/main/java/seedu/address/model/person/Website.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":" * Represents the website of the company of the internship.","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"public class Website {","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Web must be a URL\";","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    //@@author TomC-reused","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //Reused from https://stackoverflow.com/questions/163360","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"^(https?|ftp|file)://[-a-zA-Z0-9+\u0026@#/%?\u003d~_|!:,.;]*[-a-zA-Z0-9+\u0026@#/%\u003d~_|]\";","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_VALUE \u003d \"NA\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"    public final String value;","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs an {@code Website}.","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"     * @param website A valid website address.","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    public Website(String website) {","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(website);","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"        checkArgument(isValidWebsite(website), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"        value \u003d website;","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"     * Returns true if a given string is a valid website.","lastModifiedDate":"2022-09-24"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    public static boolean isValidWebsite(String test) {","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(DEFAULT_VALUE);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"    public String toString() {","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"        return value;","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"                || (other instanceof Website // instanceof handles nulls","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 value.equals(((Website) other).value)); // state check","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-23"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"Rachel-AG":51,"-":5}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.ApplicationProcess;","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Position;","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Website;","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"            new Person(new Name(\"Google\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 30 Geylang Street 29, #06-40\"), new Position(\"Backend Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"Apply\"), new Date(\"23-09-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://careers.google.com/jobs\"), getTagSet(\"friends\")),","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"            new Person(new Name(\"TikTok\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Position(\"Frontend Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"offer\"), new Date(\"05-10-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://tiktok.com/careers\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"            new Person(new Name(\"Amazon\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Position(\"Fullstack Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"accepted\"), new Date(\"01-08-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://amazon.com/careers\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"            new Person(new Name(\"Grab\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Position(\"Data Analyst Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"assessment\"), new Date(\"01-11-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://grab.com/careers\"), getTagSet(\"family\")),","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"            new Person(new Name(\"Meta\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 47 Tampines Street 20, #17-35\"), new Position(\"Software Engineer Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"rejected\"), new Date(\"10-07-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://grab.com/careers\"), getTagSet(\"classmates\")),","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"            new Person(new Name(\"Shopback\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 45 Aljunied Street 85, #11-31\"), new Position(\"AI Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"interview\"), new Date(\"10-10-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://shopback.com/careers\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Rachel-AG":29,"-":41}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.ApplicationProcess;","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Position;","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Website;","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Internship\u0027s %s field is missing!\";","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"    private final String remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"    private final String position;","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    private final String website;","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    private final String date;","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"    private final String applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"                             @JsonProperty(\"position\") String position,","lastModifiedDate":"2022-09-24"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"                             @JsonProperty(\"applicationProcess\") String applicationProcess,","lastModifiedDate":"2022-09-24"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"                             @JsonProperty(\"date\") String date, @JsonProperty(\"website\") String website,","lastModifiedDate":"2022-09-24"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-09-23"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-09-23"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"        this.website \u003d website;","lastModifiedDate":"2022-09-23"},{"lineNumber":62,"author":{"gitId":"Rachel-AG"},"content":"        this.applicationProcess \u003d applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":63,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Rachel-AG"},"content":"        position \u003d source.getPosition().positionName;","lastModifiedDate":"2022-09-23"},{"lineNumber":78,"author":{"gitId":"Rachel-AG"},"content":"        date \u003d source.getDate().toInputFormat();","lastModifiedDate":"2022-09-24"},{"lineNumber":79,"author":{"gitId":"Rachel-AG"},"content":"        website \u003d source.getWebsite().value;","lastModifiedDate":"2022-09-23"},{"lineNumber":80,"author":{"gitId":"Rachel-AG"},"content":"        applicationProcess \u003d source.getApplicationProcess().toString();","lastModifiedDate":"2022-09-23"},{"lineNumber":81,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"Rachel-AG"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"Rachel-AG"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":126,"author":{"gitId":"Rachel-AG"},"content":"        if (position \u003d\u003d null) {","lastModifiedDate":"2022-09-23"},{"lineNumber":127,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2022-09-24"},{"lineNumber":128,"author":{"gitId":"Rachel-AG"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, Position.class.getSimpleName()));","lastModifiedDate":"2022-09-24"},{"lineNumber":129,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":130,"author":{"gitId":"Rachel-AG"},"content":"        if (!Position.isValidPosition(position)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":131,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":132,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":133,"author":{"gitId":"Rachel-AG"},"content":"        final Position modelPosition \u003d new Position(position);","lastModifiedDate":"2022-09-23"},{"lineNumber":134,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":135,"author":{"gitId":"Rachel-AG"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-09-23"},{"lineNumber":136,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2022-09-23"},{"lineNumber":137,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":138,"author":{"gitId":"Rachel-AG"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":139,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":140,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":141,"author":{"gitId":"Rachel-AG"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2022-09-23"},{"lineNumber":142,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":143,"author":{"gitId":"Rachel-AG"},"content":"        if (website \u003d\u003d null) {","lastModifiedDate":"2022-09-23"},{"lineNumber":144,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Website.class.getSimpleName()));","lastModifiedDate":"2022-09-23"},{"lineNumber":145,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":146,"author":{"gitId":"Rachel-AG"},"content":"        if (!Website.isValidWebsite(website)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":147,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(Website.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":148,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":149,"author":{"gitId":"Rachel-AG"},"content":"        final Website modelWebsite \u003d new Website(website);","lastModifiedDate":"2022-09-23"},{"lineNumber":150,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":151,"author":{"gitId":"Rachel-AG"},"content":"        if (applicationProcess \u003d\u003d null) {","lastModifiedDate":"2022-09-23"},{"lineNumber":152,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2022-09-24"},{"lineNumber":153,"author":{"gitId":"Rachel-AG"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, ApplicationProcess.class.getSimpleName()));","lastModifiedDate":"2022-09-24"},{"lineNumber":154,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":155,"author":{"gitId":"Rachel-AG"},"content":"        if (!ApplicationProcess.isValidApplicationProcess(applicationProcess)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":156,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(ApplicationProcess.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":157,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":158,"author":{"gitId":"Rachel-AG"},"content":"        final ApplicationProcess modelApplicationProcess \u003d new ApplicationProcess(applicationProcess);","lastModifiedDate":"2022-09-23"},{"lineNumber":159,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":160,"author":{"gitId":"Rachel-AG"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelRemark, modelPosition,","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"Rachel-AG"},"content":"                modelApplicationProcess, modelDate, modelWebsite, modelTags);","lastModifiedDate":"2022-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Rachel-AG":69,"-":95}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    private Label remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"    private Label position;","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"    @FXML","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"    private Label applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"    @FXML","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"    private Label date;","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"    @FXML","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"    private Label website;","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"    @FXML","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"        phone.setText(\"phone: \" + person.getPhone().value);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"        remark.setText(\"remark: \" + person.getRemark().value);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Rachel-AG"},"content":"        email.setText(\"email: \" + person.getEmail().value);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Rachel-AG"},"content":"        position.setText(\"position: \" + person.getPosition().positionName);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Rachel-AG"},"content":"        applicationProcess.setText(\"application process: \" + person.getApplicationProcess().toString());","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Rachel-AG"},"content":"        date.setText(\"date: \" + person.getDate().toDisplayFormat());","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"Rachel-AG"},"content":"        website.setText(\"website: \" + person.getWebsite().value);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Rachel-AG":16,"-":73}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"      \u003cLabel fx:id\u003d\"position\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$position\" /\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"      \u003cLabel fx:id\u003d\"applicationProcess\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$applicationProcess\" /\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"      \u003cLabel fx:id\u003d\"website\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$website\" /\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Rachel-AG":5,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"Rachel-AG"},"content":"                + ADDRESS_DESC_AMY + POSITION_DESC_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":87,"author":{"gitId":"Rachel-AG"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withApplicationProcess(\"apply\")","lastModifiedDate":"2022-09-25"},{"lineNumber":88,"author":{"gitId":"Rachel-AG"},"content":"                .withDate(LocalDate.now().format(Date.DEFAULT_FORMATTER)).withWebsite(\"NA\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Rachel-AG":6,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICATION_PROCESS;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEBSITE;","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_POSITION_AMY \u003d \"Backend Intern\";","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_POSITION_BOB \u003d \"FullStack Developer Intern\";","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_APPLICATION_PROCESS_BOB \u003d \"Assessment\";","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_DATE_BOB \u003d \"05-12-2022\";","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_WEBSITE_BOB \u003d \"https://www.bobwebsite.com/careers\";","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"    public static final String POSITION_DESC_AMY \u003d \" \" + PREFIX_POSITION + VALID_POSITION_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"Rachel-AG"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Rachel-AG"},"content":"    public static final String POSITION_DESC_BOB \u003d \" \" + PREFIX_POSITION + VALID_POSITION_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"    public static final String APPLICATION_PROCESS_DESC_BOB \u003d \" \" + PREFIX_APPLICATION_PROCESS","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"            + VALID_APPLICATION_PROCESS_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + PREFIX_DATE + VALID_DATE_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"Rachel-AG"},"content":"    public static final String WEBSITE_DESC_BOB \u003d \" \" + PREFIX_WEBSITE + VALID_WEBSITE_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"Rachel-AG"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_REMARK; // empty string not allowed for addresses","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"sugiyem"},"content":"    public static void showPersonAtIndex(Model model, Index ... targetIndexes) {","lastModifiedDate":"2022-09-22"},{"lineNumber":134,"author":{"gitId":"sugiyem"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":136,"author":{"gitId":"sugiyem"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2022-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"sugiyem"},"content":"            keywords.addAll(Arrays.asList(splitName[0]));","lastModifiedDate":"2022-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"sugiyem"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2022-09-22"},{"lineNumber":146,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":147,"author":{"gitId":"sugiyem"},"content":"        // assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2022-09-22"},{"lineNumber":148,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Rachel-AG":19,"-":122,"sugiyem":8}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"sugiyem"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"sugiyem"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":10,"author":{"gitId":"sugiyem"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEXES_FIRST_AND_SECOND_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"sugiyem"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEXES_FIRST_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"sugiyem"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEXES_SECOND_AND_FIRST_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"sugiyem"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-22"},{"lineNumber":18,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"sugiyem"},"content":"import seedu.address.commons.core.index.Indexes;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"sugiyem"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"sugiyem"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"sugiyem"},"content":"    public void execute_oneValidIndexUnfilteredList_success() {","lastModifiedDate":"2022-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEXES_FIRST_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":44,"author":{"gitId":"sugiyem"},"content":"        UniquePersonList listOfPersonsToDelete \u003d new UniquePersonList();","lastModifiedDate":"2022-09-22"},{"lineNumber":45,"author":{"gitId":"sugiyem"},"content":"        listOfPersonsToDelete.add(personToDelete);","lastModifiedDate":"2022-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"sugiyem"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, listOfPersonsToDelete);","lastModifiedDate":"2022-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"sugiyem"},"content":"    public void execute_multipleValidIndexesUnfilteredList_success() {","lastModifiedDate":"2022-09-22"},{"lineNumber":57,"author":{"gitId":"sugiyem"},"content":"        Person firstPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-09-22"},{"lineNumber":58,"author":{"gitId":"sugiyem"},"content":"        Person secondPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-09-22"},{"lineNumber":59,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEXES_FIRST_AND_SECOND_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":61,"author":{"gitId":"sugiyem"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-09-22"},{"lineNumber":62,"author":{"gitId":"sugiyem"},"content":"        expectedModel.deletePerson(firstPersonToDelete);","lastModifiedDate":"2022-09-22"},{"lineNumber":63,"author":{"gitId":"sugiyem"},"content":"        expectedModel.deletePerson(secondPersonToDelete);","lastModifiedDate":"2022-09-22"},{"lineNumber":64,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":65,"author":{"gitId":"sugiyem"},"content":"        try {","lastModifiedDate":"2022-09-24"},{"lineNumber":66,"author":{"gitId":"sugiyem"},"content":"            deleteCommand.execute(model);","lastModifiedDate":"2022-09-24"},{"lineNumber":67,"author":{"gitId":"sugiyem"},"content":"            assertEquals(model, expectedModel);","lastModifiedDate":"2022-09-24"},{"lineNumber":68,"author":{"gitId":"sugiyem"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-09-24"},{"lineNumber":69,"author":{"gitId":"sugiyem"},"content":"            fail(\"Should not have thrown any exception.\");","lastModifiedDate":"2022-09-24"},{"lineNumber":70,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":71,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":72,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":73,"author":{"gitId":"sugiyem"},"content":"    @Test","lastModifiedDate":"2022-09-22"},{"lineNumber":74,"author":{"gitId":"sugiyem"},"content":"    public void execute_invalidOneIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Indexes(Set.of(outOfBoundIndex)));","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"sugiyem"},"content":"    public void execute_invalidMultipleIndexesUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-09-22"},{"lineNumber":83,"author":{"gitId":"sugiyem"},"content":"        Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-09-22"},{"lineNumber":84,"author":{"gitId":"sugiyem"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-09-22"},{"lineNumber":85,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"sugiyem"},"content":"                new Indexes(Set.of(firstIndex, outOfBoundIndex)));","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":88,"author":{"gitId":"sugiyem"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-09-22"},{"lineNumber":89,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":90,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":91,"author":{"gitId":"sugiyem"},"content":"    @Test","lastModifiedDate":"2022-09-22"},{"lineNumber":92,"author":{"gitId":"sugiyem"},"content":"    public void execute_validOneIndexFilteredList_success() {","lastModifiedDate":"2022-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEXES_FIRST_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":98,"author":{"gitId":"sugiyem"},"content":"        UniquePersonList listOfPersonsToDelete \u003d new UniquePersonList();","lastModifiedDate":"2022-09-22"},{"lineNumber":99,"author":{"gitId":"sugiyem"},"content":"        listOfPersonsToDelete.add(personToDelete);","lastModifiedDate":"2022-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"sugiyem"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, listOfPersonsToDelete);","lastModifiedDate":"2022-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"sugiyem"},"content":"    public void execute_validMultipleIndexesFilteredList_success() {","lastModifiedDate":"2022-09-22"},{"lineNumber":112,"author":{"gitId":"sugiyem"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON, INDEX_SECOND_PERSON);","lastModifiedDate":"2022-09-22"},{"lineNumber":113,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":114,"author":{"gitId":"sugiyem"},"content":"        Person firstPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-09-22"},{"lineNumber":115,"author":{"gitId":"sugiyem"},"content":"        Person secondPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-09-22"},{"lineNumber":116,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEXES_FIRST_AND_SECOND_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":118,"author":{"gitId":"sugiyem"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-09-22"},{"lineNumber":119,"author":{"gitId":"sugiyem"},"content":"        expectedModel.deletePerson(firstPersonToDelete);","lastModifiedDate":"2022-09-22"},{"lineNumber":120,"author":{"gitId":"sugiyem"},"content":"        expectedModel.deletePerson(secondPersonToDelete);","lastModifiedDate":"2022-09-22"},{"lineNumber":121,"author":{"gitId":"sugiyem"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2022-09-22"},{"lineNumber":122,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":123,"author":{"gitId":"sugiyem"},"content":"        try {","lastModifiedDate":"2022-09-24"},{"lineNumber":124,"author":{"gitId":"sugiyem"},"content":"            deleteCommand.execute(model);","lastModifiedDate":"2022-09-24"},{"lineNumber":125,"author":{"gitId":"sugiyem"},"content":"            assertEquals(model, expectedModel);","lastModifiedDate":"2022-09-24"},{"lineNumber":126,"author":{"gitId":"sugiyem"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-09-24"},{"lineNumber":127,"author":{"gitId":"sugiyem"},"content":"            fail(\"Should not have thrown any exception.\");","lastModifiedDate":"2022-09-24"},{"lineNumber":128,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":129,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":130,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":131,"author":{"gitId":"sugiyem"},"content":"    @Test","lastModifiedDate":"2022-09-22"},{"lineNumber":132,"author":{"gitId":"sugiyem"},"content":"    public void execute_invalidOneIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":139,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Indexes(Set.of(outOfBoundIndex)));","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":141,"author":{"gitId":"sugiyem"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-09-22"},{"lineNumber":142,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":143,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":144,"author":{"gitId":"sugiyem"},"content":"    @Test","lastModifiedDate":"2022-09-22"},{"lineNumber":145,"author":{"gitId":"sugiyem"},"content":"    public void execute_invalidMultipleIndexesFilteredList_throwsCommandException() {","lastModifiedDate":"2022-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"sugiyem"},"content":"        Index validIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"sugiyem"},"content":"                new Indexes(Set.of(validIndex, outOfBoundIndex)));","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEXES_FIRST_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteFirstAndSecondCommand \u003d new DeleteCommand(INDEXES_FIRST_AND_SECOND_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteSecondAndFirstCommand \u003d new DeleteCommand(INDEXES_SECOND_AND_FIRST_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"sugiyem"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEXES_FIRST_PERSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":178,"author":{"gitId":"sugiyem"},"content":"        // different persons -\u003e returns false","lastModifiedDate":"2022-09-22"},{"lineNumber":179,"author":{"gitId":"sugiyem"},"content":"        assertFalse(deleteFirstCommand.equals(deleteFirstAndSecondCommand));","lastModifiedDate":"2022-09-22"},{"lineNumber":180,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":181,"author":{"gitId":"sugiyem"},"content":"        // different order but same persons -\u003e return true","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"sugiyem"},"content":"        assertTrue(deleteFirstAndSecondCommand.equals(deleteSecondAndFirstCommand));","lastModifiedDate":"2022-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":101,"sugiyem":92}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    @Disabled","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"Rachel-AG"},"content":"    @Disabled","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"Rachel-AG"},"content":"    @Disabled","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Rachel-AG":5,"-":173}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPLICATION_PROCESS_DESC_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEBSITE_DESC_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"Rachel-AG"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-09-25"},{"lineNumber":65,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"Rachel-AG"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"Rachel-AG"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-09-25"},{"lineNumber":75,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"Rachel-AG"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-09-25"},{"lineNumber":80,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-09-25"},{"lineNumber":87,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"Rachel-AG"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withApplicationProcess(\"apply\")","lastModifiedDate":"2022-09-25"},{"lineNumber":94,"author":{"gitId":"Rachel-AG"},"content":"                .withDate(LocalDate.now().format(Date.DEFAULT_FORMATTER)).withWebsite(\"NA\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-09-25"},{"lineNumber":96,"author":{"gitId":"Rachel-AG"},"content":"                        + ADDRESS_DESC_AMY + POSITION_DESC_AMY,","lastModifiedDate":"2022-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + POSITION_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + POSITION_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + POSITION_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"Rachel-AG"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND + POSITION_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-09-25"},{"lineNumber":145,"author":{"gitId":"Rachel-AG"},"content":"                + POSITION_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"Rachel-AG"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + POSITION_DESC_BOB,","lastModifiedDate":"2022-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Rachel-AG":31,"-":121}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"sugiyem"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEXES_FIRST_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"sugiyem"},"content":"        assertEquals(new DeleteCommand(INDEXES_FIRST_PERSON), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":100,"sugiyem":2}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"sugiyem"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEXES_FIRST_AND_SECOND_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"sugiyem"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEXES_FIRST_PERSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"sugiyem"},"content":"    public void parse_validOneArg_returnsDeleteCommand() {","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"sugiyem"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEXES_FIRST_PERSON));","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"sugiyem"},"content":"    @Test","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"sugiyem"},"content":"    public void parse_validMultipleArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"sugiyem"},"content":"        assertParseSuccess(parser, \"1 2\", new DeleteCommand(INDEXES_FIRST_AND_SECOND_PERSON));","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":29,"sugiyem":9}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"    private static final String VALID_REMARK \u003d \"123 Main Street #0505\";","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"Rachel-AG"},"content":"    public void parseRemark_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRemark((String) null));","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"Rachel-AG"},"content":"    public void parseRemark_validValueWithoutWhitespace_returnsRemark() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"Rachel-AG"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"Rachel-AG"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(VALID_REMARK));","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"Rachel-AG"},"content":"    public void parseRemark_validValueWithWhitespace_returnsTrimmedRemark() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"Rachel-AG"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_REMARK + WHITESPACE;","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"Rachel-AG"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"Rachel-AG"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(addressWithWhitespace));","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Rachel-AG":11,"-":181}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"public class RemarkTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Rachel-AG":14}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"    private static final String INVALID_POSITION \u003d \"intern @Google\";","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    private static final String INVALID_DATE \u003d \"12/12/12\";","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"    private static final String INVALID_APPLICATION_PROCESS \u003d \"application\";","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"    private static final String INVALID_WEBSITE \u003d \"www.invalid.com\";","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getRemark().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"    private static final String VALID_POSITION \u003d BENSON.getPosition().toString();","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    private static final String VALID_DATE \u003d BENSON.getDate().toString();","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"    private static final String VALID_APPLICATION_PROCESS \u003d BENSON.getApplicationProcess().toString();","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    private static final String VALID_WEBSITE \u003d BENSON.getWebsite().toString();","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_POSITION,","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"                        VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_POSITION,","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"                VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"Rachel-AG"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_POSITION,","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"Rachel-AG"},"content":"                        VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Rachel-AG"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_POSITION,","lastModifiedDate":"2022-09-25"},{"lineNumber":78,"author":{"gitId":"Rachel-AG"},"content":"                VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"Rachel-AG"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_POSITION,","lastModifiedDate":"2022-09-25"},{"lineNumber":87,"author":{"gitId":"Rachel-AG"},"content":"                        VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"Rachel-AG"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_POSITION,","lastModifiedDate":"2022-09-25"},{"lineNumber":95,"author":{"gitId":"Rachel-AG"},"content":"                VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"Rachel-AG"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"Rachel-AG"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_POSITION,","lastModifiedDate":"2022-09-25"},{"lineNumber":103,"author":{"gitId":"Rachel-AG"},"content":"                VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-09-25"},{"lineNumber":104,"author":{"gitId":"Rachel-AG"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"Rachel-AG"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_POSITION,","lastModifiedDate":"2022-09-25"},{"lineNumber":114,"author":{"gitId":"Rachel-AG"},"content":"                        VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, invalidTags);","lastModifiedDate":"2022-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Rachel-AG":28,"-":90}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"Rachel-AG"},"content":"        descriptor.setRemark(new Remark(address));","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Rachel-AG":3,"-":84}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.ApplicationProcess;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Position;","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"import seedu.address.model.person.Website;","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_POSITION \u003d \"Software Intern\";","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_APPLICATION_PROCESS \u003d \"interview\";","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_DATE \u003d \"01-12-2022\";","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_WEBSITE \u003d \"https://defaultweb.com/careers\";","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    private Remark remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    private Position position;","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    private ApplicationProcess applicationProcess;","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"    private Date date;","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"    private Website website;","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"        remark \u003d new Remark(DEFAULT_ADDRESS);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"        position \u003d new Position(DEFAULT_POSITION);","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"        applicationProcess \u003d new ApplicationProcess(DEFAULT_APPLICATION_PROCESS);","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"        website \u003d new Website(DEFAULT_WEBSITE);","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"Rachel-AG"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"Rachel-AG"},"content":"        position \u003d personToCopy.getPosition();","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"Rachel-AG"},"content":"        applicationProcess \u003d personToCopy.getApplicationProcess();","lastModifiedDate":"2022-09-25"},{"lineNumber":69,"author":{"gitId":"Rachel-AG"},"content":"        date \u003d personToCopy.getDate();","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"Rachel-AG"},"content":"        website \u003d personToCopy.getWebsite();","lastModifiedDate":"2022-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"Rachel-AG"},"content":"        this.remark \u003d new Remark(address);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":114,"author":{"gitId":"Rachel-AG"},"content":"     * Sets the {@code Position} of the {@code Person} that we are building.","lastModifiedDate":"2022-09-25"},{"lineNumber":115,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":116,"author":{"gitId":"Rachel-AG"},"content":"    public PersonBuilder withPosition(String position) {","lastModifiedDate":"2022-09-25"},{"lineNumber":117,"author":{"gitId":"Rachel-AG"},"content":"        this.position \u003d new Position(position);","lastModifiedDate":"2022-09-25"},{"lineNumber":118,"author":{"gitId":"Rachel-AG"},"content":"        return this;","lastModifiedDate":"2022-09-25"},{"lineNumber":119,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":120,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":121,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":122,"author":{"gitId":"Rachel-AG"},"content":"     * Sets the {@code ApplicationProcess} of the {@code Person} that we are building.","lastModifiedDate":"2022-09-25"},{"lineNumber":123,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":124,"author":{"gitId":"Rachel-AG"},"content":"    public PersonBuilder withApplicationProcess(String applicationProcess) {","lastModifiedDate":"2022-09-25"},{"lineNumber":125,"author":{"gitId":"Rachel-AG"},"content":"        this.applicationProcess \u003d new ApplicationProcess(applicationProcess);","lastModifiedDate":"2022-09-25"},{"lineNumber":126,"author":{"gitId":"Rachel-AG"},"content":"        return this;","lastModifiedDate":"2022-09-25"},{"lineNumber":127,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":128,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":129,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":130,"author":{"gitId":"Rachel-AG"},"content":"     * Sets the {@code Date} of the {@code Person} that we are building.","lastModifiedDate":"2022-09-25"},{"lineNumber":131,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":132,"author":{"gitId":"Rachel-AG"},"content":"    public PersonBuilder withDate(String date) {","lastModifiedDate":"2022-09-25"},{"lineNumber":133,"author":{"gitId":"Rachel-AG"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2022-09-25"},{"lineNumber":134,"author":{"gitId":"Rachel-AG"},"content":"        return this;","lastModifiedDate":"2022-09-25"},{"lineNumber":135,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":136,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":137,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":138,"author":{"gitId":"Rachel-AG"},"content":"     * Sets the {@code Website} of the {@code Person} that we are building.","lastModifiedDate":"2022-09-25"},{"lineNumber":139,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":140,"author":{"gitId":"Rachel-AG"},"content":"    public PersonBuilder withWebsite(String website) {","lastModifiedDate":"2022-09-25"},{"lineNumber":141,"author":{"gitId":"Rachel-AG"},"content":"        this.website \u003d new Website(website);","lastModifiedDate":"2022-09-25"},{"lineNumber":142,"author":{"gitId":"Rachel-AG"},"content":"        return this;","lastModifiedDate":"2022-09-25"},{"lineNumber":143,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":144,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":146,"author":{"gitId":"Rachel-AG"},"content":"        return new Person(name, phone, email, remark, position, applicationProcess, date, website, tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Rachel-AG":59,"-":90}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICATION_PROCESS;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEBSITE;","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"        sb.append(PREFIX_POSITION + person.getPosition().positionName + \" \");","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"        sb.append(PREFIX_APPLICATION_PROCESS + person.getApplicationProcess().toString() + \" \");","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"        sb.append(PREFIX_DATE + person.getDate().toInputFormat() + \" \");","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"        sb.append(PREFIX_WEBSITE + person.getWebsite().value + \" \");","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"        descriptor.getRemark().ifPresent(address -\u003e sb.append(PREFIX_REMARK).append(address.value).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Rachel-AG":11,"-":59}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"sugiyem"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"sugiyem"},"content":"import seedu.address.commons.core.index.Indexes;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"sugiyem"},"content":"    public static final Indexes INDEXES_FIRST_PERSON \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"sugiyem"},"content":"            new Indexes(Set.of(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"sugiyem"},"content":"    public static final Indexes INDEXES_FIRST_AND_SECOND_PERSON \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"sugiyem"},"content":"            new Indexes(Set.of(Index.fromOneBased(1), Index.fromOneBased(2)));","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"sugiyem"},"content":"    public static final Indexes INDEXES_SECOND_AND_FIRST_PERSON \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"sugiyem"},"content":"            new Indexes(Set.of(Index.fromOneBased(2), Index.fromOneBased(1)));","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":12,"sugiyem":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATION_PROCESS_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEBSITE_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"            .withTags(\"friends\").withPosition(\"Backend Intern\").withApplicationProcess(\"APPLY\")","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"            .withDate(\"11-12-2022\").withWebsite(\"https://careers.google.com/jobs\").build();","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"            .withTags(\"owesMoney\", \"friends\").withPosition(\"software engineer\").withApplicationProcess(\"ASSESSMENT\")","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"            .withDate(\"24-09-2022\").withWebsite(\"https://www.grab.com/sg/about\").build();","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withPosition(\"backend engineer\")","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"            .withApplicationProcess(\"APPLY\").withDate(\"24-09-2022\").withWebsite(\"NA\").build();","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"            .withPosition(\"frontend engineer\").withApplicationProcess(\"INTERVIEW\")","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"            .withDate(\"14-09-2022\").withWebsite(\"NA\").build();","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withPosition(\"data engineer\")","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"            .withApplicationProcess(\"APPLY\").withDate(\"24-09-2022\").withWebsite(\"NA\").build();","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withPosition(\"AI engineer\")","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"            .withApplicationProcess(\"APPLY\").withApplicationProcess(\"APPLY\").withDate(\"24-09-2022\")","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"            .withWebsite(\"NA\").build();","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withPosition(\"Data analyst\")","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"Rachel-AG"},"content":"            .withApplicationProcess(\"APPLY\").withApplicationProcess(\"APPLY\").withDate(\"24-09-2022\")","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"Rachel-AG"},"content":"            .withWebsite(\"NA\").build();","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-09-25"},{"lineNumber":69,"author":{"gitId":"Rachel-AG"},"content":"            .withPosition(VALID_POSITION_AMY).withPosition(VALID_POSITION_AMY).build();","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"Rachel-AG"},"content":"            .withPosition(VALID_POSITION_BOB).withApplicationProcess(VALID_APPLICATION_PROCESS_BOB)","lastModifiedDate":"2022-09-25"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"            .withDate(VALID_DATE_BOB).withWebsite(VALID_WEBSITE_BOB).build();","lastModifiedDate":"2022-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Rachel-AG":26,"-":67}}]
