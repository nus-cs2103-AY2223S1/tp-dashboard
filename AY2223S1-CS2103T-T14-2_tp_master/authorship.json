[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![Code coverage](https://codecov.io/gh/AY2223S1-CS2103T-T14-2/tp/branch/master/graph/badge.svg?token\u003dHGCQQ52YOS)](https://codecov.io/gh/AY2223S1-CS2103T-T14-2/tp)","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"# About","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"CodeConnect aims to help busy students manage their tasks, while facilitating collaboration between students.","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"By integrating one\u0027s contacts and task list, CodeConnect provides convenient features such as searching for contacts that are able to help with a particular task in your task list, through a simple command line interface.","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"Of course, CodeConnect is able to perform sorting and filtering functions on your contacts/tasks.","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"With CodeConnect, the friction between getting stuck on an assignment and reaching out for help will be reduced, allowing you to focus on what really matters.","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"## Main Features","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"* Keep track of your tasks, their deadlines, and the modules they belong to","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"  * Mark tasks as complete or incomplete","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"  * Sort tasks by deadline","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"* Manage your contacts and keep track of the modules they are taking","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"  * Search for contacts taking a specified module","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"  * Search for contacts that can help with your specified task","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"# Documentation","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"Learn more about how to get started with our [User Guide](https://ay2223s1-cs2103t-t14-2.github.io/tp/UserGuide.html)!","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"For information about CodeConnect\u0027s application structure, check our [Developer Guide](https://ay2223s1-cs2103t-t14-2.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"# Acknowledgements","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"We use the following libraries in CodeConnect:","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"* [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [jchronic](https://github.com/samtingleff/jchronic)","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"angkl0":1,"parnikkapore":3,"JonLamy":19,"songivan00":6,"danzzzerl":1,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"run {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"    // JChronic date parser","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"    implementation \u0027com.rubiconproject.oss:jchronic:0.2.8\u0027","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"JonLamy"},"content":"    archiveFileName \u003d \u0027codeconnect.jar\u0027","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"    mainClassName \u003d \u0027seedu.codeconnect.Main\u0027","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"}],"authorContributionMap":{"parnikkapore":8,"JonLamy":1,"-":69}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"## CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"### Song Ivan","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"\u003cimg src\u003d\"images/songivan00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"[[github](https://github.com/songivan00)]","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"[[portfolio](team/songivan00.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"* Role: Developer","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"* Responsibilities: Listing/sorting tasks and contacts features","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"### Denzel Tan","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"\u003cimg src\u003d\"images/danzzzerl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"[[github](http://github.com/danzzzerl)]","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"[[portfolio](team/danzzzerl.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"* Responsibilities: finding tasks/contacts","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"### Jonathan Lam","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"\u003cimg src\u003d\"images/jonlamy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"[[github](http://github.com/JonLamy)]","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"[[portfolio](team/jonlamy.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"* Responsibilities: Storage and Data Management","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"### Poomklao Teerawatthanaprapha","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"\u003cimg src\u003d\"images/parnikkapore.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"[[github](http://github.com/parnikkapore)]","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"[[portfolio](team/parnikkapore.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"* Role: Integration, CI expert","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"* Responsibilities: Task model, Add/delete task commands","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"### Ang Kuang Long","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"\u003cimg src\u003d\"images/angkl0.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"[[github](http://github.com/angkl0)]","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"[[portfolio](team/angkl0.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"* Responsibilities: Adding, deleting, editing and tagging contacts","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"angkl0":5,"parnikkapore":6,"JonLamy":5,"songivan00":7,"danzzzerl":6,"-":29}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"## Introduction","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"CodeConnect is a **desktop app** specially designed for **Computer Science students from NUS**. With this app, not only can you manage your **tasks and contacts** effectively in one unified place, you can also conveniently search for peers to seek help or collaboration on a particular task.","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"This developer guide serves both as a **guide for new contributors** to navigate and start working on the project and as a reference to various code and feature **design decisions** for existing developers.","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"## Acknowledgements","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"We use the following libraries in CodeConnect:","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"* [JChronic](https://mvnrepository.com/artifact/com.rubiconproject.oss/jchronic)","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"## Setting up, getting started","lastModifiedDate":"2022-10-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"## Design","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103T-T14-2/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/codeconnect/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/codeconnect/MainApp.java). It is responsible for,","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"songivan00"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delc 1`.","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/codeconnect/ui/Ui.java)","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"danzzzerl"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `TaskListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/codeconnect/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-T14-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-11-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":100,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/codeconnect/logic/Logic.java)","lastModifiedDate":"2022-11-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"1. When `Logic` is called upon to execute a command, it uses the `CodeConnectParser` class to parse the user command.","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"songivan00"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddContactCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-11-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"songivan00"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delc 1\")` API call.","lastModifiedDate":"2022-11-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"songivan00"},"content":"* When called upon to parse a user command, the `CodeConnectParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddContactCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddContactCommand`) which the `CodeConnectParser` returns back as a `Command` object.","lastModifiedDate":"2022-11-07"},{"lineNumber":128,"author":{"gitId":"songivan00"},"content":"* All `XYZCommandParser` classes (e.g., `AddContactCommandParser`, `DeleteTaskCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-11-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/codeconnect/model/Model.java)","lastModifiedDate":"2022-11-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"parnikkapore"},"content":"![Model component class diagram](images/ModelClassDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"parnikkapore"},"content":"* similarly stores the task data (all `Task` objects, contained in a `UniqueTaskList` object) and the \u0027selected\u0027 `Task` objects as a filtered list exposed as an unmodifiable `ObservableList\u003cTask\u003e`.","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"parnikkapore"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/codeconnect/storage/Storage.java)","lastModifiedDate":"2022-11-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"parnikkapore"},"content":"![Storage component class diagram](images/StorageClassDiagram.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"angkl0"},"content":"* can save address book data, task list data  and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"angkl0"},"content":"* inherits from `AddressBookStorage`, `TaskListStorage` and `UserPrefStorage`, which means it can be treated as any one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"songivan00"},"content":"Classes used by multiple components are in the `seedu.codeconnect.commons` package.","lastModifiedDate":"2022-11-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"parnikkapore"},"content":"## Implementation","lastModifiedDate":"2022-10-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"JonLamy"},"content":"### Finding Feature","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"JonLamy"},"content":"#### About","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"danzzzerl"},"content":"CodeConnect has features that allow you to search for tasks and contacts. The finding features use the following commands:","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"songivan00"},"content":"* `find n/` - Finds tasks in the TaskList by their description(name)","lastModifiedDate":"2022-11-07"},{"lineNumber":179,"author":{"gitId":"songivan00"},"content":"* `find m/` - Finds tasks in the TaskList by their module","lastModifiedDate":"2022-11-07"},{"lineNumber":180,"author":{"gitId":"songivan00"},"content":"* `findc n/` - Finds contacts in the AddressBook by their name","lastModifiedDate":"2022-11-07"},{"lineNumber":181,"author":{"gitId":"songivan00"},"content":"* `findc m/` - Finds contacts in the AddressBook by their module","lastModifiedDate":"2022-11-07"},{"lineNumber":182,"author":{"gitId":"songivan00"},"content":"* `findc ts/` - Finds contacts in the AddressBook by the module of the task at the given index","lastModifiedDate":"2022-11-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":184,"author":{"gitId":"JonLamy"},"content":"Examples of command use:","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"JonLamy"},"content":"- `find n/ quiz` - Find all tasks containing the word \"quiz\"","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"JonLamy"},"content":"- `find m/ CS1101S` - Find all tasks belonging to CS1101S","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"JonLamy"},"content":"- `findc n/ Tan` - Find all contacts with names containing \"Tan\"","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"JonLamy"},"content":"- `findc m/ CS1101S` - Find all contacts taking CS1101S","lastModifiedDate":"2022-10-20"},{"lineNumber":189,"author":{"gitId":"songivan00"},"content":"- `findc ts/ 3` - Find all contacts taking the module of the task at index 3","lastModifiedDate":"2022-11-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"songivan00"},"content":"![Sample result of a find command](images/findTask.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"JonLamy"},"content":"#### Implementation Flow","lastModifiedDate":"2022-10-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"songivan00"},"content":"Only the execution of `findc` command will be shown below as all the commands are implemented in a similar way.","lastModifiedDate":"2022-11-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":197,"author":{"gitId":"JonLamy"},"content":"Outline of how components work together when the user enters a find command:","lastModifiedDate":"2022-10-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":199,"author":{"gitId":"JonLamy"},"content":"1. User enters `findc m/ CS1101S` into the command prompt box","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"songivan00"},"content":"2. The user input will be sent to `CodeConnectParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":201,"author":{"gitId":"songivan00"},"content":"3. `CodeConnectParser` send the argument `m/CS1101S` to `FindContactCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":202,"author":{"gitId":"songivan00"},"content":"4. `FindContactCommandParser` determines the user\u0027s input to be valid","lastModifiedDate":"2022-11-07"},{"lineNumber":203,"author":{"gitId":"songivan00"},"content":"5. `FindContactCommandParser` creates a `ModuleTakenPredicate`","lastModifiedDate":"2022-11-07"},{"lineNumber":204,"author":{"gitId":"JonLamy"},"content":"   - This `Predicate` is used by the `Model` to filter for contacts that take the queried module","lastModifiedDate":"2022-10-20"},{"lineNumber":205,"author":{"gitId":"parnikkapore"},"content":"6. A `FindContactCommand` command is created and executed by the `Model`","lastModifiedDate":"2022-11-07"},{"lineNumber":206,"author":{"gitId":"songivan00"},"content":"7. The result of the find command is displayed to the user","lastModifiedDate":"2022-11-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":208,"author":{"gitId":"JonLamy"},"content":"![Activity diagram for execution of a findc command](images/FindContactActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":209,"author":{"gitId":"JonLamy"},"content":"\u003cdiv style\u003d\"text-align: center\"\u003eActivity diagram of findc command execution\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":211,"author":{"gitId":"danzzzerl"},"content":"![Interactions Inside the Logic Component for the `find n/ Lab 2` Command](images/FindTasksSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":212,"author":{"gitId":"danzzzerl"},"content":"\u003cdiv style\u003d\"text-align: center\"\u003eSequence diagram of find command execution\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"danzzzerl"},"content":"\u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"danzzzerl"},"content":"\u003cdiv style\u003d\"text-align: center\"\u003eNote: The implementation flow and the activity and sequence diagrams are similar for both the find and findc commands\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":216,"author":{"gitId":"JonLamy"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":218,"author":{"gitId":"JonLamy"},"content":"One design consideration was if the user should be allowed to find contacts matching more than one module. For example, the input `findc m/ CS1101S MA1521` will return all contacts taking CS1101S, MA1521, or both. The reason why we decided to use additive search condition is as follows:","lastModifiedDate":"2022-10-20"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":220,"author":{"gitId":"JonLamy"},"content":"Consider the following situation:","lastModifiedDate":"2022-10-20"},{"lineNumber":221,"author":{"gitId":"JonLamy"},"content":"- You have two assignments due tomorrow, from two different modules: MOD_X and MOD_Y.","lastModifiedDate":"2022-10-20"},{"lineNumber":222,"author":{"gitId":"JonLamy"},"content":"- Feeling stuck, you decide to use CodeConnect to search for help, to see if there\u0027s anybody you might have forgot.","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"JonLamy"},"content":"- You enter the command `findc m/ MOD_X MOD_Y`","lastModifiedDate":"2022-10-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":225,"author":{"gitId":"JonLamy"},"content":"As a user in this situation, the last thing you would want is for the app to _exclude_ contacts taking both MOD_X and MOD_Y. Those would be the first people you want to ask for help!","lastModifiedDate":"2022-10-20"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":227,"author":{"gitId":"angkl0"},"content":"Another design consideration was to make both the find commands for task and contacts easy to use and remember. For example, both `find` and `findc` uses the `n/` and `m/` prefixes, when searching by names and modules respectively.","lastModifiedDate":"2022-10-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":229,"author":{"gitId":"angkl0"},"content":"This was done so that it would be easy for the user to remember what command to use when finding either contacts or tasks.","lastModifiedDate":"2022-10-20"},{"lineNumber":230,"author":{"gitId":"angkl0"},"content":"- The only difference when finding contacts is that there is a c after the find for contacts","lastModifiedDate":"2022-10-20"},{"lineNumber":231,"author":{"gitId":"angkl0"},"content":"- Both use the same prefixes","lastModifiedDate":"2022-10-20"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":233,"author":{"gitId":"songivan00"},"content":"### Adding features","lastModifiedDate":"2022-11-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":235,"author":{"gitId":"parnikkapore"},"content":"#### About","lastModifiedDate":"2022-10-20"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":237,"author":{"gitId":"songivan00"},"content":"CodeConnect has features that allow you to add and track your contacts and tasks. The adding features use the following commands:","lastModifiedDate":"2022-11-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":239,"author":{"gitId":"songivan00"},"content":"* `addc n/{name} p/{phone_number} [e/{email}] [a/{address}] [t/{tag}]... [m/{module}...] [gh/{github}] [tele/{telegram}]` - Adds a contact with the given field description","lastModifiedDate":"2022-11-07"},{"lineNumber":240,"author":{"gitId":"songivan00"},"content":"* `add {task_name} by/{deadline} [m/{module_code}]` - Adds a task with the given field description","lastModifiedDate":"2022-11-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"parnikkapore"},"content":"Examples of command use:","lastModifiedDate":"2022-10-20"},{"lineNumber":243,"author":{"gitId":"songivan00"},"content":"* `add Lab2 by/2022-02-02 23:59 m/CS2030S` - Adds a task with the given field description","lastModifiedDate":"2022-11-07"},{"lineNumber":244,"author":{"gitId":"songivan00"},"content":"* `addc n/Bob Martin p/98765432 tele/bobmartin00 m/CS1101S CS1231S t/friend` - Adds a contact with the given field description","lastModifiedDate":"2022-11-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":246,"author":{"gitId":"parnikkapore"},"content":"#### Implementation flow","lastModifiedDate":"2022-10-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":248,"author":{"gitId":"songivan00"},"content":"Only the execution of `add` command will be shown below as both commands are implemented in a similar way.","lastModifiedDate":"2022-11-07"},{"lineNumber":249,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":250,"author":{"gitId":"songivan00"},"content":"Outline of how components work together when the user enters an add command:","lastModifiedDate":"2022-11-07"},{"lineNumber":251,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":252,"author":{"gitId":"songivan00"},"content":"1. User enters `add Finish Lab3 by/tomorrow m/CS2030S` into the command prompt box","lastModifiedDate":"2022-11-07"},{"lineNumber":253,"author":{"gitId":"songivan00"},"content":"2. The user input will be sent to `CodeConnectParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":254,"author":{"gitId":"songivan00"},"content":"3. `CodeConnectParser` send the argument `Finish Lab3 by/tomorrow m/CS2030S` to `AddTaskCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":255,"author":{"gitId":"songivan00"},"content":"4. `AddTaskCommandParser` will call its `parse` method to get the details of the task","lastModifiedDate":"2022-11-07"},{"lineNumber":256,"author":{"gitId":"songivan00"},"content":"5. A new `task` instance is created with the fields which is passed into a new `AddTaskCommand` object","lastModifiedDate":"2022-11-07"},{"lineNumber":257,"author":{"gitId":"songivan00"},"content":"6. The `model` will then update the `taskList` with the new Task","lastModifiedDate":"2022-11-07"},{"lineNumber":258,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"parnikkapore"},"content":"![Interactions Inside the Logic Component for the `add Add error handling by/next thursday m/CS2103T` Command](images/AddTaskCommandSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":260,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv style\u003d\"text-align: center\"\u003eSequence diagram of add command execution\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":261,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":262,"author":{"gitId":"parnikkapore"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-20"},{"lineNumber":263,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":264,"author":{"gitId":"parnikkapore"},"content":"* A natural date parser is used because it gives the most flexibility possible in the type of date formats that can be entered, including relative dates (\"tomorrow\") and abbreviations (\"2 Jan\").","lastModifiedDate":"2022-10-23"},{"lineNumber":265,"author":{"gitId":"parnikkapore"},"content":"* Uniquely, the LocalDateTime within Deadline is expected to be formatted to and from strings by the class\u0027s users. This is because different formats and strictnesses are appropriate in different situations.","lastModifiedDate":"2022-10-23"},{"lineNumber":266,"author":{"gitId":"parnikkapore"},"content":"  * `ParserUtil.parseDeadline` handles user input, so it uses the NaturalDateParser.","lastModifiedDate":"2022-10-23"},{"lineNumber":267,"author":{"gitId":"parnikkapore"},"content":"  * The `Storage` component uses a fixed format string so that saved data can be unambiguously restored.","lastModifiedDate":"2022-10-23"},{"lineNumber":268,"author":{"gitId":"parnikkapore"},"content":"  * Deadline(String) uses the format used before natural date parsing to reduce changes to test code.","lastModifiedDate":"2022-10-23"},{"lineNumber":269,"author":{"gitId":"parnikkapore"},"content":"* Deadline has a validation function for the input to its string constructor, just like other field classes. The validation is performed by attempting to parse it and checking for errors, as there is no cheaper method in this case.","lastModifiedDate":"2022-10-23"},{"lineNumber":270,"author":{"gitId":"parnikkapore"},"content":"* When a date range is specified, the end of the range is used; e.g. a task that\u0027s due \"tomorrow\" will be due 23:59 tomorrow. This is the most common interpretation in our experience.","lastModifiedDate":"2022-10-25"},{"lineNumber":271,"author":{"gitId":"parnikkapore"},"content":"* `Deadline`, as a thin data class, only provides constructors from preparsed LocalDateTimes and its own serialization. Parsing user input is handled by other methods, such as `ParserUtil.parseDeadline`. This improves cohesion of the class.","lastModifiedDate":"2022-11-06"},{"lineNumber":272,"author":{"gitId":"parnikkapore"},"content":"* The `add` command shares the `m/` prefix for modules with the other commands.","lastModifiedDate":"2022-10-20"},{"lineNumber":273,"author":{"gitId":"parnikkapore"},"content":"  * The `by/` prefix is chosen for the deadline, as it is a good compromise between brevity and comprehensibility (\"do this *by* a certain date\").","lastModifiedDate":"2022-10-20"},{"lineNumber":274,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":275,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":276,"author":{"gitId":"songivan00"},"content":"### Editing feature","lastModifiedDate":"2022-11-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"songivan00"},"content":"#### About","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"songivan00"},"content":"CodeConnect has features that allow you to edit tasks and contacts. The editing feature use the following commands:","lastModifiedDate":"2022-11-07"},{"lineNumber":281,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":282,"author":{"gitId":"songivan00"},"content":"* `edit {task_index} {field prefix + field description}` - Edits the task at the specified index","lastModifiedDate":"2022-11-07"},{"lineNumber":283,"author":{"gitId":"songivan00"},"content":"* `editc {contact_index} {field_prefix + field_description}` - Edits the contact at the specified index","lastModifiedDate":"2022-11-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"songivan00"},"content":"Example of command use:","lastModifiedDate":"2022-10-20"},{"lineNumber":286,"author":{"gitId":"songivan00"},"content":"* `edit 1 m/CS1101S` - Changes the module of the task at index 1 to be \"CS1101S\"","lastModifiedDate":"2022-11-07"},{"lineNumber":287,"author":{"gitId":"songivan00"},"content":"* `editc 2 p/91919100` - Changes the phone number of the contact at index 2 to \"91919100\"","lastModifiedDate":"2022-11-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"songivan00"},"content":"#### Implementation flow","lastModifiedDate":"2022-11-07"},{"lineNumber":290,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":291,"author":{"gitId":"songivan00"},"content":"Only the execution of `edit` command will be shown below as both commands are implemented in a similar way.","lastModifiedDate":"2022-11-07"},{"lineNumber":292,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":293,"author":{"gitId":"songivan00"},"content":"Outline of how components work together when the user enters an edit command:","lastModifiedDate":"2022-11-07"},{"lineNumber":294,"author":{"gitId":"songivan00"},"content":"1. User enters `edit 3 m/CS1101S` into the command prompt box","lastModifiedDate":"2022-11-07"},{"lineNumber":295,"author":{"gitId":"songivan00"},"content":"2. The user input will be sent to `CodeConnectParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":296,"author":{"gitId":"songivan00"},"content":"3. `CodeConnectParser` send the argument `3 m/CS1101S` to `EditTaskCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":297,"author":{"gitId":"songivan00"},"content":"4. `EditTaskCommandParser` will call its `parse` method to get the index and create a `EditTaskDescriptor` instance that stores the edited field","lastModifiedDate":"2022-11-07"},{"lineNumber":298,"author":{"gitId":"songivan00"},"content":"5. A new `EditTaskCommand` will then be created with the parsed index and `EditTaskDescriptor` object","lastModifiedDate":"2022-11-07"},{"lineNumber":299,"author":{"gitId":"songivan00"},"content":"6. That `EditTaskCommand` object will execute and a new `Task` will be created with the new fields","lastModifiedDate":"2022-11-07"},{"lineNumber":300,"author":{"gitId":"songivan00"},"content":"7. The `model` will then be updated accordingly with the new Edited Task.","lastModifiedDate":"2022-11-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"songivan00"},"content":"![Activity Diagram](images/EditTaskActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":304,"author":{"gitId":"songivan00"},"content":"\u003cdiv style\u003d\"text-align: center\"\u003eActivity diagram of edit command execution\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":305,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":306,"author":{"gitId":"songivan00"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-20"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"songivan00"},"content":"* Initially we felt that being able to edit more than 1 field per edit task command was not as important, as","lastModifiedDate":"2022-11-07"},{"lineNumber":309,"author":{"gitId":"songivan00"},"content":"a task object does not have that many fields to begin with. However, we felt that implementing it will still","lastModifiedDate":"2022-10-20"},{"lineNumber":310,"author":{"gitId":"songivan00"},"content":"make it a lot easier in the event that a user want to have multiple changes to a task.","lastModifiedDate":"2022-10-20"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"songivan00"},"content":"### Marking features","lastModifiedDate":"2022-11-07"},{"lineNumber":313,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":314,"author":{"gitId":"songivan00"},"content":"#### About","lastModifiedDate":"2022-11-07"},{"lineNumber":315,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":316,"author":{"gitId":"songivan00"},"content":"CodeConnect has features that allow you to mark and unmark your tasks as complete and incomplete respectively. The marking features use the following commands:","lastModifiedDate":"2022-11-07"},{"lineNumber":317,"author":{"gitId":"songivan00"},"content":"* mark {task_index} - Marks task at specified index as completed","lastModifiedDate":"2022-11-07"},{"lineNumber":318,"author":{"gitId":"songivan00"},"content":"* unmark {task_index} - Unmarks task at specified index as incomplete","lastModifiedDate":"2022-11-07"},{"lineNumber":319,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":320,"author":{"gitId":"songivan00"},"content":"Examples of command use:","lastModifiedDate":"2022-11-07"},{"lineNumber":321,"author":{"gitId":"songivan00"},"content":"* `mark 1` -  Marks the task at index 1 as complete","lastModifiedDate":"2022-11-07"},{"lineNumber":322,"author":{"gitId":"songivan00"},"content":"* `unmark 1` - Unmarks the task at index 1 as incomplete","lastModifiedDate":"2022-11-07"},{"lineNumber":323,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":324,"author":{"gitId":"songivan00"},"content":"#### Implementation flow","lastModifiedDate":"2022-11-07"},{"lineNumber":325,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":326,"author":{"gitId":"angkl0"},"content":"To represent the completion status of `Task`, a new `Task` attribute `status` of type `Status` is added. The boolean field ","lastModifiedDate":"2022-11-07"},{"lineNumber":327,"author":{"gitId":"angkl0"},"content":"`isComplete` in `Status` is `true` when a task is marked as complete and `false` when a task is incomplete.","lastModifiedDate":"2022-11-07"},{"lineNumber":328,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":329,"author":{"gitId":"angkl0"},"content":"Only the execution of `mark` command will be shown below as both commands are implemented in a similar way.","lastModifiedDate":"2022-11-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":331,"author":{"gitId":"angkl0"},"content":"Outline of how components work together when the user enters a mark command:","lastModifiedDate":"2022-11-07"},{"lineNumber":332,"author":{"gitId":"angkl0"},"content":"1. User enters `mark 1` into the command prompt box","lastModifiedDate":"2022-11-07"},{"lineNumber":333,"author":{"gitId":"angkl0"},"content":"2. User input `mark 1` is passed to `LogicManager` which then calls `LogicManager#execute()` which then calls ","lastModifiedDate":"2022-11-07"},{"lineNumber":334,"author":{"gitId":"angkl0"},"content":"`CodeConnectParser#parseCommand()`.","lastModifiedDate":"2022-11-07"},{"lineNumber":335,"author":{"gitId":"angkl0"},"content":"3. It is determined the type of command is `mark` and a new `MarkTaskCommandParser` is created and `MarkTaskCommandParser#parse`","lastModifiedDate":"2022-11-07"},{"lineNumber":336,"author":{"gitId":"angkl0"},"content":"is called, parsing and validating the index.","lastModifiedDate":"2022-11-07"},{"lineNumber":337,"author":{"gitId":"angkl0"},"content":"4. If index is valid, a new `MarkTaskCommand` is created and returned to `LogicManager`.","lastModifiedDate":"2022-11-07"},{"lineNumber":338,"author":{"gitId":"angkl0"},"content":"5. `LogicManager` calls `MarkTaskCommand#execute()`. If there exists an unmarked task at index 1, ","lastModifiedDate":"2022-11-07"},{"lineNumber":339,"author":{"gitId":"angkl0"},"content":"`MarkTaskCommand#createMarkedTask()` is called, creating a copy of the task to be marked with its `status` set to `true`.","lastModifiedDate":"2022-11-07"},{"lineNumber":340,"author":{"gitId":"angkl0"},"content":"6. `Model#setTask()` is then called to replace the task to be marked with the marked copy.","lastModifiedDate":"2022-11-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":342,"author":{"gitId":"angkl0"},"content":"![Interactions Inside the Logic Component for the `mark 1` Command](images/MarkTaskSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":343,"author":{"gitId":"angkl0"},"content":"\u003cdiv style\u003d\"text-align: center\"\u003eSequence diagram of mark command execution\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":345,"author":{"gitId":"angkl0"},"content":"The activity diagram below summarizes the implementation of a `mark` command. ","lastModifiedDate":"2022-11-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":347,"author":{"gitId":"songivan00"},"content":"![Activity diagram for execution of a mark command](images/MarkTaskActivityDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":348,"author":{"gitId":"songivan00"},"content":" \u003cdiv style\u003d\"text-align: center\"\u003eActivity diagram of mark command execution\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":351,"author":{"gitId":"songivan00"},"content":"#### Design considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":353,"author":{"gitId":"angkl0"},"content":"* One design consideration involved marking/unmarking multiple tasks by adding a space before inputting the index of another task.","lastModifiedDate":"2022-11-07"},{"lineNumber":354,"author":{"gitId":"songivan00"},"content":"However, users could forget to input spaces when inputting indexes of multiple tasks, leading to unintended tasks being","lastModifiedDate":"2022-11-07"},{"lineNumber":355,"author":{"gitId":"angkl0"},"content":"marked/unmarked without the users even realising it. Limiting the number of tasks that can be marked/unmarked to 1 is thus ","lastModifiedDate":"2022-11-07"},{"lineNumber":356,"author":{"gitId":"angkl0"},"content":"considered to be an acceptable trade-off.","lastModifiedDate":"2022-11-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":358,"author":{"gitId":"songivan00"},"content":"### Listing features","lastModifiedDate":"2022-11-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":360,"author":{"gitId":"angkl0"},"content":"#### About","lastModifiedDate":"2022-11-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":362,"author":{"gitId":"songivan00"},"content":"CodeConnect has features that allow you to list out all the contacts and tasks. The listing features use the following commands:","lastModifiedDate":"2022-11-07"},{"lineNumber":363,"author":{"gitId":"songivan00"},"content":"* `list` - Shows a list of all tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":364,"author":{"gitId":"songivan00"},"content":"* `list time` - Shows a list of all tasks sorted by deadline","lastModifiedDate":"2022-11-07"},{"lineNumber":365,"author":{"gitId":"songivan00"},"content":"* `listc` - Shows a list of all contacts","lastModifiedDate":"2022-11-07"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":367,"author":{"gitId":"angkl0"},"content":"#### Implementation flow","lastModifiedDate":"2022-11-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":369,"author":{"gitId":"angkl0"},"content":"Listing of tasks is facilitated by `ModelManager`. It contains `filteredTaskList` of type `FilteredList`. ","lastModifiedDate":"2022-11-07"},{"lineNumber":370,"author":{"gitId":"angkl0"},"content":"It also contains `sortedTaskList` of type `SortedList` that wraps `filteredTaskList` in it. As any changes to `filteredTaskList`","lastModifiedDate":"2022-11-07"},{"lineNumber":371,"author":{"gitId":"parnikkapore"},"content":"will be reflected in the `sortedTaskList`, the `Ui` displays `sortedTaskList` in the tasklist panel. `SortedList` contains the","lastModifiedDate":"2022-11-07"},{"lineNumber":372,"author":{"gitId":"angkl0"},"content":"method SortedList#setComparator(Comparator\u003c? super E\u003e comparator). The above method is called in ","lastModifiedDate":"2022-11-07"},{"lineNumber":373,"author":{"gitId":"angkl0"},"content":"`ModelManager#updateSortedTaskList(Comparator\u003cTask\u003e comparator)` that allows for the sorting of `sortedTaskList` with a comparator.","lastModifiedDate":"2022-11-07"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":375,"author":{"gitId":"songivan00"},"content":"Only the execution of `list time` command will be shown below as all listing commands are implemented in a similar way.","lastModifiedDate":"2022-11-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":377,"author":{"gitId":"angkl0"},"content":"Outline of how components work together when the user enters a list command:","lastModifiedDate":"2022-11-07"},{"lineNumber":378,"author":{"gitId":"angkl0"},"content":"1. User enters `list time` into the command prompt box","lastModifiedDate":"2022-11-07"},{"lineNumber":379,"author":{"gitId":"angkl0"},"content":"2. User input `list time` is passed to `LogicManager` which then calls `LogicManager#execute()` which then calls","lastModifiedDate":"2022-11-07"},{"lineNumber":380,"author":{"gitId":"angkl0"},"content":"   `CodeConnectParser#parseCommand()`.","lastModifiedDate":"2022-11-07"},{"lineNumber":381,"author":{"gitId":"angkl0"},"content":"3. It is determined the type of command is `list` and a new `ListTaskCommandParser` is created and `ListTaskCommandParser#parse`","lastModifiedDate":"2022-11-07"},{"lineNumber":382,"author":{"gitId":"angkl0"},"content":"   is called. It is determined that the input is a command for listing tasks by deadline.","lastModifiedDate":"2022-11-07"},{"lineNumber":383,"author":{"gitId":"angkl0"},"content":"4. A new `ListTaskCommand` is created with `DeadlineComparator` passed as parameter. `ListTaskCommand` is returned to `LogicManager`.","lastModifiedDate":"2022-11-07"},{"lineNumber":384,"author":{"gitId":"angkl0"},"content":"5. `LogicManager` calls `ListTaskCommand#execute()`. `Model#updateSortedTaskList()` is then called, setting the comparator ","lastModifiedDate":"2022-11-07"},{"lineNumber":385,"author":{"gitId":"angkl0"},"content":"   in `sortedTaskList` to `DeadlineComparator`. `Ui` then displays the tasks ordered by task with the earliest deadline on top.","lastModifiedDate":"2022-11-07"},{"lineNumber":386,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":387,"author":{"gitId":"angkl0"},"content":"![Interactions Inside the Logic Component for the `list time` Command](images/ListTaskSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":388,"author":{"gitId":"angkl0"},"content":"\u003cdiv style\u003d\"text-align: center\"\u003eSequence diagram of list command execution\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":389,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":390,"author":{"gitId":"angkl0"},"content":"#### Design considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":391,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":392,"author":{"gitId":"angkl0"},"content":"* One design consideration involved deciding how tasks are ordered under default list command `list`.","lastModifiedDate":"2022-11-07"},{"lineNumber":393,"author":{"gitId":"angkl0"},"content":"One choice was for tasks to be ordered with most recently added task on top and the other was for ","lastModifiedDate":"2022-11-07"},{"lineNumber":394,"author":{"gitId":"angkl0"},"content":"tasks to be ordered with least recently added task on top. ","lastModifiedDate":"2022-11-07"},{"lineNumber":395,"author":{"gitId":"angkl0"},"content":"* The former was chosen in the end as under a daily use basis, a tasklist is likely to evolve rather","lastModifiedDate":"2022-11-07"},{"lineNumber":396,"author":{"gitId":"angkl0"},"content":"quickly. It was considered to be more convenient for a user to be able to see more recent and relevant ","lastModifiedDate":"2022-11-07"},{"lineNumber":397,"author":{"gitId":"angkl0"},"content":"tasks at the top without having to scroll towards the bottom of the tasklist.","lastModifiedDate":"2022-11-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":399,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"parnikkapore"},"content":"## Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2022-10-30"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":412,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":413,"author":{"gitId":"parnikkapore"},"content":"## Appendix: Requirements","lastModifiedDate":"2022-10-30"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"JonLamy"},"content":"* an SOC student","lastModifiedDate":"2022-09-29"},{"lineNumber":420,"author":{"gitId":"JonLamy"},"content":"* needs support with his academics","lastModifiedDate":"2022-09-29"},{"lineNumber":421,"author":{"gitId":"JonLamy"},"content":"* has friends that he is willing to ask for help","lastModifiedDate":"2022-09-29"},{"lineNumber":422,"author":{"gitId":"JonLamy"},"content":"* misses deadlines","lastModifiedDate":"2022-09-29"},{"lineNumber":423,"author":{"gitId":"JonLamy"},"content":"* cannot remember all the details of his assignments and exams","lastModifiedDate":"2022-09-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":428,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"JonLamy"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"JonLamy"},"content":"Search for contacts for help with a particular task faster than having to think about who is taking the same module as you.","lastModifiedDate":"2022-09-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"JonLamy"},"content":"| Priority | As a …​                                          | I want to …​                                                                   | So that I can …​                                                       | Implemented in Current Version? |","lastModifiedDate":"2022-11-07"},{"lineNumber":439,"author":{"gitId":"JonLamy"},"content":"|----------|--------------------------------------------------|--------------------------------------------------------------------------------|------------------------------------------------------------------------|---------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":440,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | new or forgetful user                            | see usage instructions                                                         | learn how to get started and use the app, if I forget                  | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":441,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user                                             | add a new contact                                                              | track details of people I know                                         | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":442,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user                                             | delete a contact                                                               | remove contacts that I no longer need                                  | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":443,"author":{"gitId":"JonLamy"},"content":"| `* *`    | impatient user                                   | delete all contacts                                                            |                                                                        | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":444,"author":{"gitId":"JonLamy"},"content":"| `* *`    | user                                             | edit a contact                                                                 |                                                                        | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":445,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user                                             | find persons by name                                                           | locate details of persons without having to go through the entire list | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":446,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user                                             | find persons by module taken                                                   | get a list of people that can help me with a particular module         | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":447,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user stuck on work                               | find persons by task that I need help with                                     | get help for a particular task quickly                                 | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":448,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user                                             | add a new task                                                                 | record important to-do\u0027s                                               | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":449,"author":{"gitId":"JonLamy"},"content":"| `* *`    | user                                             | be able to enter the deadline of my tasks in multiple formats                  | not need to think about the date format when manipulating tasks        | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":450,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user                                             | delete a task                                                                  | remove contacts that are irrelavant                                    | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":451,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user                                             | mark a task as complete                                                        |                                                                        | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":452,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user                                             | mark a task as not complete                                                    |                                                                        | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":453,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user with multiple deadlines                     | list tasks by deadline                                                         | prioritise what to do first                                            | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":454,"author":{"gitId":"JonLamy"},"content":"| `* *`    | future thinking SOC student                      | prioritize my tasks                                                            | plan what I should be working on first                                 | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":455,"author":{"gitId":"JonLamy"},"content":"| `* *`    | user                                             | edit a task                                                                    | change deadline if it is updated                                       | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":456,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user with many tasks                             | find a task by name                                                            | locate details of tasks without having to go through the entire list   | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":457,"author":{"gitId":"JonLamy"},"content":"| `* * *`  | user with many tasks                             | find a task by module it belongs to                                            | know what tasks I must do for a particular module                      | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":458,"author":{"gitId":"JonLamy"},"content":"| `* *`    | impatient user                                   | delete all completed tasks at once                                             | conveniently clean my task list                                        | yes                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":459,"author":{"gitId":"JonLamy"},"content":"| `* *`    | SOC student working on a group project           | see all the contacts of those people in my group project                       | easily contact them                                                    | no                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":460,"author":{"gitId":"JonLamy"},"content":"| `* *`    | user                                             | hide private contact details                                                   | minimize chance of someone else seeing them by accident                | no                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":461,"author":{"gitId":"JonLamy"},"content":"| `*`      | future thinking SOC CS Student                   | list tasks and events for the next 7 days                                      | plan what I want to do better                                          | no                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":462,"author":{"gitId":"JonLamy"},"content":"| `*`      | SOC student with many digital files to organize  | link a task to relevant local files (pdf, pptx, etc.)                          | open them quickly                                                      | no                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":463,"author":{"gitId":"JonLamy"},"content":"| `*`      | overwhelmed SOC student                          | filter tasks by whether or not they are graded                                 | decide on what to do first                                             | no                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":464,"author":{"gitId":"JonLamy"},"content":"| `*`      | SOC student                                      | assign an estimated time to complete for each task                             | realistically estimate how much I can accomplish in a day              | no                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":465,"author":{"gitId":"JonLamy"},"content":"| `*`      | forgetful SOC student                            | be greeted (or warned) with a list of urgent/overdue tasks when I open the app | remind myself about them                                               | no                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":466,"author":{"gitId":"JonLamy"},"content":"| `*`      | SOC student who has many venues to keep track of | store the venues associated with my tasks                                      |                                                                        | no                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":467,"author":{"gitId":"JonLamy"},"content":"| `*`      | user with many persons in the address book       | sort persons by name                                                           | locate a person easily                                                 | no                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"songivan00"},"content":"(For all use cases below, the **System** is the `CodeConnect` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-29"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"danzzzerl"},"content":"**Use case 1: Finding contacts by module**","lastModifiedDate":"2022-11-07"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"songivan00"},"content":"1. User requests to find persons taking a specific module.","lastModifiedDate":"2022-09-29"},{"lineNumber":480,"author":{"gitId":"songivan00"},"content":"2. CodeConnect requests for module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":481,"author":{"gitId":"songivan00"},"content":"3. User types in module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":482,"author":{"gitId":"songivan00"},"content":"4. CodeConnect shows a list of persons taking that module.","lastModifiedDate":"2022-09-29"},{"lineNumber":483,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":484,"author":{"gitId":"danzzzerl"},"content":"   Use case ends. ","lastModifiedDate":"2022-11-07"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":486,"author":{"gitId":"songivan00"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":487,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":488,"author":{"gitId":"songivan00"},"content":"* 3a. The list is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":489,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":490,"author":{"gitId":"songivan00"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":491,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":492,"author":{"gitId":"songivan00"},"content":"* 3b. The given module code is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":493,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":494,"author":{"gitId":"songivan00"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":495,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":496,"author":{"gitId":"songivan00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-29"},{"lineNumber":497,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":498,"author":{"gitId":"danzzzerl"},"content":"****","lastModifiedDate":"2022-11-07"},{"lineNumber":499,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":500,"author":{"gitId":"danzzzerl"},"content":"**Use case 2: Mark a task as complete**","lastModifiedDate":"2022-11-07"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":502,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":504,"author":{"gitId":"parnikkapore"},"content":"1.  User requests to list tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":505,"author":{"gitId":"parnikkapore"},"content":"2.  CodeConnect shows a list of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":506,"author":{"gitId":"parnikkapore"},"content":"3.  User requests to mark a specific task in the list as complete","lastModifiedDate":"2022-09-28"},{"lineNumber":507,"author":{"gitId":"parnikkapore"},"content":"4.  CodeConnect marks the task as complete","lastModifiedDate":"2022-09-28"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"parnikkapore"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"danzzzerl"},"content":"****","lastModifiedDate":"2022-11-07"},{"lineNumber":524,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":525,"author":{"gitId":"danzzzerl"},"content":"**Use case 3: Edit a contact**","lastModifiedDate":"2022-11-07"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"angkl0"},"content":"1.  User requests to list contacts","lastModifiedDate":"2022-09-29"},{"lineNumber":530,"author":{"gitId":"angkl0"},"content":"2.  CodeConnect shows a list of contacts","lastModifiedDate":"2022-09-29"},{"lineNumber":531,"author":{"gitId":"angkl0"},"content":"3.  User inputs index of contact and its updated information","lastModifiedDate":"2022-09-29"},{"lineNumber":532,"author":{"gitId":"angkl0"},"content":"4.  CodeConnect updates the contact according to the input given","lastModifiedDate":"2022-09-29"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":536,"author":{"gitId":"parnikkapore"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":537,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":538,"author":{"gitId":"parnikkapore"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":539,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":540,"author":{"gitId":"parnikkapore"},"content":"  Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":541,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":542,"author":{"gitId":"parnikkapore"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-28"},{"lineNumber":543,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":544,"author":{"gitId":"parnikkapore"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-28"},{"lineNumber":545,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":546,"author":{"gitId":"parnikkapore"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-28"},{"lineNumber":547,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":548,"author":{"gitId":"danzzzerl"},"content":"****","lastModifiedDate":"2022-11-07"},{"lineNumber":549,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":550,"author":{"gitId":"danzzzerl"},"content":"**Use case 4: Delete a contact**","lastModifiedDate":"2022-11-07"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"danzzzerl"},"content":"1.  User requests to find persons taking a specific module.","lastModifiedDate":"2022-09-29"},{"lineNumber":555,"author":{"gitId":"danzzzerl"},"content":"2.  CodeConnect requests for module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":556,"author":{"gitId":"danzzzerl"},"content":"3.  User types in module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":557,"author":{"gitId":"danzzzerl"},"content":"4.  CodeConnect shows a list of persons taking that module.","lastModifiedDate":"2022-09-29"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"danzzzerl"},"content":"* 3a. The list is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"danzzzerl"},"content":"* 3b. The given module code is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"danzzzerl"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"danzzzerl"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-29"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"danzzzerl"},"content":"****","lastModifiedDate":"2022-11-07"},{"lineNumber":574,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":575,"author":{"gitId":"danzzzerl"},"content":"**Use case 5: Add a task**","lastModifiedDate":"2022-11-07"},{"lineNumber":576,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":577,"author":{"gitId":"danzzzerl"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":578,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":579,"author":{"gitId":"danzzzerl"},"content":"1. User starts CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":580,"author":{"gitId":"danzzzerl"},"content":"2. User requests to add a task through appropriate command.","lastModifiedDate":"2022-11-07"},{"lineNumber":581,"author":{"gitId":"danzzzerl"},"content":"3. CodeConnect adds the task and shows the updated task list.","lastModifiedDate":"2022-11-07"},{"lineNumber":582,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":583,"author":{"gitId":"danzzzerl"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":584,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":585,"author":{"gitId":"danzzzerl"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":586,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":587,"author":{"gitId":"danzzzerl"},"content":"* 2a. User uses wrong syntax/format in command.","lastModifiedDate":"2022-11-07"},{"lineNumber":588,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":589,"author":{"gitId":"danzzzerl"},"content":"    * 2a1. CodeConnect shows an error message with the correct format style.","lastModifiedDate":"2022-11-07"},{"lineNumber":590,"author":{"gitId":"danzzzerl"},"content":"      ","lastModifiedDate":"2022-11-07"},{"lineNumber":591,"author":{"gitId":"danzzzerl"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-11-07"},{"lineNumber":592,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":593,"author":{"gitId":"danzzzerl"},"content":"****","lastModifiedDate":"2022-11-07"},{"lineNumber":594,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":595,"author":{"gitId":"danzzzerl"},"content":"**Use case 6: List tasks**","lastModifiedDate":"2022-11-07"},{"lineNumber":596,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":597,"author":{"gitId":"danzzzerl"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":598,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":599,"author":{"gitId":"danzzzerl"},"content":"1. User starts CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":600,"author":{"gitId":"danzzzerl"},"content":"2. User requests to see current tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":601,"author":{"gitId":"danzzzerl"},"content":"3. CodeConnect displays the task list.","lastModifiedDate":"2022-11-07"},{"lineNumber":602,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":603,"author":{"gitId":"danzzzerl"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":604,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":605,"author":{"gitId":"danzzzerl"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":606,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":607,"author":{"gitId":"danzzzerl"},"content":"* 2a. User uses wrong syntax in command.","lastModifiedDate":"2022-11-07"},{"lineNumber":608,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":609,"author":{"gitId":"danzzzerl"},"content":"    * 2a1. CodeConnect shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":610,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":611,"author":{"gitId":"danzzzerl"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-11-07"},{"lineNumber":612,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":613,"author":{"gitId":"danzzzerl"},"content":"****","lastModifiedDate":"2022-11-07"},{"lineNumber":614,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":615,"author":{"gitId":"danzzzerl"},"content":"**Use case 7: List tasks in the order of the earliest deadline**","lastModifiedDate":"2022-11-07"},{"lineNumber":616,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":617,"author":{"gitId":"danzzzerl"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":618,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":619,"author":{"gitId":"danzzzerl"},"content":"1. User starts CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":620,"author":{"gitId":"danzzzerl"},"content":"2. User requests to see current tasks, where tasks with the earlier datelines appear at the top.","lastModifiedDate":"2022-11-07"},{"lineNumber":621,"author":{"gitId":"danzzzerl"},"content":"3. CodeConnect displays the updated sorted task list.","lastModifiedDate":"2022-11-07"},{"lineNumber":622,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":623,"author":{"gitId":"danzzzerl"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":624,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":625,"author":{"gitId":"danzzzerl"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":626,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":627,"author":{"gitId":"danzzzerl"},"content":"* 2a. User uses wrong syntax in command.","lastModifiedDate":"2022-11-07"},{"lineNumber":628,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":629,"author":{"gitId":"danzzzerl"},"content":"    * 2a1. CodeConnect shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":630,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":631,"author":{"gitId":"danzzzerl"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-11-07"},{"lineNumber":632,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":633,"author":{"gitId":"danzzzerl"},"content":"****","lastModifiedDate":"2022-11-07"},{"lineNumber":634,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":635,"author":{"gitId":"danzzzerl"},"content":"**Use case 8: Delete tasks that are completed**","lastModifiedDate":"2022-11-07"},{"lineNumber":636,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":637,"author":{"gitId":"danzzzerl"},"content":"**Preconditions**","lastModifiedDate":"2022-11-07"},{"lineNumber":638,"author":{"gitId":"danzzzerl"},"content":"- User is currently using CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":639,"author":{"gitId":"danzzzerl"},"content":"- User has tasks that are done in the task list.","lastModifiedDate":"2022-11-07"},{"lineNumber":640,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":641,"author":{"gitId":"danzzzerl"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":642,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":643,"author":{"gitId":"danzzzerl"},"content":"1. User starts CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":644,"author":{"gitId":"danzzzerl"},"content":"2. User requests to delete completed tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":645,"author":{"gitId":"danzzzerl"},"content":"3. CodeConnect displays the updated task list with only uncompleted tasks left.","lastModifiedDate":"2022-11-07"},{"lineNumber":646,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":647,"author":{"gitId":"danzzzerl"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":648,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":649,"author":{"gitId":"danzzzerl"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":650,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":651,"author":{"gitId":"danzzzerl"},"content":"* 2a. User uses wrong syntax in command.","lastModifiedDate":"2022-11-07"},{"lineNumber":652,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":653,"author":{"gitId":"danzzzerl"},"content":"    * 2a1. CodeConnect shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":654,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":655,"author":{"gitId":"danzzzerl"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-11-07"},{"lineNumber":656,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":657,"author":{"gitId":"danzzzerl"},"content":"****","lastModifiedDate":"2022-11-07"},{"lineNumber":658,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":659,"author":{"gitId":"danzzzerl"},"content":"**Use case 9: Find contacts that take the module of the first task in the current task list**","lastModifiedDate":"2022-11-07"},{"lineNumber":660,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":661,"author":{"gitId":"danzzzerl"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":662,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":663,"author":{"gitId":"danzzzerl"},"content":"1. User starts CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":664,"author":{"gitId":"danzzzerl"},"content":"2. User requests to find contacts who can help with the current task at the top of the task list.","lastModifiedDate":"2022-11-07"},{"lineNumber":665,"author":{"gitId":"danzzzerl"},"content":"3. CodeConnect displays the contacts taking the module of the task at the top of the task list.","lastModifiedDate":"2022-11-07"},{"lineNumber":666,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":667,"author":{"gitId":"danzzzerl"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":668,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":669,"author":{"gitId":"danzzzerl"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":670,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":671,"author":{"gitId":"danzzzerl"},"content":"* 2a. User uses wrong syntax in command.","lastModifiedDate":"2022-11-07"},{"lineNumber":672,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":673,"author":{"gitId":"danzzzerl"},"content":"    * 2a1. CodeConnect shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":674,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":675,"author":{"gitId":"danzzzerl"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-11-07"},{"lineNumber":676,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":677,"author":{"gitId":"danzzzerl"},"content":"* 2b. No contacts taking that particular module.","lastModifiedDate":"2022-11-07"},{"lineNumber":678,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":679,"author":{"gitId":"danzzzerl"},"content":"    * 2b1. CodeConnect shows an empty contact list.","lastModifiedDate":"2022-11-07"},{"lineNumber":680,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":681,"author":{"gitId":"danzzzerl"},"content":"      Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":682,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":683,"author":{"gitId":"danzzzerl"},"content":"****","lastModifiedDate":"2022-11-07"},{"lineNumber":684,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":685,"author":{"gitId":"danzzzerl"},"content":"**Use case 10: Clearing contacts**","lastModifiedDate":"2022-11-07"},{"lineNumber":686,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":687,"author":{"gitId":"danzzzerl"},"content":"**Preconditions**","lastModifiedDate":"2022-11-07"},{"lineNumber":688,"author":{"gitId":"danzzzerl"},"content":"- User is currently using CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":689,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":690,"author":{"gitId":"danzzzerl"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":691,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":692,"author":{"gitId":"danzzzerl"},"content":"1. User enters a command to clear all contacts from CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":693,"author":{"gitId":"danzzzerl"},"content":"2. CodeConnect sends a message that all contacts are deleted and saves all changes to disk.","lastModifiedDate":"2022-11-07"},{"lineNumber":694,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":695,"author":{"gitId":"danzzzerl"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":696,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":697,"author":{"gitId":"danzzzerl"},"content":"****","lastModifiedDate":"2022-11-07"},{"lineNumber":698,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":700,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"songivan00"},"content":"2. Should be able to hold up to 1000 persons and tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-29"},{"lineNumber":704,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"songivan00"},"content":"4. Command should execute in less than a second.","lastModifiedDate":"2022-09-29"},{"lineNumber":706,"author":{"gitId":"songivan00"},"content":"5. Product features must work without internet.","lastModifiedDate":"2022-09-29"},{"lineNumber":707,"author":{"gitId":"danzzzerl"},"content":"6. Should be able to package into a single JAR file.","lastModifiedDate":"2022-11-07"},{"lineNumber":708,"author":{"gitId":"danzzzerl"},"content":"7. JAR file should be at most 100mb and documentation should be at most 15mb per file.","lastModifiedDate":"2022-11-07"},{"lineNumber":709,"author":{"gitId":"danzzzerl"},"content":"8. Documentation should include appropriate UML diagrams.","lastModifiedDate":"2022-11-07"},{"lineNumber":710,"author":{"gitId":"danzzzerl"},"content":"9. Should be for a single user.","lastModifiedDate":"2022-11-07"},{"lineNumber":711,"author":{"gitId":"danzzzerl"},"content":"10. Should be usable without initialising a user account.","lastModifiedDate":"2022-11-07"},{"lineNumber":712,"author":{"gitId":"danzzzerl"},"content":"11. No input should terminate CodeConnect, except the `exit` command.","lastModifiedDate":"2022-11-07"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"songivan00"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-07"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"JonLamy"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2022-09-29"},{"lineNumber":719,"author":{"gitId":"JonLamy"},"content":"* **CLI**: Command Line Interface - Where you can execute commands by typing them","lastModifiedDate":"2022-09-29"},{"lineNumber":720,"author":{"gitId":"JonLamy"},"content":"* **JSON**: A file format that uses human-readable text to store and transmit data objects consisting of attribute–value pairs and arrays","lastModifiedDate":"2022-09-29"},{"lineNumber":721,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"parnikkapore"},"content":"## Appendix: Instructions for manual testing","lastModifiedDate":"2022-10-30"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"parnikkapore"},"content":"   1. Double-click the jar file","lastModifiedDate":"2022-11-07"},{"lineNumber":743,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":744,"author":{"gitId":"parnikkapore"},"content":"      Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2022-11-07"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"angkl0"},"content":"2. Saving window preferences","lastModifiedDate":"2022-11-07"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"parnikkapore"},"content":"   2. Re-launch the app by double-clicking the jar file.","lastModifiedDate":"2022-11-07"},{"lineNumber":751,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":752,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"parnikkapore"},"content":"1. Exiting the program","lastModifiedDate":"2022-11-07"},{"lineNumber":755,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":756,"author":{"gitId":"parnikkapore"},"content":"    1. Enter the `exit` command.","lastModifiedDate":"2022-11-07"},{"lineNumber":757,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":758,"author":{"gitId":"parnikkapore"},"content":"       Expected: The program exits.","lastModifiedDate":"2022-11-07"},{"lineNumber":759,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":760,"author":{"gitId":"parnikkapore"},"content":"    1. Reopen the program. Click the close button on the top right of the window.","lastModifiedDate":"2022-11-07"},{"lineNumber":761,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":762,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":763,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":764,"author":{"gitId":"parnikkapore"},"content":"    1. Reopen the program. Select the File → Exit menu entry.","lastModifiedDate":"2022-11-07"},{"lineNumber":765,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":766,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":767,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":768,"author":{"gitId":"parnikkapore"},"content":"   *All three should also work when the GUI is showing an invalid command.*","lastModifiedDate":"2022-11-07"},{"lineNumber":769,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":770,"author":{"gitId":"parnikkapore"},"content":"### GUI functionality","lastModifiedDate":"2022-11-07"},{"lineNumber":771,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":772,"author":{"gitId":"parnikkapore"},"content":"1. Using menu items","lastModifiedDate":"2022-11-07"},{"lineNumber":773,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":774,"author":{"gitId":"parnikkapore"},"content":"    1. Select the Help → Help menu entry.","lastModifiedDate":"2022-11-07"},{"lineNumber":775,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":776,"author":{"gitId":"parnikkapore"},"content":"       Expected: A window showing a clickable link to the [User Guide](UserGuide.html) is shown.","lastModifiedDate":"2022-11-07"},{"lineNumber":777,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":778,"author":{"gitId":"parnikkapore"},"content":"       *Note: This window is known to open with zero dimensions on Linux X11.*","lastModifiedDate":"2022-11-07"},{"lineNumber":779,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":780,"author":{"gitId":"parnikkapore"},"content":"    1. Close the help window. Press `F1`.","lastModifiedDate":"2022-11-07"},{"lineNumber":781,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":782,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":783,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":784,"author":{"gitId":"parnikkapore"},"content":"1. Switching tabs","lastModifiedDate":"2022-11-07"},{"lineNumber":785,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":786,"author":{"gitId":"parnikkapore"},"content":"    1. Prerequisites: The Contacts tab is selected.","lastModifiedDate":"2022-11-07"},{"lineNumber":787,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":788,"author":{"gitId":"parnikkapore"},"content":"    1. Click on the Tasks tab.","lastModifiedDate":"2022-11-07"},{"lineNumber":789,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":790,"author":{"gitId":"parnikkapore"},"content":"       Expected: The Tasks tab is highlighted. A list of tasks is shown. The data file path at the bottom changes to the task list file (`/data/tasks.json` by default).","lastModifiedDate":"2022-11-07"},{"lineNumber":791,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":792,"author":{"gitId":"parnikkapore"},"content":"    1. Click on the Contacts tab.","lastModifiedDate":"2022-11-07"},{"lineNumber":793,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":794,"author":{"gitId":"parnikkapore"},"content":"       Expected: The Contacts tab is highlighted. A list of contacts is shown. The data file path at the bottom changes to the contact list file (`/data/contacts.json` by default).","lastModifiedDate":"2022-11-07"},{"lineNumber":795,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":796,"author":{"gitId":"parnikkapore"},"content":"### Managing tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":797,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":798,"author":{"gitId":"parnikkapore"},"content":"1. Adding a task","lastModifiedDate":"2022-11-07"},{"lineNumber":799,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":800,"author":{"gitId":"parnikkapore"},"content":"    1. Prerequisites: A task with the same name and module as below does not already exist. (It does not exist in the sample data)","lastModifiedDate":"2022-11-07"},{"lineNumber":801,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":802,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `add Programming assignment m/CS1234 by/2022-01-02 3:45pm`","lastModifiedDate":"2022-11-07"},{"lineNumber":803,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":804,"author":{"gitId":"parnikkapore"},"content":"       Expected: The app switches to the Task tab. A new task is shown in the GUI and its details are shown in the result box.","lastModifiedDate":"2022-11-07"},{"lineNumber":805,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":806,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `add Get groceries by/tomorrow`","lastModifiedDate":"2022-11-07"},{"lineNumber":807,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":808,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":809,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":810,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `add Math assignment m/MA4321`","lastModifiedDate":"2022-11-07"},{"lineNumber":811,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":812,"author":{"gitId":"parnikkapore"},"content":"       Expected: The command turns red and the result box shows an error message. No tasks are added.","lastModifiedDate":"2022-11-07"},{"lineNumber":813,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":814,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `add Math assignment m/MA4321/R by/2022-01-02 3:45pm`","lastModifiedDate":"2022-11-07"},{"lineNumber":815,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":816,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":817,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":818,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `add Math assignment m/ by/2022-01-02 3:45pm`","lastModifiedDate":"2022-11-07"},{"lineNumber":819,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":820,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":821,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":822,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `add Programming assignment m/CS1234 by/2022-01-02 4pm`","lastModifiedDate":"2022-11-07"},{"lineNumber":823,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":824,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":825,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":826,"author":{"gitId":"parnikkapore"},"content":"1. Listing tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":827,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":828,"author":{"gitId":"parnikkapore"},"content":"    1. Run `add Math assignment m/MA4321 by/2022-01-02 2pm`, so that a sort order can be verified.","lastModifiedDate":"2022-11-07"},{"lineNumber":829,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":830,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `list`","lastModifiedDate":"2022-11-07"},{"lineNumber":831,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":832,"author":{"gitId":"parnikkapore"},"content":"       Expected: The app switches to the Task tab. Tasks are listed in order of most recently added first. The result box displays the matching message.","lastModifiedDate":"2022-11-07"},{"lineNumber":833,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":834,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `list time`","lastModifiedDate":"2022-11-07"},{"lineNumber":835,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":836,"author":{"gitId":"parnikkapore"},"content":"       Expected: The app switches to the Task tab. Tasks are listed in order of increasing due date. The result box displays the matching message.","lastModifiedDate":"2022-11-07"},{"lineNumber":837,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":838,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `list foo`","lastModifiedDate":"2022-11-07"},{"lineNumber":839,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":840,"author":{"gitId":"parnikkapore"},"content":"       Expected: The app switches to the Task tab. Tasks are listed in order of most recently added first. The result box displays the matching message.","lastModifiedDate":"2022-11-07"},{"lineNumber":841,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":842,"author":{"gitId":"parnikkapore"},"content":"1. Finding tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":843,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":844,"author":{"gitId":"parnikkapore"},"content":"    1. Prerequisites: A task with \"ign\" in its name exists (if you\u0027re following this guide, there will be one)","lastModifiedDate":"2022-11-07"},{"lineNumber":845,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":846,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `find n/ign`","lastModifiedDate":"2022-11-07"},{"lineNumber":847,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":848,"author":{"gitId":"parnikkapore"},"content":"       Expected: The app switches to the Task tab. Matching tasks are shown. The result box displays the matching message.","lastModifiedDate":"2022-11-07"},{"lineNumber":849,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":850,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `find n/ign m/CS`","lastModifiedDate":"2022-11-07"},{"lineNumber":851,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":852,"author":{"gitId":"parnikkapore"},"content":"       Expected: The command turns red and the result box shows an error message. The tasks shown in the tasks tab do not change.","lastModifiedDate":"2022-11-07"},{"lineNumber":853,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":854,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `find`","lastModifiedDate":"2022-11-07"},{"lineNumber":855,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":856,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":857,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":858,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `find n/asdfghjk`","lastModifiedDate":"2022-11-07"},{"lineNumber":859,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":860,"author":{"gitId":"parnikkapore"},"content":"       Expected: The app switches to the Task tab. No tasks are shown. The result box displays a message about listing tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":861,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":862,"author":{"gitId":"parnikkapore"},"content":"1. Marking and unmarking tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":863,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":864,"author":{"gitId":"parnikkapore"},"content":"    1. Prerequisites: There are at least two tasks. (if you\u0027re following this guide, there will be)","lastModifiedDate":"2022-11-07"},{"lineNumber":865,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":866,"author":{"gitId":"parnikkapore"},"content":"    1. Run `list time` to change the sort order.","lastModifiedDate":"2022-11-07"},{"lineNumber":867,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":868,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `mark 2`","lastModifiedDate":"2022-11-07"},{"lineNumber":869,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":870,"author":{"gitId":"parnikkapore"},"content":"       Expected: The app switches to the Task tab. The list is still sorted by increasing deadline. The 2nd task in the list is marked. The result box displays the matching message.","lastModifiedDate":"2022-11-07"},{"lineNumber":871,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":872,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `mark 2`","lastModifiedDate":"2022-11-07"},{"lineNumber":873,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":874,"author":{"gitId":"parnikkapore"},"content":"       Expected: The command turns red and the result box shows an error message. The tasks shown in the tasks tab do not change.","lastModifiedDate":"2022-11-07"},{"lineNumber":875,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":876,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `mark -1`","lastModifiedDate":"2022-11-07"},{"lineNumber":877,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":878,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":879,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":880,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `mark`","lastModifiedDate":"2022-11-07"},{"lineNumber":881,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":882,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":883,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":884,"author":{"gitId":"parnikkapore"},"content":"    1. Repeat the steps above for the `unmark` command.","lastModifiedDate":"2022-11-07"},{"lineNumber":885,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":886,"author":{"gitId":"parnikkapore"},"content":"1. Editing tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":887,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":888,"author":{"gitId":"parnikkapore"},"content":"    1. Prerequisites: A task with the name \"Get groceries\" exists. (if you\u0027re following this guide, there will be one)","lastModifiedDate":"2022-11-07"},{"lineNumber":889,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":890,"author":{"gitId":"parnikkapore"},"content":"    1. Run `find n/Get groceries`.","lastModifiedDate":"2022-11-07"},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":892,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `edit 1 m/CS1234`","lastModifiedDate":"2022-11-07"},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":894,"author":{"gitId":"parnikkapore"},"content":"       Expected: The app switches to the Task tab. The 1st task in the list has its module set to `CS1234`. The result box displays a message about the task being edited.","lastModifiedDate":"2022-11-07"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":896,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `edit 1 m/CS1234`","lastModifiedDate":"2022-11-07"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":898,"author":{"gitId":"parnikkapore"},"content":"       Expected: The app switches to the Task tab. The 1st task in the list does not change. The result box displays a message about the task being edited.","lastModifiedDate":"2022-11-07"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":900,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `edit 1 n/Programming assignment`","lastModifiedDate":"2022-11-07"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":902,"author":{"gitId":"parnikkapore"},"content":"       Expected: The command turns red and the result box shows an error message. The tasks shown in the tasks tab do not change.","lastModifiedDate":"2022-11-07"},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":904,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `edit n/Programming assignment`","lastModifiedDate":"2022-11-07"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":906,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":907,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":908,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `edit 1`","lastModifiedDate":"2022-11-07"},{"lineNumber":909,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":910,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":911,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":912,"author":{"gitId":"parnikkapore"},"content":"1. Deleting tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":913,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":914,"author":{"gitId":"parnikkapore"},"content":"    1. Run `list time` to change the sort order.","lastModifiedDate":"2022-11-07"},{"lineNumber":915,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":916,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `del -1`","lastModifiedDate":"2022-11-07"},{"lineNumber":917,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":918,"author":{"gitId":"parnikkapore"},"content":"       Expected: The command turns red and the result box shows an error message. The tasks shown in the tasks tab do not change.","lastModifiedDate":"2022-11-07"},{"lineNumber":919,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":920,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `del`","lastModifiedDate":"2022-11-07"},{"lineNumber":921,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":922,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":923,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":924,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `del 1 n/Hello`","lastModifiedDate":"2022-11-07"},{"lineNumber":925,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":926,"author":{"gitId":"parnikkapore"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":927,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":928,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `del 1`","lastModifiedDate":"2022-11-07"},{"lineNumber":929,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":930,"author":{"gitId":"parnikkapore"},"content":"       Expected: The app switches to the Task tab. The list is still sorted by increasing deadline. The 1st task in the list is deleted. The result box displays the matching message.","lastModifiedDate":"2022-11-07"},{"lineNumber":931,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":932,"author":{"gitId":"parnikkapore"},"content":"1. Clearing completed tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":933,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":934,"author":{"gitId":"parnikkapore"},"content":"    1. Prerequisites: At least one, but not all, tasks are marked. (if you\u0027re following this guide, `mark 2`)","lastModifiedDate":"2022-11-07"},{"lineNumber":935,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":936,"author":{"gitId":"parnikkapore"},"content":"    1. Test case: `clean now`","lastModifiedDate":"2022-11-07"},{"lineNumber":937,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":938,"author":{"gitId":"parnikkapore"},"content":"       Expected: The app switches to the Task tab. The list is still sorted and filtered like before the command. All marked tasks and none of the unmarked tasks are deleted. The result box displays the matching message.","lastModifiedDate":"2022-11-07"},{"lineNumber":939,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":940,"author":{"gitId":"angkl0"},"content":"### Managing contacts","lastModifiedDate":"2022-11-07"},{"lineNumber":941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"angkl0"},"content":"1. Adding a contact","lastModifiedDate":"2022-11-07"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"angkl0"},"content":"    1. Prerequisites: A contact with the same name as below does not already exist. (It does not exist in the sample data)","lastModifiedDate":"2022-11-07"},{"lineNumber":945,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"angkl0"},"content":"    1. Test case: `addc n/John Doe p/98765432 m/CS4321`","lastModifiedDate":"2022-11-07"},{"lineNumber":947,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"angkl0"},"content":"       Expected: The app is on the Contacts tab. A new contact is shown in the GUI and its details are shown in the result box.","lastModifiedDate":"2022-11-07"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"angkl0"},"content":"    1. Test case: `addc n/James Doe p/99887766 e/jamesdoe@example.com`","lastModifiedDate":"2022-11-07"},{"lineNumber":951,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":952,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":953,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":954,"author":{"gitId":"angkl0"},"content":"    1. Test case: `addc n/David`","lastModifiedDate":"2022-11-07"},{"lineNumber":955,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":956,"author":{"gitId":"angkl0"},"content":"       Expected: The app is on the Contacts tab. The command turns red and the result box shows an error message. No contacts are added.","lastModifiedDate":"2022-11-07"},{"lineNumber":957,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":958,"author":{"gitId":"angkl0"},"content":"    1. Test case: `addc n/David p/88776655 e/`","lastModifiedDate":"2022-11-07"},{"lineNumber":959,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":960,"author":{"gitId":"angkl0"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":961,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":962,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":963,"author":{"gitId":"angkl0"},"content":"2. Listing contacts","lastModifiedDate":"2022-11-07"},{"lineNumber":964,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":965,"author":{"gitId":"angkl0"},"content":"    1. Test case: `listc`","lastModifiedDate":"2022-11-07"},{"lineNumber":966,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":967,"author":{"gitId":"angkl0"},"content":"       Expected: The app is on the Contacts tab. Tasks are listed in order of least recently added first. The result box displays the matching message.","lastModifiedDate":"2022-11-07"},{"lineNumber":968,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":969,"author":{"gitId":"angkl0"},"content":"    1. Test case: `listc foo`","lastModifiedDate":"2022-11-07"},{"lineNumber":970,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":971,"author":{"gitId":"angkl0"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":972,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":973,"author":{"gitId":"angkl0"},"content":"3. Finding contacts","lastModifiedDate":"2022-11-07"},{"lineNumber":974,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":975,"author":{"gitId":"angkl0"},"content":"    1. Prerequisites: A contact with \"do\" in its name exists (if you\u0027re following this guide, there will be one)","lastModifiedDate":"2022-11-07"},{"lineNumber":976,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":977,"author":{"gitId":"angkl0"},"content":"    1. Test case: `findc n/do`","lastModifiedDate":"2022-11-07"},{"lineNumber":978,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":979,"author":{"gitId":"angkl0"},"content":"       Expected: The app is on the Contacts tab. Matching contacts are shown. The result box displays the matching message.","lastModifiedDate":"2022-11-07"},{"lineNumber":980,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":981,"author":{"gitId":"angkl0"},"content":"    1. Test case: `findc n/do m/CS`","lastModifiedDate":"2022-11-07"},{"lineNumber":982,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":983,"author":{"gitId":"angkl0"},"content":"       Expected: The app is on the Contacts tab. The command turns red and the result box shows an error message. The contacts shown in the contacts tab do not change.","lastModifiedDate":"2022-11-07"},{"lineNumber":984,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":985,"author":{"gitId":"angkl0"},"content":"    1. Test case: `findc`","lastModifiedDate":"2022-11-07"},{"lineNumber":986,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":987,"author":{"gitId":"angkl0"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":988,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":989,"author":{"gitId":"angkl0"},"content":"    1. Test case: `findc n/asdfghjk`","lastModifiedDate":"2022-11-07"},{"lineNumber":990,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":991,"author":{"gitId":"angkl0"},"content":"       Expected: No contacts are shown. The result box displays a message about listing contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":992,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":993,"author":{"gitId":"angkl0"},"content":"4. Editing contacts","lastModifiedDate":"2022-11-07"},{"lineNumber":994,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":995,"author":{"gitId":"angkl0"},"content":"    1. Prerequisites: Contacts with the name \"John Doe\" and \"James Doe\" exist. (if you\u0027re following this guide, there will be one)","lastModifiedDate":"2022-11-07"},{"lineNumber":996,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":997,"author":{"gitId":"angkl0"},"content":"    1. Run `findc n/John Doe`","lastModifiedDate":"2022-11-07"},{"lineNumber":998,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":999,"author":{"gitId":"angkl0"},"content":"    1. Test case: `editc 1 m/CS1234`","lastModifiedDate":"2022-11-07"},{"lineNumber":1000,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1001,"author":{"gitId":"angkl0"},"content":"       Expected: The app is on the Contacts tab. The 1st contact in the list has its module set to `CS1234`. The result box displays a message about the contact being edited.","lastModifiedDate":"2022-11-07"},{"lineNumber":1002,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1003,"author":{"gitId":"angkl0"},"content":"    1. Test case: `editc 1 m/CS1234`","lastModifiedDate":"2022-11-07"},{"lineNumber":1004,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1005,"author":{"gitId":"angkl0"},"content":"       Expected: The app switches to the Task tab. The 1st contact in the list does not change. The result box displays a message about the contact being edited.","lastModifiedDate":"2022-11-07"},{"lineNumber":1006,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1007,"author":{"gitId":"angkl0"},"content":"    1. Test case: `editc 1 n/James Doe`","lastModifiedDate":"2022-11-07"},{"lineNumber":1008,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1009,"author":{"gitId":"angkl0"},"content":"       Expected: The command turns red and the result box shows an error message. The contacts shown in the contacts tab do not change.","lastModifiedDate":"2022-11-07"},{"lineNumber":1010,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1011,"author":{"gitId":"angkl0"},"content":"    1. Test case: `editc n/James Doe`","lastModifiedDate":"2022-11-07"},{"lineNumber":1012,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1013,"author":{"gitId":"angkl0"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":1014,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1015,"author":{"gitId":"angkl0"},"content":"    1. Test case: `editc 1`","lastModifiedDate":"2022-11-07"},{"lineNumber":1016,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1017,"author":{"gitId":"angkl0"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":1018,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1019,"author":{"gitId":"angkl0"},"content":"5. Deleting contacts","lastModifiedDate":"2022-11-07"},{"lineNumber":1020,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1021,"author":{"gitId":"angkl0"},"content":"    1. Test case: `delc -1`","lastModifiedDate":"2022-11-07"},{"lineNumber":1022,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1023,"author":{"gitId":"angkl0"},"content":"       Expected: The app is on the Contacts tab. The command turns red and the result box shows an error message. The contacts shown in the contacts tab do not change.","lastModifiedDate":"2022-11-07"},{"lineNumber":1024,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1025,"author":{"gitId":"angkl0"},"content":"    1. Test case: `delc`","lastModifiedDate":"2022-11-07"},{"lineNumber":1026,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1027,"author":{"gitId":"angkl0"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":1028,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1029,"author":{"gitId":"angkl0"},"content":"    1. Test case: `delc 1 n/Hello`","lastModifiedDate":"2022-11-07"},{"lineNumber":1030,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1031,"author":{"gitId":"angkl0"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":1032,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1033,"author":{"gitId":"angkl0"},"content":"    1. Test case: `delc 1`","lastModifiedDate":"2022-11-07"},{"lineNumber":1034,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1035,"author":{"gitId":"angkl0"},"content":"       Expected: The app is on the Contacts tab. The 1st contact in the list is deleted. The result box displays the matching message.","lastModifiedDate":"2022-11-07"},{"lineNumber":1036,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1037,"author":{"gitId":"angkl0"},"content":"6. Clearing all contacts","lastModifiedDate":"2022-11-07"},{"lineNumber":1038,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1039,"author":{"gitId":"angkl0"},"content":"    1. Prerequisites: Contacts tab has at least one contact.","lastModifiedDate":"2022-11-07"},{"lineNumber":1040,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1041,"author":{"gitId":"angkl0"},"content":"    2. Test case: `clear`","lastModifiedDate":"2022-11-07"},{"lineNumber":1042,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1043,"author":{"gitId":"angkl0"},"content":"       Expected: All contacts are deleted from the contact list.","lastModifiedDate":"2022-11-07"},{"lineNumber":1044,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1045,"author":{"gitId":"angkl0"},"content":"7. Saveme","lastModifiedDate":"2022-11-07"},{"lineNumber":1046,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1047,"author":{"gitId":"angkl0"},"content":"    1. Prerequisites: A task with the same name and module as below does not already exist. (It does not exist in the sample data) A contact with the name \"John Doe\" exists. (if you\u0027re following this guide, there will be one)","lastModifiedDate":"2022-11-07"},{"lineNumber":1048,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1049,"author":{"gitId":"angkl0"},"content":"    2. Run `add Assignment 1 m/CS4321 by/tomorrow 23:59`","lastModifiedDate":"2022-11-07"},{"lineNumber":1050,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1051,"author":{"gitId":"angkl0"},"content":"    3. Test case: `saveme`","lastModifiedDate":"2022-11-07"},{"lineNumber":1052,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1053,"author":{"gitId":"angkl0"},"content":"       Expected: The app is on the Contacts tab. The 1st contact in the list has a module tag `CS4321`.","lastModifiedDate":"2022-11-07"},{"lineNumber":1054,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1055,"author":{"gitId":"angkl0"},"content":"    4. Test case: `saveme foo`","lastModifiedDate":"2022-11-07"},{"lineNumber":1056,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1057,"author":{"gitId":"angkl0"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1063,"author":{"gitId":"angkl0"},"content":"   * Missing data file:","lastModifiedDate":"2022-11-07"},{"lineNumber":1064,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1065,"author":{"gitId":"angkl0"},"content":"    1. Prerequisite: Missing `data/contacts.json` and/or `data/tasks.json","lastModifiedDate":"2022-11-07"},{"lineNumber":1066,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1067,"author":{"gitId":"angkl0"},"content":"    2. Test case: Delete `data/contacts.json` and relaunch CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":1068,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1069,"author":{"gitId":"angkl0"},"content":"       Expected: CodeConnect will launch with some sample contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":1070,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1071,"author":{"gitId":"angkl0"},"content":"    3. Test case: Delete `data/tasks.json` and relaunch CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":1072,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1073,"author":{"gitId":"angkl0"},"content":"       Expected: CodeConnect will launch with some sample tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":1074,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1075,"author":{"gitId":"angkl0"},"content":"    4. Test case: Delete both `data/contatcs.json` and `data/tasks.json`. Relaunch CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":1076,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1077,"author":{"gitId":"angkl0"},"content":"       Expected: CodeConnect will launch with some sample contacts and tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1079,"author":{"gitId":"angkl0"},"content":"    * Corrupted data file:","lastModifiedDate":"2022-11-07"},{"lineNumber":1080,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1081,"author":{"gitId":"angkl0"},"content":"    1. Prerequisite: Corrupted `data/contacts.json` and/or `data/tasks.json`","lastModifiedDate":"2022-11-07"},{"lineNumber":1082,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1083,"author":{"gitId":"angkl0"},"content":"    2. Test case 1: Modify any contact\u0027s email to an invalid email in `data/contacts.json` and relaunch CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":1084,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1085,"author":{"gitId":"angkl0"},"content":"       Expected: CodeConnect will launch with no contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":1086,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1087,"author":{"gitId":"angkl0"},"content":"    3. Test case 2: Modify any task\u0027s deadline to an invalid format (not in YYYY-MM-DD HH:MM format) in `data/tasks.json` ","lastModifiedDate":"2022-11-07"},{"lineNumber":1088,"author":{"gitId":"angkl0"},"content":"       and relaunch CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":1089,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1090,"author":{"gitId":"angkl0"},"content":"       Expected: CodeConnect will launch with some sample tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":1091,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1092,"author":{"gitId":"angkl0"},"content":"    4. Test case: Perform both the modifications in the above test cases and relaunch CodeConnect.","lastModifiedDate":"2022-11-07"},{"lineNumber":1093,"author":{"gitId":"angkl0"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":1094,"author":{"gitId":"angkl0"},"content":"       Expected: CodeConnect will launch with some sample contacts and tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":1095,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1096,"author":{"gitId":"angkl0"},"content":"2. Saving of data after running a valid command that modified it","lastModifiedDate":"2022-11-07"},{"lineNumber":1097,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1098,"author":{"gitId":"angkl0"},"content":"    1. Test case: Run any command that modifies data such as `add`, `addc`, `edit`. Exit CodeConnect and relaunch it.","lastModifiedDate":"2022-11-07"},{"lineNumber":1099,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":1100,"author":{"gitId":"angkl0"},"content":"       Expected: Any modification made to the data is preserved.","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"angkl0":206,"parnikkapore":261,"JonLamy":60,"songivan00":110,"danzzzerl":156,"-":307}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"2. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"3. **Verify the setup**:","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"   1. Run the `seedu.codeconnect.Main` and try a few commands.","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"   2. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"2. **Set up CI**","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"3. **Learn the design**","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"4. **Do the tutorials**","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"songivan00":7,"-":48}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"   e.g. `seedu.codeconnect.commons.StringUtilTest`","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"   e.g. `seedu.codeconnect.storage.StorageManagerTest`","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"   e.g. `seedu.codeconnect.logic.LogicManagerTest`","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"songivan00":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"## Introduction","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"CodeConnect is a **desktop app** specially designed for **Computer Science students from NUS**. With this app, not only can you manage your **tasks and contacts** effectively in one unified place, you can also conveniently search for peers to seek help or collaboration on a particular task.","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"This app is optimized for use via a **Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"## How to use this guide?","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"For new users, it is strongly recommended that you look through this User Guide to gain a comprehensive understanding of CodeConnect.","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"However, you may also choose to head over to the relevant sections as described below:","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"- [Quick start](#quick-start) - To learn how to set up CodeConnect on your computer","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"- [Features](#features) - To learn the different features and commands used in CodeConnect","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"- [Command Summary](#command-summary) - To have a complete overview of all the features and their respective command.","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"Boxes like this indicate gotchas that you might wish to watch out for.","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":":question: **Extra information**","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"Boxes like this indicate extra information you might be curious about.","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":":bulb: **Additional tips**","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"Boxes like this indicate more tips to help you make the most out of CodeConnect.","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"CodeConnect works on all major OSes (Windows, Mac, Linux) and only requires Java 11 or above installed on your computer.","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"   * [Instructions for doing this](https://superuser.com/questions/1221096/) are available on the internet.","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"   * If not, [install it](https://docs.oracle.com/en/java/javase/11/install/).","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"2. Download the latest `CodeConnect.jar` from [here](https://github.com/AY2223S1-CS2103T-T14-2/tp/releases).","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"3. Copy the file to the folder you want to store CodeConnect\u0027s data in.","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"    ![UiOnStartup](images/UiOnStartup.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":69,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"songivan00"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"songivan00"},"content":"   * **`listc`** : Lists all contacts.","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"   * **`add`** `Finish homework by/tomorrow 5pm m/CS2040S` : Adds a task named `Finish homework` to the Task Manager.","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"   * **`del`** `1` : Deletes the 1\u003csup\u003est\u003c/sup\u003e task shown in the current list.","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"   * **`clear`** : Deletes all contacts. Good for removing the sample data before adding your own. ","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"songivan00"},"content":"6. Refer to the [Features](#features) below for details of all available commands.","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"JonLamy"},"content":"## Navigating CodeConnect","lastModifiedDate":"2022-11-07"},{"lineNumber":89,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"JonLamy"},"content":"This section explains the various graphical components of CodeConnect\u0027s interface.","lastModifiedDate":"2022-11-07"},{"lineNumber":91,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":92,"author":{"gitId":"JonLamy"},"content":"![UiAnnotated](images/UiAnnotated.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":93,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":94,"author":{"gitId":"JonLamy"},"content":"| No. | Component         | Description                                                                       |","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"JonLamy"},"content":"|-----|-------------------|-----------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"JonLamy"},"content":"| 1   | Menu Bar          | Quick access to utility commands.                                                 |","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"JonLamy"},"content":"| 2   | Command Box       | Where you\u0027ll enter commands to tell CodeConnect what to do.                       |","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"JonLamy"},"content":"| 3   | Result Box        | Result (success, error, etc.) of the command executed.                            |","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"JonLamy"},"content":"| 4   | Tabs              | Toggle between contact list or task list.                                         |","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"JonLamy"},"content":"| 5   | Contact/Task List | Display current contacts/tasks, depending on command executed.                    |","lastModifiedDate":"2022-11-07"},{"lineNumber":101,"author":{"gitId":"JonLamy"},"content":"| 6   | Data File Path    | Location of the file in your computer where your contact and task data is stored. |","lastModifiedDate":"2022-11-07"},{"lineNumber":102,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"songivan00"},"content":"CodeConnect has 2 main sets of commands, one set to manage your contacts and one set to manage your tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":109,"author":{"gitId":"songivan00"},"content":"### Notes about the command format:","lastModifiedDate":"2022-11-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"JonLamy"},"content":"* Words in `{curly_braces}` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"JonLamy"},"content":"  e.g. In `addc n/{name}`, `{name}` is a parameter which can be used as `addc n/John Doe`.","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"JonLamy"},"content":"  e.g. When [adding a contact](#adding-a-contact-addc), it is optional to tag them. Hence, the tag parameter is presented as `[t/{tag}]`","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"  e.g. `[t/{tag}]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"JonLamy"},"content":"  e.g. If the command specifies `n/{name} p/{phone_number}`, `p/{phone_number} n/{name}` is also acceptable.","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"JonLamy"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the **last occurrence** of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"JonLamy"},"content":"  e.g. If you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":127,"author":{"gitId":"JonLamy"},"content":"  e.g. If the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":130,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":131,"author":{"gitId":"JonLamy"},"content":":bulb: A Note on Indexes","lastModifiedDate":"2022-10-29"},{"lineNumber":132,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":133,"author":{"gitId":"danzzzerl"},"content":"Several commands below require an `index` to be specified, as they operate on a task/contact which is to be specified by you. For example, the deletion of a particular task.","lastModifiedDate":"2022-11-06"},{"lineNumber":134,"author":{"gitId":"JonLamy"},"content":"* Indexes are either `task_index` or `contact_index`","lastModifiedDate":"2022-10-29"},{"lineNumber":135,"author":{"gitId":"angkl0"},"content":"* The index always refers to the index number of the task/contact in the **currently displayed list**","lastModifiedDate":"2022-10-30"},{"lineNumber":136,"author":{"gitId":"JonLamy"},"content":"* This value ranges from 1, 2, 3...","lastModifiedDate":"2022-10-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":139,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":141,"author":{"gitId":"songivan00"},"content":"### Managing tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":143,"author":{"gitId":"songivan00"},"content":"This section contains all the commands for the Task features. ","lastModifiedDate":"2022-11-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":145,"author":{"gitId":"parnikkapore"},"content":"#### Adding a task: `add`","lastModifiedDate":"2022-09-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":147,"author":{"gitId":"angkl0"},"content":"Adds a task and its deadline to the task list. Specifying the module the task belongs to is optional.","lastModifiedDate":"2022-10-30"},{"lineNumber":148,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":149,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":150,"author":{"gitId":"danzzzerl"},"content":"`add {task_name} by/{deadline} [m/{module_code}]`","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":152,"author":{"gitId":"parnikkapore"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":153,"author":{"gitId":"songivan00"},"content":"* `add finish problem set 5 by/tomorrow 5pm m/CS2040S` - adds a new task \"finish problem set 5\" ","lastModifiedDate":"2022-11-07"},{"lineNumber":154,"author":{"gitId":"songivan00"},"content":"with the given deadline and module.","lastModifiedDate":"2022-11-07"},{"lineNumber":155,"author":{"gitId":"songivan00"},"content":"* `add finish SEP application by/2022-12-25 23:59` - adds a new task \"finish SEP application\" with the given deadline.","lastModifiedDate":"2022-11-07"},{"lineNumber":156,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":157,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":158,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":159,"author":{"gitId":"JonLamy"},"content":":bulb: Deadline Formats","lastModifiedDate":"2022-10-29"},{"lineNumber":160,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":161,"author":{"gitId":"JonLamy"},"content":"CodeConnect uses the [jchronic](https://github.com/samtingleff/jchronic) natural language date parser, ported from [Ruby\u0027s Chronic](https://github.com/deepin-community/ruby-chronic). This means that natural language inputs such as \"tomorrow\" or \"next sunday\" will be understood by CodeConnect!","lastModifiedDate":"2022-10-30"},{"lineNumber":162,"author":{"gitId":"parnikkapore"},"content":"The default time of a task will be set to 11.59pm if it is not specified in the input.","lastModifiedDate":"2022-10-31"},{"lineNumber":163,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":164,"author":{"gitId":"danzzzerl"},"content":"Here are some examples of what deadline formats are accepted:","lastModifiedDate":"2022-10-30"},{"lineNumber":165,"author":{"gitId":"danzzzerl"},"content":"* \"tomorrow\" will format the deadline to the next day, 11.59pm","lastModifiedDate":"2022-10-30"},{"lineNumber":166,"author":{"gitId":"parnikkapore"},"content":"* \"tomorrow 3pm\" will format it to the next day, 3.00pm","lastModifiedDate":"2022-10-31"},{"lineNumber":167,"author":{"gitId":"danzzzerl"},"content":"* \"this tuesday 05:00\" or \"this tuesday 0500\" will format it to the coming tuesday, 5.00am","lastModifiedDate":"2022-10-30"},{"lineNumber":168,"author":{"gitId":"danzzzerl"},"content":"* \"may 27th\" will format it to the 27th of may of the current year, 11.59pm","lastModifiedDate":"2022-10-30"},{"lineNumber":169,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":170,"author":{"gitId":"parnikkapore"},"content":"The following dates and times are known **not to work**:","lastModifiedDate":"2022-11-06"},{"lineNumber":171,"author":{"gitId":"parnikkapore"},"content":"* \"6/4/2022\" will be read as 4 June.","lastModifiedDate":"2022-11-06"},{"lineNumber":172,"author":{"gitId":"parnikkapore"},"content":"* \"11.30pm\" will not be understood. (\"11:30pm\" is understood)","lastModifiedDate":"2022-11-06"},{"lineNumber":173,"author":{"gitId":"parnikkapore"},"content":"* \"2022-02-31\" will be read as 3 March.","lastModifiedDate":"2022-11-06"},{"lineNumber":174,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":175,"author":{"gitId":"parnikkapore"},"content":"We will attempt to resolve these issues in a future version.","lastModifiedDate":"2022-11-06"},{"lineNumber":176,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":177,"author":{"gitId":"JonLamy"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":178,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":179,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":180,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":181,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":182,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":183,"author":{"gitId":"JonLamy"},"content":":bulb: Flexible Module Format","lastModifiedDate":"2022-10-29"},{"lineNumber":184,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":185,"author":{"gitId":"JonLamy"},"content":"As a user, you might find yourself adding tasks that don\u0027t exactly belong to a module. For example, if you\u0027re a student applying for the Student Exchange Programme, you might have tasks like \"Write Personal Statement\" and \"Submit Application\". In this case, you could set the module field of both these tasks as `SEP` to increase searchability.","lastModifiedDate":"2022-10-29"},{"lineNumber":186,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":187,"author":{"gitId":"JonLamy"},"content":"However, only alphanumeric characters are allowed! (i.e. no spaces, special characters, etc.)","lastModifiedDate":"2022-10-29"},{"lineNumber":188,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":189,"author":{"gitId":"JonLamy"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":190,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":191,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":192,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":193,"author":{"gitId":"parnikkapore"},"content":":bulb: Adding past deadlines","lastModifiedDate":"2022-11-02"},{"lineNumber":194,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":195,"author":{"gitId":"parnikkapore"},"content":"CodeConnect will happily accept deadlines that are in the past, in case you want to use it to track start dates or track an assignment due a few hours ago you just found out about!","lastModifiedDate":"2022-11-02"},{"lineNumber":196,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":197,"author":{"gitId":"parnikkapore"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":198,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":199,"author":{"gitId":"songivan00"},"content":"#### Editing a task: `edit`","lastModifiedDate":"2022-10-23"},{"lineNumber":200,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":201,"author":{"gitId":"JonLamy"},"content":"Edits the specified task.","lastModifiedDate":"2022-10-29"},{"lineNumber":202,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":203,"author":{"gitId":"songivan00"},"content":"Format:","lastModifiedDate":"2022-10-23"},{"lineNumber":204,"author":{"gitId":"songivan00"},"content":"`edit {task_index} {field_prefix + field_description}`","lastModifiedDate":"2022-11-02"},{"lineNumber":205,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":206,"author":{"gitId":"songivan00"},"content":"Examples:","lastModifiedDate":"2022-10-23"},{"lineNumber":207,"author":{"gitId":"songivan00"},"content":"* `edit 2 n/Rewatch lecture 6` - edits the task at index 2 to \"Rewatch lecture 6\".","lastModifiedDate":"2022-11-07"},{"lineNumber":208,"author":{"gitId":"songivan00"},"content":"* `edit 3 m/CS2040S by/2022-12-12 23:59` - edits the module and deadline of the task at index 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":209,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":210,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":211,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":212,"author":{"gitId":"parnikkapore"},"content":":question: What are Field Prefixes?","lastModifiedDate":"2022-11-07"},{"lineNumber":213,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":214,"author":{"gitId":"JonLamy"},"content":"`field_prefix` can be any task field used in the [add task command](#adding-a-task-add).","lastModifiedDate":"2022-10-30"},{"lineNumber":215,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":216,"author":{"gitId":"JonLamy"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":217,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":218,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":219,"author":{"gitId":"parnikkapore"},"content":"#### Deleting a task: `del`","lastModifiedDate":"2022-09-28"},{"lineNumber":220,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":221,"author":{"gitId":"JonLamy"},"content":"Deletes the specified task.","lastModifiedDate":"2022-10-29"},{"lineNumber":222,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":223,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":224,"author":{"gitId":"parnikkapore"},"content":"`del {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":225,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":226,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":227,"author":{"gitId":"songivan00"},"content":"`del 5` - deletes the task at index 5 from the task list.","lastModifiedDate":"2022-11-07"},{"lineNumber":228,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":229,"author":{"gitId":"JonLamy"},"content":"#### Deleting all completed tasks: `clean`","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"JonLamy"},"content":"Deletes all completed tasks.","lastModifiedDate":"2022-10-29"},{"lineNumber":232,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"JonLamy"},"content":"Format: `clean`","lastModifiedDate":"2022-10-27"},{"lineNumber":234,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":236,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-10-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":238,"author":{"gitId":"parnikkapore"},"content":"This command has similar spelling to the [clear command](#clearing-all-contacts--clear), which **deletes all contacts**.","lastModifiedDate":"2022-10-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":240,"author":{"gitId":"danzzzerl"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":241,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":242,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"parnikkapore"},"content":"#### Marking a task: `mark`","lastModifiedDate":"2022-09-28"},{"lineNumber":244,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":245,"author":{"gitId":"JonLamy"},"content":"Marks the specified task as complete.","lastModifiedDate":"2022-10-29"},{"lineNumber":246,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":247,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":248,"author":{"gitId":"parnikkapore"},"content":"`mark {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":249,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":250,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":251,"author":{"gitId":"songivan00"},"content":"`mark 2` - marks the task at index 2 as done shown by a tick beside the task description.","lastModifiedDate":"2022-11-07"},{"lineNumber":252,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":253,"author":{"gitId":"danzzzerl"},"content":"![marktask](images/markTask.png)","lastModifiedDate":"2022-10-30"},{"lineNumber":254,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":255,"author":{"gitId":"parnikkapore"},"content":"#### Unmarking a task: `unmark`","lastModifiedDate":"2022-09-28"},{"lineNumber":256,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":257,"author":{"gitId":"JonLamy"},"content":"Marks the specified task as incomplete.","lastModifiedDate":"2022-10-29"},{"lineNumber":258,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":259,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":260,"author":{"gitId":"parnikkapore"},"content":"`unmark {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":261,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":262,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":263,"author":{"gitId":"songivan00"},"content":"`unmark 3` - undo the marking of the task at index 2 shown by a cross beside the task description.","lastModifiedDate":"2022-11-07"},{"lineNumber":264,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":265,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":267,"author":{"gitId":"songivan00"},"content":"#### Finding tasks: `find`","lastModifiedDate":"2022-11-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"parnikkapore"},"content":"Find tasks by their name or module. \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":270,"author":{"gitId":"danzzzerl"},"content":"Finding tasks by module makes it convenient for you to see what tasks you have for a particular module at one look, while finding them by name helps you to look for a specific task quickly rather than scrolling through the entire task list.","lastModifiedDate":"2022-11-06"},{"lineNumber":271,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":272,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":273,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":274,"author":{"gitId":"angkl0"},"content":":bulb: Note","lastModifiedDate":"2022-11-07"},{"lineNumber":275,"author":{"gitId":"angkl0"},"content":"* The search is case-insensitive. e.g. `find n/tutorial` will match `Tutorial`","lastModifiedDate":"2022-11-07"},{"lineNumber":276,"author":{"gitId":"angkl0"},"content":"* The order of the keywords does not matter. e.g. `find n/Set Problem` will match `Problem Set`","lastModifiedDate":"2022-11-07"},{"lineNumber":277,"author":{"gitId":"angkl0"},"content":"* Partial and full words will be matched. e.g. `find m/2030S` and `find m/CS2030S` will match tasks whose module is `CS2030S`","lastModifiedDate":"2022-11-07"},{"lineNumber":278,"author":{"gitId":"angkl0"},"content":"* Tasks that match at least one keyword will be returned (i.e. OR search). e.g. `find n/tut set` will match `Tutorial 1`","lastModifiedDate":"2022-11-07"},{"lineNumber":279,"author":{"gitId":"angkl0"},"content":"  and `Problem Set 2`","lastModifiedDate":"2022-11-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":283,"author":{"gitId":"danzzzerl"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":284,"author":{"gitId":"JonLamy"},"content":"`find n/{keyword}` `find m/{module}`","lastModifiedDate":"2022-10-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"danzzzerl"},"content":"* `find n/home` - returns all tasks with name that matches \"home\". E.g. `Science homework`, `Math homework`","lastModifiedDate":"2022-11-07"},{"lineNumber":288,"author":{"gitId":"danzzzerl"},"content":"* `find n/lab assignment` - returns all tasks with name that matches \"lab\" or \"assignment\". E.g. `lab 1`, `assignment 2`","lastModifiedDate":"2022-11-07"},{"lineNumber":289,"author":{"gitId":"danzzzerl"},"content":"* `find m/CS2030S CS2040S` - returns all tasks with module that matches \"CS2030S\" or \"CS2040S\".","lastModifiedDate":"2022-11-07"},{"lineNumber":290,"author":{"gitId":"danzzzerl"},"content":"* `find m/20` - returns all tasks with module that matches \"20\".","lastModifiedDate":"2022-11-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":293,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":294,"author":{"gitId":"danzzzerl"},"content":"`find m/CS2103T` returns this:","lastModifiedDate":"2022-10-30"},{"lineNumber":295,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":296,"author":{"gitId":"songivan00"},"content":"![findTasks](images/findTask.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":297,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":298,"author":{"gitId":"songivan00"},"content":"#### Listing all tasks : `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":299,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":300,"author":{"gitId":"songivan00"},"content":"Shows a list of all tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":301,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":302,"author":{"gitId":"JonLamy"},"content":"Format: `list`  `list time`","lastModifiedDate":"2022-10-27"},{"lineNumber":303,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":304,"author":{"gitId":"songivan00"},"content":"* `list` - displays a list of all tasks in the order of most recent task added.","lastModifiedDate":"2022-11-07"},{"lineNumber":305,"author":{"gitId":"songivan00"},"content":"* `list time` - displays a list of all tasks in the order of the earliest deadline.","lastModifiedDate":"2022-11-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":307,"author":{"gitId":"songivan00"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":308,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":309,"author":{"gitId":"angkl0"},"content":":bulb: About extraneous parameters in `list`","lastModifiedDate":"2022-11-03"},{"lineNumber":310,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":311,"author":{"gitId":"angkl0"},"content":"`list time` is the only exception to the list command ignoring extraneous parameters.","lastModifiedDate":"2022-11-03"},{"lineNumber":312,"author":{"gitId":"angkl0"},"content":"* `list abc` and `list time abc` will be both interpreted as `list`.","lastModifiedDate":"2022-11-03"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":314,"author":{"gitId":"angkl0"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":315,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":316,"author":{"gitId":"angkl0"},"content":"Click [here](#introduction) to return to the top of the page.","lastModifiedDate":"2022-11-07"},{"lineNumber":317,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":319,"author":{"gitId":"songivan00"},"content":"### Managing contacts","lastModifiedDate":"2022-09-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"songivan00"},"content":"This section contains all the commands for the Contacts features.","lastModifiedDate":"2022-11-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":323,"author":{"gitId":"parnikkapore"},"content":"#### Adding a contact: `addc`","lastModifiedDate":"2022-09-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"angkl0"},"content":"Adds a contact to the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"JonLamy"},"content":"Format: `addc n/{name} p/{phone_number} [e/{email}] [a/{address}] [t/{tag_1}]... [m/{module}...] [gh/{github}] [tele/{telegram}]`","lastModifiedDate":"2022-10-30"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"songivan00"},"content":"* `addc n/Bob Martin p/98765432 e/bobbymartini@gmail.com m/CS1101S CS1231S gh/bobby tele/bmartin` - adds a contact with the given name, phone number, email, modules, Github username and Telegram handle.","lastModifiedDate":"2022-11-07"},{"lineNumber":331,"author":{"gitId":"songivan00"},"content":"* `addc n/Betsy Crowe p/89985432 tele/croweybetty` - adds a contact with the given name, phone number and Github username.","lastModifiedDate":"2022-11-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":334,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":335,"author":{"gitId":"JonLamy"},"content":":bulb: Tags and Modules","lastModifiedDate":"2022-10-30"},{"lineNumber":336,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":337,"author":{"gitId":"JonLamy"},"content":"Every tag must begin with a tag prefix `t/`. If you would like to add multiple tags, enter `t/tag_1 t/tag2 ...`.","lastModifiedDate":"2022-10-30"},{"lineNumber":338,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":339,"author":{"gitId":"JonLamy"},"content":"Modules, however, may be entered as **space separated**. For example, `m/MOD1 MOD2 MOD3` will correctly assign 3 modules to the contact.","lastModifiedDate":"2022-10-30"},{"lineNumber":340,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":341,"author":{"gitId":"JonLamy"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":342,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":343,"author":{"gitId":"danzzzerl"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-11-01"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":345,"author":{"gitId":"danzzzerl"},"content":"Due to the limitations of the code, the adding of same names is currently not supported. To distinguish between two contacts with the same name, you may add a descriptor after the name to differentiate the contacts. Additionally, only alphanumeric characters are allowed for names. \u003cbr\u003e ","lastModifiedDate":"2022-11-07"},{"lineNumber":346,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":347,"author":{"gitId":"danzzzerl"},"content":"E.g. `addc n/John Lim p/80009123` will not work if there is already a contact with name `John Lim`. To add this contact, you can try adding a descriptor such as (school) by doing `addc n/John Lim (school) p/80009123`, or simply make the name of the contact to be added different from `John Lim`.","lastModifiedDate":"2022-11-06"},{"lineNumber":348,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":349,"author":{"gitId":"danzzzerl"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":350,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":352,"author":{"gitId":"angkl0"},"content":"#### Listing all contacts : `listc`","lastModifiedDate":"2022-10-30"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"JonLamy"},"content":"Shows a list of all contacts.","lastModifiedDate":"2022-10-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"songivan00"},"content":"Format: `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"danzzzerl"},"content":"#### Deleting a contact : `delc`","lastModifiedDate":"2022-10-14"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"JonLamy"},"content":"Deletes the specified contact.","lastModifiedDate":"2022-10-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"angkl0"},"content":"Format: `delc {contact_index}`","lastModifiedDate":"2022-09-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"songivan00"},"content":"* `delc 2` - deletes the contact at index 2 from the contact list.","lastModifiedDate":"2022-11-07"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":369,"author":{"gitId":"danzzzerl"},"content":"#### Editing a contact : `editc`","lastModifiedDate":"2022-10-14"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":371,"author":{"gitId":"JonLamy"},"content":"Edits the specified contact.","lastModifiedDate":"2022-10-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":373,"author":{"gitId":"JonLamy"},"content":"Format: `editc {contact_index} {field prefix}{field description}`","lastModifiedDate":"2022-10-30"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-14"},{"lineNumber":376,"author":{"gitId":"songivan00"},"content":"* `editc 4 gh/alicey` - edits the Github username of the contact at index 4 in the contact list to \"alicey\".","lastModifiedDate":"2022-11-07"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":378,"author":{"gitId":"danzzzerl"},"content":"![editContact](images/editContact.png)","lastModifiedDate":"2022-10-30"},{"lineNumber":379,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":380,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":382,"author":{"gitId":"JonLamy"},"content":":question: Field Prefixes","lastModifiedDate":"2022-10-29"},{"lineNumber":383,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":384,"author":{"gitId":"JonLamy"},"content":"`field_prefix` can be any contact field used in the [add contact command](#adding-a-contact-addc).","lastModifiedDate":"2022-10-30"},{"lineNumber":385,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":386,"author":{"gitId":"JonLamy"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":387,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":388,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":389,"author":{"gitId":"danzzzerl"},"content":"#### Finding contacts: `findc`","lastModifiedDate":"2022-11-06"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"parnikkapore"},"content":"Finds contacts by their name, modules they are taking, or a specified task. \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":392,"author":{"gitId":"danzzzerl"},"content":"Contacts can be found by their names, or by the modules that they take. Finding contacts via module makes it very convenient to see who are your options if you need help for a that module.","lastModifiedDate":"2022-11-06"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":396,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":397,"author":{"gitId":"angkl0"},"content":":bulb: Note on searching by name or module","lastModifiedDate":"2022-11-07"},{"lineNumber":398,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":399,"author":{"gitId":"angkl0"},"content":"Refer to the note at [find tasks command](#finding-tasks-find) for more information on how","lastModifiedDate":"2022-11-07"},{"lineNumber":400,"author":{"gitId":"parnikkapore"},"content":"CodeConnect searches by name or module.","lastModifiedDate":"2022-11-07"},{"lineNumber":401,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":402,"author":{"gitId":"songivan00"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":403,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":404,"author":{"gitId":"danzzzerl"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":405,"author":{"gitId":"JonLamy"},"content":"`findc n/{name}` `findc m/{module}` `findc ts/{task_index}`","lastModifiedDate":"2022-10-27"},{"lineNumber":406,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"danzzzerl"},"content":"* `findc n/John` - returns all contacts with name that matches \"John\". E.g. `john`, `John Doe`","lastModifiedDate":"2022-11-07"},{"lineNumber":409,"author":{"gitId":"danzzzerl"},"content":"* `findc n/jo` - returns all contacts with name that matches \"jo\". E.g. `john`, `John Doe`","lastModifiedDate":"2022-11-07"},{"lineNumber":410,"author":{"gitId":"danzzzerl"},"content":"* `findc n/jo ja` - returns all contacts with name that matches \"jo\" or \"ja\". E.g. `john`, `james`","lastModifiedDate":"2022-11-07"},{"lineNumber":411,"author":{"gitId":"danzzzerl"},"content":"* `findc m/CS1231S CS1101S` - returns all contacts that are taking at least one module that matches \"CS1231S\" or \"CS1101S\".","lastModifiedDate":"2022-11-07"},{"lineNumber":412,"author":{"gitId":"danzzzerl"},"content":"* `findc m/1S` - returns all contacts that are taking at least one module that matches \"1S\".","lastModifiedDate":"2022-11-07"},{"lineNumber":413,"author":{"gitId":"danzzzerl"},"content":"* `findc ts/2` -returns contacts that are taking the module that the task at index 2 belongs to","lastModifiedDate":"2022-11-07"},{"lineNumber":414,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":415,"author":{"gitId":"JonLamy"},"content":"#### Quick-search for contacts: `saveme`","lastModifiedDate":"2022-10-27"},{"lineNumber":416,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":417,"author":{"gitId":"angkl0"},"content":"Finds contacts that can help with the task at the first index of the task list.","lastModifiedDate":"2022-10-30"},{"lineNumber":418,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":419,"author":{"gitId":"JonLamy"},"content":"Example:","lastModifiedDate":"2022-10-27"},{"lineNumber":420,"author":{"gitId":"JonLamy"},"content":"1. The task at **index 1** belongs to the `CS1101S` module.","lastModifiedDate":"2022-10-30"},{"lineNumber":421,"author":{"gitId":"JonLamy"},"content":"2. Entering `saveme` will display all contacts that take the `CS1101S` module.","lastModifiedDate":"2022-10-30"},{"lineNumber":422,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":423,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":424,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":425,"author":{"gitId":"JonLamy"},"content":":question: What if I need help with a task that isn\u0027t index 1?","lastModifiedDate":"2022-10-30"},{"lineNumber":426,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":427,"author":{"gitId":"angkl0"},"content":"There\u0027s a command for that! See [find contacts command](#finding-contacts-findc).","lastModifiedDate":"2022-11-07"},{"lineNumber":428,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":429,"author":{"gitId":"JonLamy"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":430,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"danzzzerl"},"content":"#### Clearing all contacts : `clear`","lastModifiedDate":"2022-10-14"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"JonLamy"},"content":"Deletes all contacts.","lastModifiedDate":"2022-10-29"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-11-07"},{"lineNumber":439,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":440,"author":{"gitId":"JonLamy"},"content":"Deleted contacts are **unrecoverable**!","lastModifiedDate":"2022-10-29"},{"lineNumber":441,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":442,"author":{"gitId":"JonLamy"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":443,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":444,"author":{"gitId":"angkl0"},"content":"Click [here](#introduction) to return to the top of the page.","lastModifiedDate":"2022-11-07"},{"lineNumber":445,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":446,"author":{"gitId":"songivan00"},"content":"### Getting help","lastModifiedDate":"2022-11-07"},{"lineNumber":447,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":448,"author":{"gitId":"songivan00"},"content":"#### Viewing help : `help`","lastModifiedDate":"2022-11-07"},{"lineNumber":449,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":450,"author":{"gitId":"songivan00"},"content":"Provides the link to this User Guide.","lastModifiedDate":"2022-11-07"},{"lineNumber":451,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":452,"author":{"gitId":"songivan00"},"content":"Format: `help`","lastModifiedDate":"2022-11-07"},{"lineNumber":453,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":454,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":455,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":456,"author":{"gitId":"parnikkapore"},"content":"### Finishing up","lastModifiedDate":"2022-09-28"},{"lineNumber":457,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":458,"author":{"gitId":"parnikkapore"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2022-09-28"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"songivan00"},"content":"CodeConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-29"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":470,"author":{"gitId":"songivan00"},"content":"CodeConnect data are saved as a JSON file either in  `[JAR file location]/data/contacts.json` for your contacts or `[JAR file location]/data/tasks.json` for your tasks. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-11-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":472,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":473,"author":{"gitId":"songivan00"},"content":"If your changes to the data file makes its format invalid, CodeConnect will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-29"},{"lineNumber":474,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":476,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"songivan00"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CodeConnect home folder.","lastModifiedDate":"2022-09-29"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"JonLamy"},"content":"**Q**: Why does CodeConnect switch between the task list and contact list?\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":484,"author":{"gitId":"JonLamy"},"content":"**A**: For a smoother user experience, CodeConnect automatically switches to the list that is associated with the previous command type (task or contact command). You can also switch list views manually by clicking the tabs above the lists.","lastModifiedDate":"2022-10-30"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":486,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":489,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":490,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"parnikkapore"},"content":"| Action                     | Format, Examples                                                                                                                                                                                             |","lastModifiedDate":"2022-10-26"},{"lineNumber":493,"author":{"gitId":"danzzzerl"},"content":"|----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":494,"author":{"gitId":"JonLamy"},"content":"| **Help**                   | `help`                                                                                                                                                                                                       |","lastModifiedDate":"2022-10-29"},{"lineNumber":495,"author":{"gitId":"parnikkapore"},"content":"| **Add task**               | `add {task_name} by/{deadline} [m/{module_code}]` \u003cbr\u003e e.g. `add finish problem set 5 by/next week sunday m/CS2040S`                                                                                         |","lastModifiedDate":"2022-10-26"},{"lineNumber":496,"author":{"gitId":"songivan00"},"content":"| **Edit task**              | `edit {task_index} {field prefix + field description}` \u003cbr\u003e e.g. `edit 2 by/2022-12-12 23:59`                                                                                                                |","lastModifiedDate":"2022-11-02"},{"lineNumber":497,"author":{"gitId":"JonLamy"},"content":"| **Delete task**            | `del {task_index}` \u003cbr\u003e e.g. `del 5`                                                                                                                                                                         |","lastModifiedDate":"2022-10-29"},{"lineNumber":498,"author":{"gitId":"JonLamy"},"content":"| **Delete completed tasks** | `clean`                                                                                                                                                                                                      |","lastModifiedDate":"2022-10-29"},{"lineNumber":499,"author":{"gitId":"songivan00"},"content":"| **Mark task**              | `mark {task_index}` \u003cbr\u003e e.g. `mark 3`                                                                                                                                                                       |","lastModifiedDate":"2022-10-23"},{"lineNumber":500,"author":{"gitId":"songivan00"},"content":"| **Unmark task**            | `unmark {task_index}` \u003cbr\u003e e.g. `unmark 3`                                                                                                                                                                   |","lastModifiedDate":"2022-10-23"},{"lineNumber":501,"author":{"gitId":"danzzzerl"},"content":"| **Find tasks**             | `find n/{task}` \u003cbr\u003e `find m/{module}`\u003cbr\u003e e.g. `find n/homework`, \u003cbr\u003e `find m/CS1101S`                                                                                                                     |","lastModifiedDate":"2022-11-07"},{"lineNumber":502,"author":{"gitId":"songivan00"},"content":"| **List tasks**             | `list` / `list time`                                                                                                                                                                                         |","lastModifiedDate":"2022-10-23"},{"lineNumber":503,"author":{"gitId":"danzzzerl"},"content":"| **Add contact**            | `addc n/{name} p/{phone_number} [e/{email}] [a/{address}] [t/{tag}]... [m/{module}...] [gh/{github}] [tele/{telegram}]` \u003cbr\u003e e.g. `addc n/Bob Martin p/98765432 tele/bobmartin00 m/CS1101S CS1231S t/friend` |","lastModifiedDate":"2022-11-07"},{"lineNumber":504,"author":{"gitId":"parnikkapore"},"content":"| **List contacts**          | `listc`                                                                                                                                                                                                      |","lastModifiedDate":"2022-10-26"},{"lineNumber":505,"author":{"gitId":"danzzzerl"},"content":"| **Delete contact**         | `delc {contact_index}`\u003cbr\u003e e.g. `delc 3`                                                                                                                                                                     |","lastModifiedDate":"2022-11-07"},{"lineNumber":506,"author":{"gitId":"songivan00"},"content":"| **Edit contact**           | `editc {contact_index} {field_prefix + field_description}` \u003cbr\u003e e.g. `editc 2 p/91919100`                                                                                                                    |","lastModifiedDate":"2022-11-02"},{"lineNumber":507,"author":{"gitId":"danzzzerl"},"content":"| **Find contacts**          | `findc n/{name}` \u003cbr\u003e `findc m/{module}`\u003cbr\u003e `findc ts/{task_index}` \u003cbr\u003e e.g. `findc n/John`, `findc m/CS1231S`, `findc ts/3`                                                                               |","lastModifiedDate":"2022-11-07"},{"lineNumber":508,"author":{"gitId":"JonLamy"},"content":"| **Quick contact search**   | `saveme`                                                                                                                                                                                                     |","lastModifiedDate":"2022-10-29"},{"lineNumber":509,"author":{"gitId":"JonLamy"},"content":"| **Clear contacts**         | `clear`                                                                                                                                                                                                      |","lastModifiedDate":"2022-10-29"},{"lineNumber":510,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":511,"author":{"gitId":"parnikkapore"},"content":"\u003cdiv class\u003d\"page-new\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-11-09"},{"lineNumber":512,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":513,"author":{"gitId":"JonLamy"},"content":"## List of Prefixes","lastModifiedDate":"2022-10-30"},{"lineNumber":514,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":515,"author":{"gitId":"JonLamy"},"content":"| Field    | Prefix  |","lastModifiedDate":"2022-10-30"},{"lineNumber":516,"author":{"gitId":"JonLamy"},"content":"|----------|---------|","lastModifiedDate":"2022-10-30"},{"lineNumber":517,"author":{"gitId":"JonLamy"},"content":"| Name     | `n/`    |","lastModifiedDate":"2022-10-30"},{"lineNumber":518,"author":{"gitId":"JonLamy"},"content":"| Phone    | `p/`    |","lastModifiedDate":"2022-10-30"},{"lineNumber":519,"author":{"gitId":"JonLamy"},"content":"| Email    | `e/`    |","lastModifiedDate":"2022-10-30"},{"lineNumber":520,"author":{"gitId":"JonLamy"},"content":"| Address  | `a/`    |","lastModifiedDate":"2022-10-30"},{"lineNumber":521,"author":{"gitId":"JonLamy"},"content":"| Tag      | `t/`    |","lastModifiedDate":"2022-10-30"},{"lineNumber":522,"author":{"gitId":"JonLamy"},"content":"| Module   | `m/`    |","lastModifiedDate":"2022-10-30"},{"lineNumber":523,"author":{"gitId":"JonLamy"},"content":"| GitHub   | `gh/`   |","lastModifiedDate":"2022-10-30"},{"lineNumber":524,"author":{"gitId":"JonLamy"},"content":"| Telegram | `tele/` |","lastModifiedDate":"2022-10-30"},{"lineNumber":525,"author":{"gitId":"JonLamy"},"content":"| Task     | `ts/`   |","lastModifiedDate":"2022-10-30"},{"lineNumber":526,"author":{"gitId":"JonLamy"},"content":"| Deadline | `by/`   |","lastModifiedDate":"2022-10-30"},{"lineNumber":527,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":528,"author":{"gitId":"angkl0"},"content":"Click [here](#introduction) to return to the top of the page.","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"angkl0":28,"parnikkapore":131,"JonLamy":126,"songivan00":76,"danzzzerl":46,"-":121}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"parnikkapore"},"content":"    content: \"CodeConnect\";","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"parnikkapore":1,"-":293}},{"path":"docs/_sass/minima/custom-styles.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// Placeholder to allow defining custom styles that override everything else.","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"// (Use `_sass/minima/custom-variables.scss` to override variable defaults)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"// Headings","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"h2, h3 {","lastModifiedDate":"2022-10-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  color: #e46c0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"h2 {","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"  font-weight: bold;","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"h4, h5, h6 {","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"  font-weight: $font-weight-semibold;","lastModifiedDate":"2022-10-30"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Bootstrap style alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":".alert {","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  padding: $alert-padding-y $alert-padding-x;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  margin-bottom: $alert-margin-bottom;","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  border: $alert-border-width solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  order-radius : $alert-border-radius;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Headings for larger alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":".alert-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  // Specified to prevent conflicts of changing $headings-color","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"// Provide class for links that match alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":".alert-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  font-weight: $alert-link-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"// Generate contextual modifier classes for colorizing the alert.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@each $color, $value in $theme-colors {","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  .alert-#{$color} {","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @include alert-variant(color-level($value, $alert-bg-level), color-level($value, $alert-border-level), color-level($value, $alert-color-level));","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"// Page breaks","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"@mixin page-break-before {","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"  @media print {","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    break-before: page;","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"  }","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"@mixin page-break {","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"  @include page-break-before;","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":".page-new {","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"  @include page-break-before;","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":".post-content .page-new+h2 {","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"  @media print {","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"    margin-top: 0; // We are starting a new page anyway","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"  }","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"parnikkapore":31,"-":33}},{"path":"docs/_sass/minima/custom-variables.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// Placeholder to allow overriding predefined variables smoothly.","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//Bootstrap\u0027s default","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"$white:    #fff !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"$gray-100: #f8f9fa !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"$gray-200: #e9ecef !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$gray-300: #dee2e6 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"$gray-400: #ced4da !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"$gray-500: #adb5bd !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"$gray-600: #6c757d !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"$gray-700: #495057 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"$gray-800: #343a40 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"$gray-900: #212529 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"$black:    #000 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"$blue:    #0d6efd !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"$indigo:  #6610f2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$purple:  #6f42c1 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"$pink:    #d63384 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"$red:     #dc3545 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$orange:  #fd7e14 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"$yellow:  #ffc107 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"$green:   #28a745 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$teal:    #20c997 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"$cyan:    #17a2b8 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"$primary:       $blue !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"$secondary:     $gray-600 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"$success:       $green !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"$info:          $cyan !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"$warning:       $yellow !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"$danger:        $red !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"$light:         $gray-100 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"$dark:          $gray-800 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"$theme-colors: (","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \"primary\":    $primary,","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \"secondary\":  $secondary,","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \"success\":    $success,","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \"info\":       $info,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \"warning\":    $warning,","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \"danger\":     $danger,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \"light\":      $light,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \"dark\":       $dark","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":") !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"$theme-color-interval: 8% !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"$body-bg:                   $white !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"$body-color:                $gray-900 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"$body-text-align:           null !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"$enable-gradients: true;","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"// Define alert colors, border radius, and padding.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"$border-radius:               .25rem !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"$border-width:                1px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"$font-weight-bold:            700 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"$font-weight-medium:          500 !default;","lastModifiedDate":"2022-10-30"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"$font-weight-semibold:        600 !default;","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"$alert-padding-y:                   .75rem !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"$alert-padding-x:                   1.25rem !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"$alert-margin-bottom:               1rem !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"$alert-border-radius:               $border-radius !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"$alert-link-font-weight:            $font-weight-bold !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"$alert-border-width:                $border-width !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"$alert-bg-level:                    -10 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"$alert-border-level:                -9 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"$alert-color-level:                 6 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"// Request a color level","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"// scss-docs-start color-level","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"@function color-level($color: $primary, $level: 0) {","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  $color-base: if($level \u003e 0, $black, $white);","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  $level: abs($level);","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  @return mix($color-base, $color, $level * $theme-color-interval);","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"parnikkapore":3,"-":76}},{"path":"docs/diagrams/AddTaskCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"participant \":Logic\" as Logic LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"participant \":AddTaskCommandParser\" as AddTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nNaturalDateParser\" as NaturalDateParser LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"participant \"toAdd:Task\" as Task LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"participant \":AddTaskCommand\" as AddTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"[-\u003eLogic ++","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"Logic -\u003e AddTaskCommandParser **","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"activate AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"Logic -\u003e AddTaskCommandParser ++ : parse(\"next thursday\")","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"AddTaskCommandParser -\u003e NaturalDateParser ++ : parse(\"next thursday\")","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"AddTaskCommandParser -\u003e Task **","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"activate Task","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"AddTaskCommandParser -\u003e AddTaskCommand **","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"activate AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"Logic -\u003e AddTaskCommand ++ : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"AddTaskCommand -\u003e Model ++ : addTask(toAdd)","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"AddTaskCommand -\u003e CommandResult **","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"return","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"parnikkapore":43}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"user -[USER_COLOR]\u003e ui : \"delc 1\"","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delc 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"songivan00":2,"-":36}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"participant \":CodeConnectParser\" as CodeConnectParser LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"participant \":DeleteContactCommandParser\" as DeleteContactCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"participant \"d:DeleteContactCommand\" as DeleteContactCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"[-\u003e LogicManager : execute(\"delc 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"LogicManager -\u003e CodeConnectParser : parseCommand(\"delc 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"activate CodeConnectParser","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"create DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"CodeConnectParser -\u003e DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"activate DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"DeleteContactCommandParser --\u003e CodeConnectParser","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"deactivate DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"CodeConnectParser -\u003e DeleteContactCommandParser : parse(\"1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"activate DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"create DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"DeleteContactCommandParser -\u003e DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"activate DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"DeleteContactCommand --\u003e DeleteContactCommandParser : d","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"deactivate DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"DeleteContactCommandParser --\u003e CodeConnectParser : d","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"deactivate DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"DeleteContactCommandParser -[hidden]-\u003e CodeConnectParser","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"destroy DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"CodeConnectParser --\u003e LogicManager : d","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"deactivate CodeConnectParser","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"LogicManager -\u003e DeleteContactCommand : execute()","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"activate DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"DeleteContactCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"Model --\u003e DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"songivan00"},"content":"DeleteContactCommand -\u003e CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"songivan00"},"content":"CommandResult --\u003e DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"songivan00"},"content":"DeleteContactCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"songivan00"},"content":"deactivate DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"parnikkapore":4,"songivan00":28,"-":37}},{"path":"docs/diagrams/EditTaskActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":":User enters \"edit {task_index} {field prefix + field description} \" command;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"if () then ([invalid arguments])","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"    :Display error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"    : CodeConnect edits the task;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"endif","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"songivan00":15}},{"path":"docs/diagrams/FindContactActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":":User enters \"findc {field_prefix +  keyword}\" command;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"if () then ([invalid arguments])","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"    :Display error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"    if () then ([module prefix])","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"        :Filters contacts containing","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"        the given module;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"    else ([name prefix])","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"        :Filters contacts containing","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"        the specified keywords;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"    endif","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"endif","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"JonLamy":18,"songivan00":1}},{"path":"docs/diagrams/FindTasksSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"participant \":FindTaskCommandParser\" as FindTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"participant \"p:TaskContainsKeywordsPredicate\" as TaskContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"participant \"f:FindTaskCommand\" as FindTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"[-\u003e LogicManager : execute(\"find n/ Lab 2\")","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find n/ Lab 2\")","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"create FindTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"AddressBookParser -\u003e FindTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"activate FindTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"FindTaskCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"deactivate FindTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"AddressBookParser -\u003e FindTaskCommandParser : parse(\"n/ Lab 2\")","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"activate FindTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"create TaskContainsKeywordsPredicate","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"FindTaskCommandParser -\u003e TaskContainsKeywordsPredicate","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"activate TaskContainsKeywordsPredicate","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"TaskContainsKeywordsPredicate --\u003e FindTaskCommandParser : p","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"deactivate TaskContainsKeywordsPredicate","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"create FindTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"FindTaskCommandParser -\u003e FindTaskCommand : FindTaskCommand(p)","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"activate FindTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"FindTaskCommand --\u003e FindTaskCommandParser : f","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"deactivate FindTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"FindTaskCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"deactivate FindTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"LogicManager -\u003e FindTaskCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"activate FindTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"FindTaskCommand -\u003e Model : updateFilteredTaskList(p)","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"Model --\u003e FindTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"create CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"FindTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"CommandResult --\u003e FindTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"FindTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"deactivate FindTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"danzzzerl":74}},{"path":"docs/diagrams/ListTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"participant \":CodeConnectParser\" as CodeConnectParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"participant \":ListTaskCommandParser\" as ListTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"participant \"a:ListTaskCommand\" as ListTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"participant \"d:DeadlineComparator\" as DeadlineComparator MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"participant \"d:DefaultComparator\" as DefaultComparator MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"[-\u003e LogicManager : execute(\"list time\")","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"activate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"LogicManager -\u003e CodeConnectParser : parseCommand(\"list time\")","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"activate CodeConnectParser","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"create ListTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"CodeConnectParser -\u003e ListTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"activate ListTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"ListTaskCommandParser --\u003e CodeConnectParser","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"deactivate ListTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"CodeConnectParser -\u003e ListTaskCommandParser : parse(\"time\")","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"activate ListTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"alt list by deadline","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    create DeadlineComparator","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    ListTaskCommandParser -\u003e DeadlineComparator","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    activate DeadlineComparator","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"    DeadlineComparator --\u003e ListTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"    deactivate DeadlineComparator","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"else default list","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    create DefaultComparator","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    ListTaskCommandParser -\u003e DefaultComparator","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"    activate DefaultComparator","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"    DefaultComparator --\u003e ListTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"    deactivate DefaultComparator","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"end","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"create ListTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"ListTaskCommandParser -\u003e ListTaskCommand : ListTaskCommand(d)","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"activate ListTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"ListTaskCommand --\u003e ListTaskCommandParser : a","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"deactivate ListTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"ListTaskCommandParser --\u003e CodeConnectParser : a","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"deactivate ListTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"ListTaskCommandParser -[hidden]-\u003e CodeConnectParser","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"destroy ListTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"CodeConnectParser --\u003e LogicManager : a","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"deactivate CodeConnectParser","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"LogicManager -\u003e ListTaskCommand : execute()","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"activate ListTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"ListTaskCommand -\u003e Model : updateSortedTaskList(d)","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"Model --\u003e ListTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"create CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"ListTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"activate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"CommandResult --\u003e ListTaskCommand : result","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"ListTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"deactivate ListTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-07"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"ListTaskCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"destroy ListTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"angkl0":94}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"Class CodeConnectParser","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"LogicManager -right-\u003e\"1\" CodeConnectParser","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"CodeConnectParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"note right of XYZCommand: XYZCommand \u003d ClearCommand, \\nAddContactCommand, etc","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"parnikkapore":4,"-":42}},{"path":"docs/diagrams/MarkTaskActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":":User enters mark [index] command;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":":Input is parsed;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"if () then ([index is not an integer])","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"    :ParseException is thrown;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"    :Displays error message;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"else ([Else])","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"    if () then ([invalid index])","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"        :CommandException is thrown;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"        :Displays error message;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"    else ([Else])","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"        if() then ([task to be marked is complete])","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"            :CommandException is thrown;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"            :Displays error message;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"        else ([Else])","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"            :A marked copy of the task to be","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"            marked is created;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"            :Task to be marked is replaced with","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"            created marked copy in the task list;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"            :Displays success message;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"        endif","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    endif","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"endif","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"angkl0":27}},{"path":"docs/diagrams/MarkTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"participant \":CodeConnectParser\" as CodeConnectParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"participant \"m:MarkTaskCommandParser\" as MarkTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"participant \":MarkTaskCommand\" as MarkTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"participant MarkTaskCommand as MarkTaskCommand1 \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"participant \"marked:Task\" as Task MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"[-\u003e LogicManager : execute(\"mark 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"activate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"LogicManager -\u003e CodeConnectParser : parseCommand(\"mark 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"activate CodeConnectParser","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"create MarkTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"CodeConnectParser -\u003e MarkTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"activate MarkTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"MarkTaskCommandParser --\u003e CodeConnectParser","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"deactivate MarkTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"CodeConnectParser -\u003e MarkTaskCommandParser : parse(\"1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"activate MarkTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"create MarkTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"MarkTaskCommandParser -\u003e MarkTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"activate MarkTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"MarkTaskCommand --\u003e MarkTaskCommandParser : m","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"deactivate MarkTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"MarkTaskCommandParser --\u003e CodeConnectParser : m","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"deactivate MarkTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"MarkTaskCommandParser -[hidden]-\u003e CodeConnectParser","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"destroy MarkTaskCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"CodeConnectParser --\u003e LogicManager : m","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"deactivate CodeConnectParser","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"LogicManager -\u003e MarkTaskCommand : execute()","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"activate MarkTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"MarkTaskCommand -\u003e MarkTaskCommand1 : createMarkedTask(taskToMark)","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"activate MarkTaskCommand1","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"create Task","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"MarkTaskCommand1 -\u003e Task","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"activate Task","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"Task --\u003e MarkTaskCommand1","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"deactivate Task","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"MarkTaskCommand1 --\u003e MarkTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"deactivate MarkTaskCommand1","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"MarkTaskCommand -\u003e Model : setTask(taskToMark, marked)","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"Model --\u003e MarkTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"create CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"MarkTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"activate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"CommandResult --\u003e MarkTaskCommand : result","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"MarkTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"deactivate MarkTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"MarkTaskCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"destroy MarkTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"angkl0":87}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyTaskList\" as ReadOnlyTaskList","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"Class TaskList","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"Class UniqueTaskList","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"Class Task","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"Class TaskName","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"Class Module","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"Class Deadline","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"Class Status","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"ModelManager .left.|\u003e Model","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"Model .down.\u003e ReadOnlyAddressBook","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"Model .down.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"Model .down.\u003e ReadOnlyTaskList","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"ReadOnlyAddressBook -[hidden]right-\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"ReadOnlyUserPrefs -[hidden]right-\u003e ReadOnlyTaskList","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"TaskList .up.|\u003e ReadOnlyTaskList","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"ModelManager --\u003e \"1\" AddressBook","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"ModelManager --\u003e \"1\" TaskList","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"ModelManager --\u003e \"1\" UserPrefs","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"\u0027 The *all and *filtered labels are defined on the opposite lines because PlantUML is unable to lay out the labels properly. Hopefully we can find a fix for this.","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"UniquePersonList --\u003e \"          ~* filtered\" Person","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"Person --\u003e \"*\" Module","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"ModelManager --\u003e\"~* all       \" Person","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"TaskList *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"UniqueTaskList --\u003e \"~* all\" Task","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"Task *--\u003e TaskName","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"Task *--\u003e \"1\" Module","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"Task *--\u003e Deadline","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"Task *--\u003e Status","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"TaskName -[hidden]right-\u003e Module","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"Module -[hidden]right-\u003e Deadline","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"Deadline -[hidden]right-\u003e Status","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"ModelManager --\u003e\"~* filtered  \" Task","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"parnikkapore":39,"-":43}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"Class CodeConnectParser","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"HiddenOutside ..\u003e CodeConnectParser","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"CodeConnectParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"CodeConnectParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"parnikkapore":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"package \"TaskList Storage\" #F4F6F6{","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nTaskListStorage\" as TaskListStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"Class JsonTaskListStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"Class JsonSerializableTaskList","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"Class JsonAdaptedModule","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"Class StorageManager","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"StorageManager -up--\u003e \"1\" AddressBookStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"StorageManager -up--\u003e \"1\" TaskListStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"StorageManager -up--\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"Storage --|\u003e AddressBookStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"Storage --|\u003e TaskListStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"Storage --|\u003e UserPrefsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedModule","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"JsonTaskListStorage .up.|\u003e TaskListStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"JsonTaskListStorage ..\u003e JsonSerializableTaskList","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"JsonSerializableTaskList --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"angkl0":20,"parnikkapore":1,"-":35}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"Class TaskCard","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"Class TaskListPanel","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"MainWindow *-down-\u003e \"1\" TaskListPanel","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"TaskListPanel -down-\u003e \"*\" TaskCard","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"TaskListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"danzzzerl":8,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"title: CodeConnect","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"![UiContacts](images/UiContacts.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"**CodeConnect is a desktop application for managing contacts and tasks of your modules.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"* If you are interested in using CodeConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"* If you are interested about developing CodeConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [jchronic](https://github.com/samtingleff/jchronic)","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"parnikkapore":5,"JonLamy":2,"-":12}},{"path":"docs/team/angkl0.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"title: Ang Kuang Long\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"### Project: CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and is linked to their local contacts to find students that take the same modules. This gives them an easy way to source for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"* **New Feature**:","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"  * `mark` / `unmark` task commands","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"  * `list` / `list time` task commands","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dangkl0\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"  * Extended storage to store tasks","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"  * Updated UI to include a task\u0027s status in a taskcard","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"  * Enhanced `find` and `findc` command to return entries which match keyword partially","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"  * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    * Added guide for the usage of the following features:","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"      * `addc` ","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"      * `delc`","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    * Added note on extraneous parameters for `list`","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    * Added documentation for the implementation of the following features:","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"      * `mark` `unmark` ","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        * Added sequence and activity diagrams for `mark` ","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"      * `list` `list time` ","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        * Added sequence diagram for `list` ","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    * Added section on `managing contacts` and `saving of data` under Appendix: Instructions for manual testing","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"* **Contribution to team-based tasks**:","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"  * Frequent testing and debugging of product","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"* **Community**: ","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"  * Primary reviewer of songivan00\u0027s PRs","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"  ","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"angkl0":41,"danzzzerl":1}},{"path":"docs/team/danzzzerl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"title: Denzel Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"# Project: CodeConnect","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"## Overview","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"is linked to their local contacts to find students that take the same modules. This gives them an easy way to source","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"## Summary of Contributions","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"### Code Contributed","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"- [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003ddanzzzerl\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"### Enhancements Implemented","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"* New Feature: Find task","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"  * find tasks by either keywords or modules","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"  * created new classes to be able to implement this new function for task management","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    * `FindTaskCommand` for the overall find task command","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    * `FindTaskCommandParser` to parse user input","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    * `TaskContainsKeywordsPredicate` for finding tasks by their name","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    * `TaskContainsModulesPredicate` for finding tasks by module","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"  * integrated the new classes into the current model for it to work","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"  * it was hard because of the high level of abstraction of the commands used by the logic and model, and I had to make this new feature in a similar way","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"  * wrote new test cases and created new test case classes to test the new classes and methods","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"  ","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"* Adding of Github and Telegram fields for contacts","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"  * updated code for `addc` and `editc` commands, which are commands for adding contacts and editing contacts","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"  * `addc` had to be edited to be able to add the 2 new fields (and be made optional)","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"  * `editc` had to be edited to be able to edit the 2 new fields of any contact","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"* UI improvements","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"  * Upgrading the Ui for tasks and contact cards to include the different fields and have a different look","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"  * added new labels and code for the Ui and `.fxml` files","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"* Fixing of bugs after iterations","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"* Improve Code Quality of overall source code","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"### Contributions to UG","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"* Add documentation for the features `find` and `findc`","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"* Update language in UG","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"* UG tips in `addc` command usage","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"* Edit examples of commands ","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"* Fix UG errors after review iterations","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"### Contributions to DG","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"* Help to edit the new Ui class diagram using plantuml","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"* Add use cases for `add` and `find` task, `clean`, `clear`, `saveme`, `list`, `list time`","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"* Add more NFRs","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"* Add documentation for finding feature","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"  * Update the new sequence diagram for the finding feature using plantuml","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"* Overall presentation","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"### Contributions to Team-Based Tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"* Helped with the editing of the Ui base at the start of the project when Ui, Model, and Storage had to be changed in order for the new features to be implemented","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"* Fixing of bugs","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"* Reviewing and merging code every week","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"* Release of CodeConnect MVP and v1.3","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"### Reviewing/Mentoring contributions","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"* Our team set up a reviewing system where each person reviews one other person\u0027s PR and merges it","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"* Primary reviewer for JonLamy\u0027s PRs","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"* This was not a definite system as those who were more free helped to review other PRs whenever possible as well","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"danzzzerl":69}},{"path":"docs/team/jonlamy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"title: Jonathan Lam\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"# Project: CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"## Overview","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"is linked to their local contacts to find students that take the same modules. This gives them an easy way to source","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"## Summary of Contributions","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"### Code Contributed","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"- [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djonlamy\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"### Enhancements Implemented","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"- UI Improvements","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"  - Create two separate tabs for contacts and tasks list","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"  - Tab focus will change according to previous command entered","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"    - additional parameter in `CommandResult` to determine which tab the command should focus upon execution","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"  - Create `fxml` files for `TaskListCard` and `TaskListPanel`","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"  - Edit `MainWindow` class to contain both a contacts list and task list","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"- `findc` command to search for contacts by name, module, or task","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"  - Create `ModuleTakenPredicate` and `CanHelpWithTaskPredicate` classes","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"    - allows for searching contacts by module and task, on top of regular search by name feature","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"  - Modify `FindContactCommandParser` class","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"    - to parse for user entered prefix (`n/`, `m/`, `ts/`) and create the correct predicate used to contact searching during execution","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"    - to handle erroneous inputs","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"  - Modify `FindContactCommand` class","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"    - to detect wrong index when executing find contact by task index","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"- `saveme` command as a convenient alias to `findc ts/1`","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"  - add switch case in CodeConnectParser for `saveme`","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"  - add factory method to `FindContactCommand`","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"- `clean` command to delete all completed tasks","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"  - add `deleteCompletedTasks` to the model interface and implementation","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"### Contributions to UG","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"- Add guide for the following commands\u0027 usage:","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"  - `findc`","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"  - `saveme`","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"  - `clean`","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"- Add list of prefixes to the end of UG","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"- UG tips, notes, and warnings about:","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"  - Deadline Formats","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"  - Flexible Module Format","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"  - Field Prefixes","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"  - `clean` VS `clear` command distinction","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"  - Tag and Module prefix usage","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"  - Warning on `clear` command","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"JonLamy"},"content":"### Contributions to DG","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"- Add implementation guide for the `find`/`findc` feature including:","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"JonLamy"},"content":"  - UI screenshot","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"JonLamy"},"content":"  - Activity diagram (with PlantUML)","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"  - Sequence diagram (with PlantUML)","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"  - Design considerations regarding multiple search keywords","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"- Overall presentation","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"### Contributions to Team-Based Tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"- Release of v1.2.1","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"- UI changes","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"  - change app name to CodeConnect","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"JonLamy"},"content":"### Review/mentoring Contributions","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"JonLamy"},"content":"- Primary reviewer for parnikkapore\u0027s PRs","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"JonLamy"},"content":"- Occasionally review other team members PRs","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"JonLamy":70}},{"path":"docs/team/parnikkapore.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"title: Poomklao Teerawatthanaprapha\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"### Project: CodeConnect","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and is linked to their local contacts to find students that take the same modules. This gives them an easy way to source for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dparnikkapore\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"* **Team tasks**:","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"  * Created and managed the team\u0027s repository and CI","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"  * Occasionally checked the consistency of the product and calls for changes if necessary","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"  * Investigated and fixed a flaky test in completely deterministic code ([#55](https://github.com/AY2223S1-CS2103T-T14-2/tp/pull/55))","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"  * Investigated and fixed failing tests due to a violated deep assumption ([1f8a0be](https://github.com/AY2223S1-CS2103T-T14-2/tp/pull/90/commits/1f8a0be9027044f2b5763e736f313a6708731745)...[1312776](https://github.com/AY2223S1-CS2103T-T14-2/tp/pull/90/commits/1312776ed1fd660586f9bcffd2529c352f07a6f7))","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"* **New features**:","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"  * Model classes for task tracking","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"  * Add / delete task commands","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"  * Natural date parsing for task deadlines (using [JChronic](https://mvnrepository.com/artifact/com.rubiconproject.oss/jchronic))","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    * Investigated and tested several lightweight Java natural date parsing libraries","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    * Wrote tests to verify expected behavior of substituted libraries in the future","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"  * Space-separated modules for `addc` and `editc` commands","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"  * User Guide:","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    * Added user guide items for add / remove task commands","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    * Improved the formatting and styling","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"      * Involves locally running Jekyll, bumping its dependencies, and modifying the .scss source.","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    * Revised product introduction","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"    * Added legend for note and warning boxes","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"  * Developer Guide:","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    * Gathered and formatted use cases for task management","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    * Documented add task command, including a sequence diagram and design decisions","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    * Added guide introduction / purpose statement","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"* **Community**:","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"  * Reviewed Kuang Long\u0027s PRs for code quality issues and potential unintended behavior (Notable: [#47](https://github.com/AY2223S1-CS2103T-T14-2/tp/pull/47). [#159](https://github.com/AY2223S1-CS2103T-T14-2/tp/pull/159)) as the primary reviewer","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"  * Contributed to the course-wide forum (Notable: [#246](https://github.com/nus-cs2103-AY2223S1/forum/issues/246#issuecomment-1250198702), [#334](https://github.com/nus-cs2103-AY2223S1/forum/issues/334))","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"* **Tools**:","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"  * CodeCov integration and configuration","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"parnikkapore":47}},{"path":"docs/team/songivan00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"title: Song Ivan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"### Project: CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and is linked to their local contacts to find students that take the same modules. This gives them an easy way to source for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dsongivan00\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"  * Updated the UI ","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"    * Changed the UI to support the TaskListPanel","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"    * Added the module tag to a task card","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"  * Changed naming convention for all Contacts features","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"    * Existing Contact classes and commands were changed to differentiate them from Tasks classes ","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"    * Error messages were also edited accordingly","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"  * Added a Modules field to Person","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"    * Relevant command such as adding contact and editing contact were updated to take in this new field","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"    * Wrote relevant tests cases to ensure code coverage","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"  * Added new feature edit task","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"    * Allowed users to edit tasks easily","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"    * This feature improves the product significantly because previously, to edit a task users had to delete the task and add the task back with the changes.","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"    This command provide a convenient way to edit their tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"    * Wrote test cases to ensure code coverage ","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"  * Changed some fields in contacts to be optional","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"    * Made name and phone number to be the only compulsory fields in Person","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"    * Other fields were all represented by a \"-\" if nothing was keyed in ","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"    * This enhancement meant that users have the choice to add only the fields that they want to include.","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"    * Edited existing test cases ","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"  * Fixed any bugs detected","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"  * Improved code quality of model and storage","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"* **Contributions to Documentation**:","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"  * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"    * Added documentation for the features `list` and `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"    * Added documentation for the feature `edit`","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"    * Added the introduction and a \"How to use this guide\" section","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"    * Added explanations for the notations used in the Features section","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"    * Edited the fomatting and improved the Front Matters and Features sections of the UG","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"    * Added Non-Functional Requirements","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"    * Worked on the implementation of the proposed edit task feature in v1.3","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"    * Worked on the overall formatting and vetting of the DG","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"    ","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"  * Submitted product name, target user profile and value proposition via TEAMMATES","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"  * Made the Demo video for v1.3","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"  * Constant bug testing and debugging","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"* **Review/mentoring Contributions**","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"songivan00"},"content":"  * Primary reviewer of danzzzerl\u0027s PR ","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"  * Occasionally review other team members PR when needed","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"songivan00":56}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"songivan00"},"content":"Create a `RemarkCommandParser` class in the `seedu.codeconnect.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-11-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"songivan00"},"content":"Create a new `Remark` in `seedu.codeconnect.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-11-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"songivan00"},"content":"Simply add the following to [`seedu.codeconnect.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-11-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"songivan00":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"The `address` field in `Person` is actually an instance of the `seedu.codeconnect.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"songivan00":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.codeconnect.logic.Logic`.","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"A quick look at the `seedu.codeconnect.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"songivan00":2,"-":299}},{"path":"src/main/java/seedu/codeconnect/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.FileUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"songivan00":3,"-":61}},{"path":"src/main/java/seedu/codeconnect/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"songivan00":1,"-":24}},{"path":"src/main/java/seedu/codeconnect/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Config;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Version;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.ConfigUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.StringUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.Logic;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.LogicManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.util.SampleDataUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.AddressBookStorage;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.JsonTaskListStorage;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.Storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.StorageManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.TaskListStorage;","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.UserPrefsStorage;","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.ui.Ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.ui.UiManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"        // initialise storage for AB","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        TaskListStorage taskListStorage \u003d new JsonTaskListStorage(userPrefs.getTaskListFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        storage \u003d new StorageManager(addressBookStorage, taskListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"JonLamy"},"content":"        // is aligned with developer guide section","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        ReadOnlyAddressBook initialAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        Optional\u003cReadOnlyTaskList\u003e taskListOptional;","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"        ReadOnlyTaskList initialTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"            initialAddressBook \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"            initialAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"            initialAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"            taskListOptional \u003d storage.readTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"            if (!taskListOptional.isPresent()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TaskList\");","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"            initialTaskList \u003d taskListOptional.orElseGet(SampleDataUtil::getSampleTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"            initialTaskList \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"            initialTaskList \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"        return new ModelManager(initialAddressBook, initialTaskList, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"angkl0":2,"parnikkapore":21,"JonLamy":2,"songivan00":29,"-":153}},{"path":"src/main/java/seedu/codeconnect/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.core;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":1,"-":62}},{"path":"src/main/java/seedu/codeconnect/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.core;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":1,"-":78}},{"path":"src/main/java/seedu/codeconnect/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.core;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":1,"-":111}},{"path":"src/main/java/seedu/codeconnect/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.core;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d person(s) listed!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d task(s) listed!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"angkl0":1,"songivan00":1,"danzzzerl":2,"-":11}},{"path":"src/main/java/seedu/codeconnect/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.core;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":1,"-":115}},{"path":"src/main/java/seedu/codeconnect/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.core.index;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"songivan00":1,"-":53}},{"path":"src/main/java/seedu/codeconnect/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.exceptions;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":1,"-":10}},{"path":"src/main/java/seedu/codeconnect/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.exceptions;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":1,"-":20}},{"path":"src/main/java/seedu/codeconnect/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.MainApp;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"songivan00":2,"-":40}},{"path":"src/main/java/seedu/codeconnect/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":1,"-":34}},{"path":"src/main/java/seedu/codeconnect/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Config;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"songivan00":3,"-":20}},{"path":"src/main/java/seedu/codeconnect/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":1,"-":82}},{"path":"src/main/java/seedu/codeconnect/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":3,"-":140}},{"path":"src/main/java/seedu/codeconnect/commons/util/NaturalDateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.time.Instant;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.time.ZoneId;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import com.mdimension.jchronic.Chronic;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import com.mdimension.jchronic.Options;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import com.mdimension.jchronic.tags.Pointer;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import com.mdimension.jchronic.utils.Span;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//@@author parnikkapore-reused","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// Taken from Parnikkapore\u0027s ip. Note for graders: The test code is new","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A simple JChronic-based date + time parser.","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class NaturalDateParser {","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given string, assumed to be in the local time zone, into a LocalDateTime.","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param input The string to be parsed.","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @return The parsed string.","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws DateTimeNotFoundException if neither a date nor a time can be resolved.","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static LocalDateTime parse(String input) throws DateTimeNotFoundException, ParseFailureException {","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(input);","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Options options \u003d new Options();","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        options.setContext(Pointer.PointerType.FUTURE);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        options.setGuess(false);","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Span parsedDate;","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            parsedDate \u003d Chronic.parse(input, options);","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseFailureException(input, e);","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (parsedDate \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new DateTimeNotFoundException(input);","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Chronic\u0027s right-hand bound seems to be the first second after the range, so subtract 1 to get the","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // last second in the range","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Instant result \u003d parsedDate.getEndCalendar().toInstant().minusSeconds(1);","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return LocalDateTime.ofInstant(result, ZoneId.systemDefault());","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Neither a date nor a time can be found in the given string.","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static class DateTimeNotFoundException extends ParseException {","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        private final String parsedString;","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        private DateTimeNotFoundException(String parsedString) {","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            super(\"Cannot find a date in \" + parsedString);","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            this.parsedString \u003d parsedString;","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        public String getParsedString() {","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return parsedString;","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Represents the situation that parsing, for some reason, failed.","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static class ParseFailureException extends ParseException {","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        private final String parsedString;","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        private ParseFailureException(String parsedString, Throwable cause) {","lastModifiedDate":"2022-10-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            super(\"Failed to parse \" + parsedString, cause);","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            this.parsedString \u003d parsedString;","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        public String getParsedString() {","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return parsedString;","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * For testing purposes only.","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param args Command-line arguments","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            LocalDateTime test \u003d parse(\"2 Jan 2006 15:04:05\");","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            System.out.println(test);","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"parnikkapore":13,"songivan00":2,"-":84}},{"path":"src/main/java/seedu/codeconnect/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":2,"-":66}},{"path":"src/main/java/seedu/codeconnect/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"     * @see seedu.codeconnect.model.Model#getAddressBook()","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"     * Returns the user prefs\u0027 task list file path.","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"    /** Returns an unmodifiable view of the sorted list of tasks */","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"    ObservableList\u003cTask\u003e getSortedTaskList();","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"angkl0":2,"JonLamy":5,"songivan00":10,"-":42}},{"path":"src/main/java/seedu/codeconnect/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.Command;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.CodeConnectParser;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.Storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"    private final CodeConnectParser codeConnectParser;","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"        codeConnectParser \u003d new CodeConnectParser();","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"        Command command \u003d codeConnectParser.parseCommand(commandText);","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"            storage.saveTaskList(model.getTaskList());","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"JonLamy"},"content":"    @Override","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"JonLamy"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"JonLamy"},"content":"        return model.getTaskListFilePath();","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"    public ObservableList\u003cTask\u003e getSortedTaskList() {","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"        return model.getSortedTaskList();","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"angkl0":5,"JonLamy":5,"songivan00":17,"-":66}},{"path":"src/main/java/seedu/codeconnect/logic/commands/AddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"    public static final String COMMAND_WORD \u003d \"addc\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"            + PREFIX_NAME + \"{name} \"","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"            + PREFIX_PHONE + \"{phone_number} \"","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"            + \"[\" + PREFIX_EMAIL + \"{email}] \"","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"            + \"[\" + PREFIX_ADDRESS + \"{address}] \"","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"            + \"[\" + PREFIX_TAG + \"{tag}]... \"","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"            + \"[\" + PREFIX_MODULE + \"{module}...] \"","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"            + \"[\" + PREFIX_GITHUB + \"{github}] \"","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"{telegram}]\\n\"","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"            + PREFIX_MODULE + \"CS1101S \"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"            + PREFIX_MODULE + \"ES2660 \"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"            + PREFIX_GITHUB + \"JohnnyDodo \"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"            + PREFIX_TELEGRAM + \"JDo\";","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"     * Creates an AddContactCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"    public AddContactCommand(Person person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"                || (other instanceof AddContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"songivan00"},"content":"                \u0026\u0026 toAdd.equals(((AddContactCommand) other).toAdd));","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JonLamy":2,"songivan00":27,"danzzzerl":3,"-":45}},{"path":"src/main/java/seedu/codeconnect/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":" * Adds a task to the address book.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"            + \"{task_name} \"","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"            + PREFIX_DEADLINE + \"{deadline} \"","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"            + \"[\" + PREFIX_MODULE + \"{module}]\\n\"","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"            + \"Lab2\" + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"            + PREFIX_DEADLINE + \"tomorrow 23:59\" + \" \"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"            + PREFIX_MODULE + \"CS2030S\";","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    public static final String TEMPLATE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list\";","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    private final Task toAdd;","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        toAdd \u003d task;","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"        return new CommandResult(String.format(TEMPLATE_SUCCESS, toAdd), true);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        return \"Command: Add task \" + this.toAdd;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"parnikkapore":54,"JonLamy":1,"songivan00":9}},{"path":"src/main/java/seedu/codeconnect/logic/commands/CleanTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":" * Deletes all completed tasks from the task list.","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"public class CleanTasksCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"    public static final String COMMAND_WORD \u003d \"clean\";","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Completed tasks have been deleted!\";","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"        model.deleteCompletedTasks();","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"        return new CommandResult(MESSAGE_SUCCESS, true);","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"JonLamy":19,"songivan00":3}},{"path":"src/main/java/seedu/codeconnect/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":3,"-":20}},{"path":"src/main/java/seedu/codeconnect/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":3,"-":17}},{"path":"src/main/java/seedu/codeconnect/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"    /** Flag between Task command [true] and Person command [false] */","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"    private boolean useTaskTab \u003d false;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"     * and tells the UI whether to switch to the task tab.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"     * @param feedbackToUser","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"     * @param useTaskTab","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"    public CommandResult(String feedbackToUser, boolean useTaskTab) {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"        this.useTaskTab \u003d useTaskTab;","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"    public boolean useTaskTab() {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"        return useTaskTab;","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JonLamy":18,"songivan00":1,"-":70}},{"path":"src/main/java/seedu/codeconnect/logic/commands/DeleteContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"public class DeleteContactCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"    public static final String COMMAND_WORD \u003d \"delc\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"            + \"Parameters: {contact_index} (must be a positive integer)\\n\"","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"    public DeleteContactCommand(Index targetIndex) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"        assert(targetIndex.getZeroBased() \u003e\u003d 0);","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"                || (other instanceof DeleteContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteContactCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JonLamy":1,"songivan00":12,"-":41}},{"path":"src/main/java/seedu/codeconnect/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" * Deletes a task identified using it\u0027s displayed index from the task list.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    public static final String COMMAND_WORD \u003d \"del\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"            + \"Parameters: {task_index} (must be a positive integer)\\n\"","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getSortedTaskList();","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"        assert(targetIndex.getZeroBased() \u003e\u003d 0);","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete), true);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":1,"parnikkapore":43,"JonLamy":2,"songivan00":7}},{"path":"src/main/java/seedu/codeconnect/logic/commands/EditContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.CollectionUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Address;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Github;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Telegram;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"public class EditContactCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"    public static final String COMMAND_WORD \u003d \"editc\";","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"            + \"Parameters: {contact_index} (must be a positive integer) \"","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"            + \"{field_prefix + field_description}\\n\"","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"    public EditContactCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"JonLamy"},"content":"        assert(index.getZeroBased() \u003e\u003d 0);","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"JonLamy"},"content":"        Set\u003cModule\u003e updatedModules \u003d editPersonDescriptor.getMods().orElse(personToEdit.getModules());","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"danzzzerl"},"content":"        Github updatedGithub \u003d editPersonDescriptor.getGithub().orElse(personToEdit.getGithub());","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"danzzzerl"},"content":"        Telegram updatedTelegram \u003d editPersonDescriptor.getTelegram().orElse(personToEdit.getTelegram());","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"danzzzerl"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"danzzzerl"},"content":"                updatedModules, updatedGithub, updatedTelegram);","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"songivan00"},"content":"        if (!(other instanceof EditContactCommand)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"songivan00"},"content":"        EditContactCommand e \u003d (EditContactCommand) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"JonLamy"},"content":"        private Set\u003cModule\u003e modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"danzzzerl"},"content":"        private Github github;","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"danzzzerl"},"content":"        private Telegram telegram;","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"JonLamy"},"content":"            setMods(toCopy.modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"danzzzerl"},"content":"            setGithub(toCopy.github);","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"danzzzerl"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"danzzzerl"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, modules, github, telegram);","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"JonLamy"},"content":"        public void setMods(Set\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":213,"author":{"gitId":"JonLamy"},"content":"            this.modules \u003d modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":214,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"JonLamy"},"content":"        public Optional\u003cSet\u003cModule\u003e\u003e getMods() {","lastModifiedDate":"2022-10-11"},{"lineNumber":217,"author":{"gitId":"JonLamy"},"content":"            return Optional.ofNullable(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":220,"author":{"gitId":"danzzzerl"},"content":"        public void setGithub(Github gh) {","lastModifiedDate":"2022-10-24"},{"lineNumber":221,"author":{"gitId":"danzzzerl"},"content":"            this.github \u003d gh;","lastModifiedDate":"2022-10-24"},{"lineNumber":222,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":223,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":224,"author":{"gitId":"danzzzerl"},"content":"        public Optional\u003cGithub\u003e getGithub() {","lastModifiedDate":"2022-10-24"},{"lineNumber":225,"author":{"gitId":"danzzzerl"},"content":"            return Optional.ofNullable(github);","lastModifiedDate":"2022-10-24"},{"lineNumber":226,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":227,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":228,"author":{"gitId":"danzzzerl"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2022-10-24"},{"lineNumber":229,"author":{"gitId":"danzzzerl"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2022-10-24"},{"lineNumber":230,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":231,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":232,"author":{"gitId":"danzzzerl"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2022-10-24"},{"lineNumber":233,"author":{"gitId":"danzzzerl"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2022-10-24"},{"lineNumber":234,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":235,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"songivan00"},"content":"                    \u0026\u0026 getMods().equals(e.getMods())","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"danzzzerl"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-10-24"},{"lineNumber":257,"author":{"gitId":"danzzzerl"},"content":"                    \u0026\u0026 getGithub().equals(e.getGithub())","lastModifiedDate":"2022-10-24"},{"lineNumber":258,"author":{"gitId":"danzzzerl"},"content":"                    \u0026\u0026 getTelegram().equals(e.getTelegram());","lastModifiedDate":"2022-10-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"JonLamy":13,"songivan00":27,"danzzzerl":27,"-":194}},{"path":"src/main/java/seedu/codeconnect/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.CollectionUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Status;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"            + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"            + \"Parameters: {task_index} (must be a positive integer) \"","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"            + \"{field_prefix + field_description}\\n\"","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"            + PREFIX_DEADLINE + \"2022-12-12 16:00 \"","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"            + PREFIX_MODULE + \"CS2040S\";","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"    private final Index index;","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"    public EditTaskCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"songivan00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getSortedTaskList();","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"JonLamy"},"content":"        assert(index.getZeroBased() \u003e\u003d 0);","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"songivan00"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"songivan00"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"songivan00"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"songivan00"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"songivan00"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"songivan00"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"songivan00"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"songivan00"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask), true);","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"songivan00"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"songivan00"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"songivan00"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"songivan00"},"content":"        TaskName updatedName \u003d editTaskDescriptor.getName().orElse(taskToEdit.getName());","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"songivan00"},"content":"        Module updatedModule \u003d editTaskDescriptor.getModule().orElse(taskToEdit.getModule());","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"songivan00"},"content":"        Deadline updatedDeadline \u003d editTaskDescriptor.getDeadline().orElse(taskToEdit.getDeadline());","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"songivan00"},"content":"        Status currentStatus \u003d taskToEdit.getStatus();","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"songivan00"},"content":"        return new Task(updatedName, updatedModule, updatedDeadline, currentStatus);","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"songivan00"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"songivan00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"songivan00"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"songivan00"},"content":"            return true;","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"songivan00"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"songivan00"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"songivan00"},"content":"            return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"songivan00"},"content":"        // state check","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"songivan00"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"songivan00"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"songivan00"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"songivan00"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"songivan00"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"songivan00"},"content":"        private TaskName name;","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"songivan00"},"content":"        private Module module;","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"songivan00"},"content":"        private Deadline deadline;","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"songivan00"},"content":"        private Status status;","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"songivan00"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"songivan00"},"content":"        /**","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"songivan00"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"songivan00"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"songivan00"},"content":"         */","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"songivan00"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"songivan00"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"songivan00"},"content":"            setModule(toCopy.module);","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"songivan00"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"songivan00"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"songivan00"},"content":"        /**","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"songivan00"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"songivan00"},"content":"         */","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"songivan00"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"songivan00"},"content":"            return CollectionUtil.isAnyNonNull(name, module, deadline);","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"songivan00"},"content":"        public void setName(TaskName name) {","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"songivan00"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"songivan00"},"content":"        public Optional\u003cTaskName\u003e getName() {","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"songivan00"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"songivan00"},"content":"        public void setModule(Module module) {","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"songivan00"},"content":"            this.module \u003d module;","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"songivan00"},"content":"        public Optional\u003cModule\u003e getModule() {","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"songivan00"},"content":"            return Optional.ofNullable(module);","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":158,"author":{"gitId":"songivan00"},"content":"        public void setDeadline(Deadline deadline) {","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"songivan00"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"songivan00"},"content":"        public Optional\u003cDeadline\u003e getDeadline() {","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"songivan00"},"content":"            return Optional.ofNullable(deadline);","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":166,"author":{"gitId":"songivan00"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"songivan00"},"content":"            this.status \u003d status;","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"songivan00"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2022-10-23"},{"lineNumber":171,"author":{"gitId":"songivan00"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2022-10-23"},{"lineNumber":172,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":173,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":174,"author":{"gitId":"songivan00"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"songivan00"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":176,"author":{"gitId":"songivan00"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":177,"author":{"gitId":"songivan00"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"songivan00"},"content":"                return true;","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"songivan00"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"songivan00"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"songivan00"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"songivan00"},"content":"                return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"songivan00"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"songivan00"},"content":"            // state check","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"songivan00"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":189,"author":{"gitId":"songivan00"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-23"},{"lineNumber":190,"author":{"gitId":"songivan00"},"content":"                    \u0026\u0026 getModule().equals(e.getModule())","lastModifiedDate":"2022-10-23"},{"lineNumber":191,"author":{"gitId":"songivan00"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2022-10-23"},{"lineNumber":192,"author":{"gitId":"songivan00"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus());","lastModifiedDate":"2022-10-23"},{"lineNumber":193,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":194,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":195,"author":{"gitId":"songivan00"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"parnikkapore":1,"JonLamy":1,"songivan00":193}},{"path":"src/main/java/seedu/codeconnect/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"songivan00":2,"-":17}},{"path":"src/main/java/seedu/codeconnect/logic/commands/FindContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"import java.util.List;","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.CanHelpWithTaskPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":" * Keyword matching for both names and modules are case-insensitive.","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"public class FindContactCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"    public static final String COMMAND_WORD \u003d \"findc\";","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons matching a given filter.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"            + \"Parameters: {field_prefix + keyword} ...\\n\"","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"            + \"Example 1: \" + COMMAND_WORD + \" n/ Jacob n/ Alice\";","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"    public FindContactCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"    public static FindContactCommand withoutArgs() {","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"        return new FindContactCommand(new CanHelpWithTaskPredicate(Index.fromOneBased(1)));","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"        if (predicate instanceof CanHelpWithTaskPredicate) {","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"            CanHelpWithTaskPredicate taskPredicate \u003d (CanHelpWithTaskPredicate) predicate;","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"            List\u003cTask\u003e lastShownList \u003d model.getSortedTaskList();","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"            assert(taskPredicate.getTaskIndex().getZeroBased() \u003e\u003d 0);","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"            if (taskPredicate.getTaskIndex().getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"            }","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"                || (other instanceof FindContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"                \u0026\u0026 predicate.equals(((FindContactCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JonLamy":30,"songivan00":9,"-":24}},{"path":"src/main/java/seedu/codeconnect/logic/commands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskContainsModulesPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":" * Finds and lists all tasks in the TaskList whose description contains any of the argument keywords.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks in the TaskList whose description \"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"            + \"contains the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"            + \"Parameters: {field_prefix + keyword} ...\\n\"","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/ lecture 20\";","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    private final Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    public FindTaskCommand(TaskContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    public FindTaskCommand(TaskContainsModulesPredicate predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getSortedTaskList().size()), true);","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"                || (other instanceof FindTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":1,"songivan00":7,"danzzzerl":42}},{"path":"src/main/java/seedu/codeconnect/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":2,"-":19}},{"path":"src/main/java/seedu/codeconnect/logic/commands/ListContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"public class ListContactCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"    public static final String COMMAND_WORD \u003d \"listc\";","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":5,"-":18}},{"path":"src/main/java/seedu/codeconnect/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":" * Lists all tasks in the task list to the user.","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks %s \";","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"            + \": Lists all tasks in order of most recent task added.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"            + COMMAND_WORD","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"            + \" time: Lists all tasks in order of task with earliest deadline.\";","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    private final Comparator\u003cTask\u003e comparator;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    public ListTaskCommand(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        model.updateSortedTaskList(comparator);","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, comparator.toString()), true);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":34,"songivan00":4}},{"path":"src/main/java/seedu/codeconnect/logic/commands/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Status;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" * Marks a task as done.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"            + \": Marks the task identified by the index number used in the displayed task list as completed.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"            + \"Parameters: {task_index} (must be a positive integer)\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Task marked as completed: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_TASK_ALREADY_COMPLETED \u003d \"This task is already marked as completed.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    public MarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getSortedTaskList();","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"        assert(targetIndex.getZeroBased() \u003e\u003d 0);","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        if (taskToMark.isTaskComplete()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"            throw new CommandException(MESSAGE_TASK_ALREADY_COMPLETED);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        Task markedTask \u003d createMarkedTask(taskToMark);","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        model.setTask(taskToMark, markedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, markedTask), true);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"     * Creates and returns a {@code Task} with the status of {@code taskToMark} set to complete.","lastModifiedDate":"2022-11-03"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"    private static Task createMarkedTask(Task taskToMark) {","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"        assert taskToMark !\u003d null;","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        TaskName name \u003d taskToMark.getName();","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        Module module \u003d taskToMark.getModule();","lastModifiedDate":"2022-11-03"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"        Deadline deadline \u003d taskToMark.getDeadline();","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"        Status updatedStatus \u003d new Status(true);","lastModifiedDate":"2022-11-03"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"        return new Task(name, module, deadline, updatedStatus);","lastModifiedDate":"2022-11-03"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"                || (other instanceof MarkTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"                \u0026\u0026 targetIndex.equals(((MarkTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":66,"JonLamy":2,"songivan00":11}},{"path":"src/main/java/seedu/codeconnect/logic/commands/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Status;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" * Unmarks a task as not done.","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"            + \": Unmarks the task identified by the index number used in the displayed task list as not complete.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"            + \"Parameters: {task_index} (must be a positive integer)\\n\"","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Task unmarked as not complete: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_TASK_ALREADY_NOT_COMPLETED \u003d \"This task is already unmarked as not complete.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    public UnmarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getSortedTaskList();","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"        assert(targetIndex.getZeroBased() \u003e\u003d 0);","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        Task taskToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        if (!taskToUnmark.isTaskComplete()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"            throw new CommandException(MESSAGE_TASK_ALREADY_NOT_COMPLETED);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        Task unmarkedTask \u003d createUnmarkedTask(taskToUnmark);","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        model.setTask(taskToUnmark, unmarkedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask), true);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"     * Creates and returns a {@code Task} with the status of {@code taskToUnmark} set to incomplete.","lastModifiedDate":"2022-11-03"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"    private static Task createUnmarkedTask(Task taskToUnmark) {","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"        assert taskToUnmark !\u003d null;","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        TaskName name \u003d taskToUnmark.getName();","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        Module module \u003d taskToUnmark.getModule();","lastModifiedDate":"2022-11-03"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"        Deadline deadline \u003d taskToUnmark.getDeadline();","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"        Status updatedStatus \u003d new Status(false);","lastModifiedDate":"2022-11-03"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"        return new Task(name, module, deadline, updatedStatus);","lastModifiedDate":"2022-11-03"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"                || (other instanceof UnmarkTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"                \u0026\u0026 targetIndex.equals(((UnmarkTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":66,"JonLamy":2,"songivan00":11}},{"path":"src/main/java/seedu/codeconnect/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands.exceptions;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"songivan00":1,"-":16}},{"path":"src/main/java/seedu/codeconnect/logic/parser/AddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.AddContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Address;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Github;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Telegram;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"public class AddContactCommandParser implements Parser\u003cAddContactCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"    public AddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"                        PREFIX_MODULE, PREFIX_GITHUB, PREFIX_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValueOptional(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValueOptional(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"        Set\u003cModule\u003e moduleList \u003d ParserUtil.parseModules(argMultimap.getAllValues(PREFIX_MODULE));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"        Github gitHubProfile \u003d ParserUtil.parseGithub(argMultimap.getValueOptional(PREFIX_GITHUB).get());","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"songivan00"},"content":"        Telegram telegramUsername \u003d ParserUtil.parseTelegram(argMultimap.getValueOptional(PREFIX_TELEGRAM).get());","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, moduleList, gitHubProfile, telegramUsername);","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"        return new AddContactCommand(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"JonLamy":1,"songivan00":31,"danzzzerl":2,"-":36}},{"path":"src/main/java/seedu/codeconnect/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.ArgumentMultimap.DOES_NOT_EXIST;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Status;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DEADLINE, PREFIX_MODULE);","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DEADLINE)","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        TaskName name \u003d ParserUtil.parseTaskName(argMultimap.getPreamble());","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        Deadline deadline \u003d ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"        String moduleString \u003d argMultimap.getValue(PREFIX_MODULE).orElse(null);","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        Module module \u003d moduleString !\u003d null","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"                ? ParserUtil.parseModule(moduleString)","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"                : new Module(DOES_NOT_EXIST);","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        Status status \u003d new Status(false);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"        Task task \u003d new Task(name, module, deadline, status);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"parnikkapore":43,"songivan00":12,"danzzzerl":3}},{"path":"src/main/java/seedu/codeconnect/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"    public static final String DOES_NOT_EXIST \u003d \"-\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"     * Returns the last value of {@code prefix} for optional fields, else return \"-\".","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"    public Optional\u003cString\u003e getValueOptional(Prefix prefix) {","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"        return values.isEmpty() ? Optional.of(DOES_NOT_EXIST) : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"songivan00":10,"danzzzerl":1,"-":59}},{"path":"src/main/java/seedu/codeconnect/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"songivan00":1,"-":147}},{"path":"src/main/java/seedu/codeconnect/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"by/\");","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"    public static final Prefix PREFIX_TASK \u003d new Prefix(\"ts/\");","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public static final Prefix PREFIX_GITHUB \u003d new Prefix(\"gh/\");","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"tele/\");","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"parnikkapore":2,"JonLamy":1,"songivan00":1,"danzzzerl":2,"-":13}},{"path":"src/main/java/seedu/codeconnect/logic/parser/CodeConnectParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.AddContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.CleanTasksCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.ClearCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.Command;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.ExitCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.FindContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.HelpCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.ListContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"public class CodeConnectParser {","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    private static final String SAVEME_COMMAND_WORD \u003d \"saveme\";","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"        case AddContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"            return new AddContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"        case EditContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"songivan00"},"content":"            return new EditContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"songivan00"},"content":"        case DeleteContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"songivan00"},"content":"            return new DeleteContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"JonLamy"},"content":"        case FindContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"JonLamy"},"content":"            return new FindContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"        case SAVEME_COMMAND_WORD:","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"JonLamy"},"content":"            return FindContactCommand.withoutArgs();","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"songivan00"},"content":"        case ListContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"songivan00"},"content":"            return new ListContactCommand();","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"songivan00"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"JonLamy"},"content":"        case CleanTasksCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"JonLamy"},"content":"            return new CleanTasksCommand();","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"            return new MarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"            return new UnmarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"            return new ListTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"angkl0":9,"parnikkapore":6,"JonLamy":7,"songivan00":33,"danzzzerl":4,"-":53}},{"path":"src/main/java/seedu/codeconnect/logic/parser/DeleteContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"public class DeleteContactCommandParser implements Parser\u003cDeleteContactCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"    public DeleteContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"            return new DeleteContactCommand(index);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"songivan00":9,"-":20}},{"path":"src/main/java/seedu/codeconnect/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"parnikkapore":24,"songivan00":5}},{"path":"src/main/java/seedu/codeconnect/logic/parser/EditContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"public class EditContactCommandParser implements Parser\u003cEditContactCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"    public EditContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"                        PREFIX_MODULE, PREFIX_GITHUB, PREFIX_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"                    EditContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"        parseModulesForEdit(argMultimap.getAllValues(PREFIX_MODULE)).ifPresent(editPersonDescriptor::setMods);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB).isPresent()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"            editPersonDescriptor.setGithub(ParserUtil.parseGithub(argMultimap.getValue(PREFIX_GITHUB).get()));","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"            editPersonDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"            throw new ParseException(EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"songivan00"},"content":"        return new EditContactCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"JonLamy"},"content":"     * Parses {@code Collection\u003cString\u003e modules} into a {@code Set\u003cModule\u003e} if {@code modules} is non-empty.","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"JonLamy"},"content":"     * If {@code modules} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"JonLamy"},"content":"     * {@code Set\u003cModule\u003e} containing zero modules.","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"JonLamy"},"content":"    private Optional\u003cSet\u003cModule\u003e\u003e parseModulesForEdit(Collection\u003cString\u003e modules) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"JonLamy"},"content":"        assert modules !\u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"JonLamy"},"content":"        if (modules.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"JonLamy"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"JonLamy"},"content":"        Collection\u003cString\u003e moduleSet \u003d modules.size() \u003d\u003d 1 \u0026\u0026 modules.contains(\"\") ? Collections.emptySet() : modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"JonLamy"},"content":"        return Optional.of(ParserUtil.parseModules(moduleSet));","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JonLamy":16,"songivan00":23,"danzzzerl":7,"-":64}},{"path":"src/main/java/seedu/codeconnect/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":" * Parses input arguments and creates a new EditTaskCommand object","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MODULE, PREFIX_DEADLINE);","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"        Index index;","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"        try {","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"                    EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"            editTaskDescriptor.setName(ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"        if (argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"            editTaskDescriptor.setModule(ParserUtil.parseModule(argMultimap.getValue(PREFIX_MODULE).get()));","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"            editTaskDescriptor.setDeadline(ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"songivan00":53}},{"path":"src/main/java/seedu/codeconnect/logic/parser/FindContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.FindContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.CanHelpWithTaskPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.ModuleTakenPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":" * Parses input arguments and creates a new FindContactCommand object","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"public class FindContactCommandParser implements Parser\u003cFindContactCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"     * Parses the given {@code String} of arguments in the context of the FindContactCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"     * and returns a FindContactCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"    public FindContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MODULE, PREFIX_TASK);","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"        Prefix searchPrefix \u003d getSearchPrefix(argMultimap);","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"        if (searchPrefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"            List\u003cString\u003e strings \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"            List\u003cString\u003e keywordsSpaceSeparated \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"            for (String string : strings) {","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"                for (String keyword : string.split(\"\\\\s+\")) {","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"                    keywordsSpaceSeparated.add(ParserUtil.parseName(keyword).toString());","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"                }","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"            assert(!keywordsSpaceSeparated.isEmpty());","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"            return new FindContactCommand(new NameContainsKeywordsPredicate(keywordsSpaceSeparated));","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"        } else if (searchPrefix.equals(PREFIX_MODULE)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"            Set\u003cModule\u003e moduleList \u003d ParserUtil.parseModules(argMultimap.getAllValues(PREFIX_MODULE));","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"            List\u003cString\u003e moduleNames \u003d moduleList.stream().map(module -\u003e module.toString())","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"JonLamy"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"            List\u003cString\u003e keywordsSpaceSeparated \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"            for (String string : moduleNames) {","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"JonLamy"},"content":"                for (String keyword : string.split(\"\\\\s+\")) {","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"                    keywordsSpaceSeparated.add(keyword);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"                }","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"            assert(!keywordsSpaceSeparated.isEmpty());","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"            return new FindContactCommand(new ModuleTakenPredicate(keywordsSpaceSeparated));","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"        } else if (searchPrefix.equals(PREFIX_TASK)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"            Index taskIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK).get());","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"            assert(taskIndex.getZeroBased() \u003e\u003d 0);","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"JonLamy"},"content":"            return new FindContactCommand(new CanHelpWithTaskPredicate(taskIndex));","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"JonLamy"},"content":"        } else {","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"JonLamy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"     * Helper method used in parse method.","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"     * @param argumentMultimap the input to get the prefix from","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"     * @return the prefix from the user input","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"     * @throws ParseException if the format is wrong","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"JonLamy"},"content":"    private static Prefix getSearchPrefix(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"JonLamy"},"content":"        List\u003cPrefix\u003e searchablePrefixes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"JonLamy"},"content":"        searchablePrefixes.add(PREFIX_NAME);","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"JonLamy"},"content":"        searchablePrefixes.add(PREFIX_MODULE);","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"JonLamy"},"content":"        searchablePrefixes.add(PREFIX_TASK);","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"JonLamy"},"content":"        List\u003cPrefix\u003e prefixesInArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"JonLamy"},"content":"        for (Prefix prefix : searchablePrefixes) {","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"JonLamy"},"content":"            if (!argumentMultimap.getAllValues(prefix).isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"JonLamy"},"content":"                prefixesInArgs.add(prefix);","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"JonLamy"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"JonLamy"},"content":"        // if number of prefixes in arguments is not 1, the arguments are invalid","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"JonLamy"},"content":"        if (prefixesInArgs.size() !\u003d 1) {","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"JonLamy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"JonLamy"},"content":"        return prefixesInArgs.get(0);","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"angkl0":5,"JonLamy":80,"songivan00":12,"danzzzerl":6}},{"path":"src/main/java/seedu/codeconnect/logic/parser/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import java.util.List;","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskContainsModulesPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MODULE);","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        Prefix searchPrefix \u003d getSearchPrefix(argMultimap);","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"        if (searchPrefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"            List\u003cString\u003e strings \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"            List\u003cString\u003e keywordsSpaceSeparated \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"            for (String string : strings) {","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"                for (String keyword : string.split(\"\\\\s+\")) {","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"                    keywordsSpaceSeparated.add(ParserUtil.parseName(keyword).toString());","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"            assert(!keywordsSpaceSeparated.isEmpty());","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"            return new FindTaskCommand(new TaskContainsKeywordsPredicate(keywordsSpaceSeparated));","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"        } else if (searchPrefix.equals(PREFIX_MODULE)) {","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"            Set\u003cModule\u003e moduleList \u003d ParserUtil.parseModules(argMultimap.getAllValues(PREFIX_MODULE));","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"            List\u003cString\u003e moduleNames \u003d moduleList.stream().map(module -\u003e module.toString())","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"            List\u003cString\u003e keywordsSpaceSeparated \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"JonLamy"},"content":"            for (String string : moduleNames) {","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"                for (String keyword : string.split(\"\\\\s+\")) {","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"                    keywordsSpaceSeparated.add(ParserUtil.parseModule(keyword).toString());","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"            assert(!keywordsSpaceSeparated.isEmpty());","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"            return new FindTaskCommand(new TaskContainsModulesPredicate(keywordsSpaceSeparated));","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"     * Helper method used in parse method.","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"     * @param argumentMultimap the input to get the prefix from","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"     * @return the prefix from the user input","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"     * @throws ParseException if the format is wrong","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"    private static Prefix getSearchPrefix(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"        List\u003cPrefix\u003e searchablePrefixes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"        searchablePrefixes.add(PREFIX_NAME);","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"        searchablePrefixes.add(PREFIX_MODULE);","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"        searchablePrefixes.add(PREFIX_TASK);","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"danzzzerl"},"content":"        List\u003cPrefix\u003e prefixesInArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"danzzzerl"},"content":"        for (Prefix prefix : searchablePrefixes) {","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"danzzzerl"},"content":"            if (!argumentMultimap.getAllValues(prefix).isEmpty()) {","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"danzzzerl"},"content":"                prefixesInArgs.add(prefix);","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"danzzzerl"},"content":"        // if number of prefixes in arguments is not 1, the arguments are invalid","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"danzzzerl"},"content":"        if (prefixesInArgs.size() !\u003d 1) {","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"danzzzerl"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"danzzzerl"},"content":"        return prefixesInArgs.get(0);","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"parnikkapore":1,"JonLamy":12,"songivan00":10,"danzzzerl":74}},{"path":"src/main/java/seedu/codeconnect/logic/parser/ListTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.DeadlineComparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.DefaultComparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":" * Parses input arguments and creates a new ListTaskCommand object","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"public class ListTaskCommandParser implements Parser\u003cListTaskCommand\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"    private static final String LIST_BY_DEADLINE_KEYWORD \u003d \"time\";","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"     * Parses the given {@code String} of arguments in the context of the ListTaskCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"     * and returns a ListTaskCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    public ListTaskCommand parse(String args) {","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"        if (trimmedArgs.equals(LIST_BY_DEADLINE_KEYWORD)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"            return new ListTaskCommand(new DeadlineComparator());","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"        } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"            return new ListTaskCommand(new DefaultComparator());","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"angkl0":22,"songivan00":4}},{"path":"src/main/java/seedu/codeconnect/logic/parser/MarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":" * Parses input arguments and creates a new MarkTaskCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"public class MarkTaskCommandParser implements Parser\u003cMarkTaskCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTaskCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"     * and returns a MarkTaskCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    public MarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"            return new MarkTaskCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":24,"songivan00":5}},{"path":"src/main/java/seedu/codeconnect/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.Command;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"songivan00":3,"-":13}},{"path":"src/main/java/seedu/codeconnect/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.ArgumentMultimap.DOES_NOT_EXIST;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.NaturalDateParser;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.StringUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Address;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Github;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Telegram;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"JonLamy"},"content":"     * Parses a {@code String module} into a {@code Module}.","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"JonLamy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"JonLamy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"JonLamy"},"content":"     * @throws ParseException if the given {@code module} is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"JonLamy"},"content":"    public static Module parseModule(String module) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"JonLamy"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"JonLamy"},"content":"        String trimmedModule \u003d module.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"parnikkapore"},"content":"        if (trimmedModule.equals(DOES_NOT_EXIST) || !Module.isValidModule(trimmedModule)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":145,"author":{"gitId":"JonLamy"},"content":"            throw new ParseException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"JonLamy"},"content":"        return new Module(trimmedModule);","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"parnikkapore"},"content":"     * Parses a collection of whitespace-separated module strings into a Set of Modules.","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"songivan00"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"songivan00"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"songivan00"},"content":"     * @throws ParseException if the given {@code mods} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"JonLamy"},"content":"    public static Set\u003cModule\u003e parseModules(Collection\u003cString\u003e mods) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"songivan00"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"JonLamy"},"content":"        final Set\u003cModule\u003e moduleSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"parnikkapore"},"content":"        final List\u003cString\u003e moduleStringSet \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"parnikkapore"},"content":"        for (String moduleNames: mods) {","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"parnikkapore"},"content":"            moduleStringSet.addAll(List.of(moduleNames.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"parnikkapore"},"content":"        for (String moduleName: moduleStringSet) {","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"JonLamy"},"content":"            moduleSet.add(parseModule(moduleName));","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"JonLamy"},"content":"        return moduleSet;","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":170,"author":{"gitId":"parnikkapore"},"content":"     * Parses a {@code String name} into a {@code TaskName}.","lastModifiedDate":"2022-10-07"},{"lineNumber":171,"author":{"gitId":"parnikkapore"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-07"},{"lineNumber":172,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":173,"author":{"gitId":"parnikkapore"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-10-07"},{"lineNumber":174,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":175,"author":{"gitId":"parnikkapore"},"content":"    public static TaskName parseTaskName(String name) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":176,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-07"},{"lineNumber":177,"author":{"gitId":"parnikkapore"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"parnikkapore"},"content":"        if (!TaskName.isValidName(trimmedName)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":179,"author":{"gitId":"parnikkapore"},"content":"            throw new ParseException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":180,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":181,"author":{"gitId":"parnikkapore"},"content":"        return new TaskName(trimmedName);","lastModifiedDate":"2022-10-07"},{"lineNumber":182,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":183,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":184,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":185,"author":{"gitId":"parnikkapore"},"content":"     * Parses a human-given {@code String deadline} into a {@code Deadline}.","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"parnikkapore"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":188,"author":{"gitId":"parnikkapore"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"parnikkapore"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-10-07"},{"lineNumber":192,"author":{"gitId":"parnikkapore"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2022-10-07"},{"lineNumber":193,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":194,"author":{"gitId":"parnikkapore"},"content":"        LocalDateTime parsedDeadline;","lastModifiedDate":"2022-10-23"},{"lineNumber":195,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-10-23"},{"lineNumber":196,"author":{"gitId":"parnikkapore"},"content":"            parsedDeadline \u003d NaturalDateParser.parse(trimmedDeadline);","lastModifiedDate":"2022-10-23"},{"lineNumber":197,"author":{"gitId":"parnikkapore"},"content":"        } catch (NaturalDateParser.DateTimeNotFoundException | NaturalDateParser.ParseFailureException e) {","lastModifiedDate":"2022-10-30"},{"lineNumber":198,"author":{"gitId":"parnikkapore"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":199,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":200,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":201,"author":{"gitId":"parnikkapore"},"content":"        return new Deadline(parsedDeadline);","lastModifiedDate":"2022-10-23"},{"lineNumber":202,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":203,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":204,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":205,"author":{"gitId":"danzzzerl"},"content":"     * Parses a {@code String github} into an {@code github}.","lastModifiedDate":"2022-10-24"},{"lineNumber":206,"author":{"gitId":"danzzzerl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-24"},{"lineNumber":207,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":208,"author":{"gitId":"danzzzerl"},"content":"     * @throws ParseException if the given {@code github} is invalid.","lastModifiedDate":"2022-10-24"},{"lineNumber":209,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":210,"author":{"gitId":"danzzzerl"},"content":"    public static Github parseGithub(String gh) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":211,"author":{"gitId":"danzzzerl"},"content":"        requireNonNull(gh);","lastModifiedDate":"2022-10-24"},{"lineNumber":212,"author":{"gitId":"danzzzerl"},"content":"        String trimmedGh \u003d gh.trim();","lastModifiedDate":"2022-10-24"},{"lineNumber":213,"author":{"gitId":"danzzzerl"},"content":"        if (!Github.isValidGh(trimmedGh)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":214,"author":{"gitId":"danzzzerl"},"content":"            throw new ParseException(Github.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":215,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":216,"author":{"gitId":"danzzzerl"},"content":"        return new Github(trimmedGh);","lastModifiedDate":"2022-10-24"},{"lineNumber":217,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":218,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":219,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":220,"author":{"gitId":"danzzzerl"},"content":"     * Parses a {@code String Telegram} into an {@code Telegram}.","lastModifiedDate":"2022-10-24"},{"lineNumber":221,"author":{"gitId":"danzzzerl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-24"},{"lineNumber":222,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":223,"author":{"gitId":"danzzzerl"},"content":"     * @throws ParseException if the given {@code Telegram} is invalid.","lastModifiedDate":"2022-10-24"},{"lineNumber":224,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":225,"author":{"gitId":"danzzzerl"},"content":"    public static Telegram parseTelegram(String telehandle) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":226,"author":{"gitId":"danzzzerl"},"content":"        requireNonNull(telehandle);","lastModifiedDate":"2022-10-24"},{"lineNumber":227,"author":{"gitId":"danzzzerl"},"content":"        String trimmedTele \u003d telehandle.trim();","lastModifiedDate":"2022-10-24"},{"lineNumber":228,"author":{"gitId":"danzzzerl"},"content":"        if (!Telegram.isValidTele(trimmedTele)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":229,"author":{"gitId":"danzzzerl"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":230,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":231,"author":{"gitId":"danzzzerl"},"content":"        return new Telegram(trimmedTele);","lastModifiedDate":"2022-10-24"},{"lineNumber":232,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"parnikkapore":45,"JonLamy":18,"songivan00":24,"danzzzerl":31,"-":115}},{"path":"src/main/java/seedu/codeconnect/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"songivan00":1,"-":38}},{"path":"src/main/java/seedu/codeconnect/logic/parser/UnmarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":" * Parses input arguments and creates a new UnmarkTaskCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"public class UnmarkTaskCommandParser implements Parser\u003cUnmarkTaskCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkTaskCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"     * and returns a UnmarkTaskCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    public UnmarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"            return new UnmarkTaskCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":25,"songivan00":5}},{"path":"src/main/java/seedu/codeconnect/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser.exceptions;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"songivan00":2,"-":15}},{"path":"src/main/java/seedu/codeconnect/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.UniquePersonList;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":3,"-":117}},{"path":"src/main/java/seedu/codeconnect/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"     * Returns the user prefs\u0027 task list file path.","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"     * Sets the user prefs\u0027 task list file path.","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"    void setTaskListFilePath(Path taskListFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"     * Replaces task list data with the data in {@code addressBook}.","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"    void setTaskList(ReadOnlyTaskList taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"songivan00"},"content":"    /** Returns the TaskList */","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"JonLamy"},"content":"     * Deletes tasks that are marked as complete.","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"JonLamy"},"content":"    void deleteCompletedTasks();","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"parnikkapore"},"content":"     * Adds the given task.","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"     * {@code task} must not already exist in the task list.","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"parnikkapore"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"parnikkapore"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":139,"author":{"gitId":"angkl0"},"content":"     * Returns index of specified task in the task list.","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"angkl0"},"content":"    int indexOf(Task task);","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"angkl0"},"content":"    /** Returns an unmodifiable view of the sorted task list */","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"angkl0"},"content":"    ObservableList\u003cTask\u003e getSortedTaskList();","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"songivan00"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"songivan00"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"songivan00"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"angkl0"},"content":"     * Updates the comparartor of the sorted task list to sort by the given {@code comparator}.","lastModifiedDate":"2022-11-03"},{"lineNumber":154,"author":{"gitId":"angkl0"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":156,"author":{"gitId":"angkl0"},"content":"    void updateSortedTaskList(Comparator\u003cTask\u003e comparator);","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"angkl0":15,"parnikkapore":40,"JonLamy":5,"songivan00":13,"-":84}},{"path":"src/main/java/seedu/codeconnect/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"import java.util.List;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.CanHelpWithTaskPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"import seedu.codeconnect.model.task.DeadlineComparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.DefaultComparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    private final SortedList\u003cTask\u003e sortedTasks;","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyTaskList taskList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(addressBook, taskList, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"                + \" and task list: \" + taskList","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"                + \" and user prefs: \" + userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"        this.taskList \u003d new TaskList(taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskList.getTaskList());","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"        sortedTasks \u003d new SortedList\u003c\u003e(filteredTasks, new DefaultComparator(this.taskList));","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"songivan00"},"content":"        this(new AddressBook(), new TaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"        return userPrefs.getTaskListFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"        userPrefs.setTaskListFilePath(taskListFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":154,"author":{"gitId":"JonLamy"},"content":"        // If the predicate is a `CanHelpWithTaskPredicate`,","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"JonLamy"},"content":"        // get the current task\u0027s module and add it to the predicate.","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"JonLamy"},"content":"        if (predicate instanceof CanHelpWithTaskPredicate) {","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"JonLamy"},"content":"            List\u003cTask\u003e lastShownList \u003d getSortedTaskList();","lastModifiedDate":"2022-11-01"},{"lineNumber":158,"author":{"gitId":"JonLamy"},"content":"            CanHelpWithTaskPredicate taskPredicate \u003d (CanHelpWithTaskPredicate) predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"JonLamy"},"content":"            int taskIndex \u003d taskPredicate.getTaskIndex().getZeroBased();","lastModifiedDate":"2022-11-01"},{"lineNumber":160,"author":{"gitId":"JonLamy"},"content":"            Task taskInQuestion \u003d lastShownList.get(taskIndex);","lastModifiedDate":"2022-11-01"},{"lineNumber":161,"author":{"gitId":"JonLamy"},"content":"            taskPredicate.setTask(taskInQuestion);","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"JonLamy"},"content":"            filteredPersons.setPredicate(taskPredicate);","lastModifiedDate":"2022-11-01"},{"lineNumber":163,"author":{"gitId":"JonLamy"},"content":"        } else {","lastModifiedDate":"2022-11-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":168,"author":{"gitId":"parnikkapore"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"parnikkapore"},"content":"    public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"parnikkapore"},"content":"        this.taskList.resetData(taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"parnikkapore"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"parnikkapore"},"content":"        return taskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":179,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":180,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":181,"author":{"gitId":"parnikkapore"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-04"},{"lineNumber":182,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":183,"author":{"gitId":"parnikkapore"},"content":"        return taskList.hasTask(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":184,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":185,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":186,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":187,"author":{"gitId":"parnikkapore"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-10-04"},{"lineNumber":188,"author":{"gitId":"parnikkapore"},"content":"        taskList.removeTask(target);","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":190,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":191,"author":{"gitId":"JonLamy"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":192,"author":{"gitId":"JonLamy"},"content":"    public void deleteCompletedTasks() {","lastModifiedDate":"2022-10-25"},{"lineNumber":193,"author":{"gitId":"JonLamy"},"content":"        taskList.removeCompletedTasks();","lastModifiedDate":"2022-10-25"},{"lineNumber":194,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":195,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":196,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":197,"author":{"gitId":"parnikkapore"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-04"},{"lineNumber":198,"author":{"gitId":"parnikkapore"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":199,"author":{"gitId":"parnikkapore"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-04"},{"lineNumber":200,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":201,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":202,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":203,"author":{"gitId":"parnikkapore"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-04"},{"lineNumber":204,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-04"},{"lineNumber":205,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":206,"author":{"gitId":"parnikkapore"},"content":"        taskList.setTask(target, editedTask);","lastModifiedDate":"2022-10-04"},{"lineNumber":207,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":208,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":209,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"angkl0"},"content":"    public int indexOf(Task task) {","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"angkl0"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":212,"author":{"gitId":"angkl0"},"content":"        assert hasTask(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":213,"author":{"gitId":"angkl0"},"content":"        return taskList.indexOf(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":214,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":215,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":216,"author":{"gitId":"angkl0"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sorted and Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":217,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":218,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":219,"author":{"gitId":"parnikkapore"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-10-04"},{"lineNumber":220,"author":{"gitId":"parnikkapore"},"content":"     * {@code versionedTaskList}","lastModifiedDate":"2022-10-04"},{"lineNumber":221,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":222,"author":{"gitId":"songivan00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":223,"author":{"gitId":"angkl0"},"content":"    public ObservableList\u003cTask\u003e getSortedTaskList() {","lastModifiedDate":"2022-10-24"},{"lineNumber":224,"author":{"gitId":"angkl0"},"content":"        return sortedTasks;","lastModifiedDate":"2022-10-24"},{"lineNumber":225,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":226,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":227,"author":{"gitId":"songivan00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":228,"author":{"gitId":"songivan00"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":229,"author":{"gitId":"songivan00"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":230,"author":{"gitId":"songivan00"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":231,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":232,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":233,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":234,"author":{"gitId":"angkl0"},"content":"    public void updateSortedTaskList(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2022-10-24"},{"lineNumber":235,"author":{"gitId":"angkl0"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-10-25"},{"lineNumber":236,"author":{"gitId":"angkl0"},"content":"        assert comparator instanceof DefaultComparator || comparator instanceof DeadlineComparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":237,"author":{"gitId":"angkl0"},"content":"        if (comparator instanceof DefaultComparator) {","lastModifiedDate":"2022-10-25"},{"lineNumber":238,"author":{"gitId":"angkl0"},"content":"            sortedTasks.setComparator(new DefaultComparator(taskList));","lastModifiedDate":"2022-10-25"},{"lineNumber":239,"author":{"gitId":"angkl0"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":240,"author":{"gitId":"angkl0"},"content":"            sortedTasks.setComparator(new DeadlineComparator(taskList));","lastModifiedDate":"2022-11-07"},{"lineNumber":241,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":242,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":243,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":244,"author":{"gitId":"parnikkapore"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d General operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":245,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":261,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 taskList.equals(other.taskList)","lastModifiedDate":"2022-10-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":263,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-04"},{"lineNumber":264,"author":{"gitId":"angkl0"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks)","lastModifiedDate":"2022-10-25"},{"lineNumber":265,"author":{"gitId":"angkl0"},"content":"                \u0026\u0026 sortedTasks.equals(other.sortedTasks);","lastModifiedDate":"2022-10-25"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"angkl0":31,"parnikkapore":57,"JonLamy":17,"songivan00":24,"-":139}},{"path":"src/main/java/seedu/codeconnect/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":2,"-":15}},{"path":"src/main/java/seedu/codeconnect/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":15,"songivan00":2}},{"path":"src/main/java/seedu/codeconnect/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"parnikkapore":1,"songivan00":2,"-":14}},{"path":"src/main/java/seedu/codeconnect/model/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.UniqueTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" * Wraps all date at the task list level","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"public class TaskList implements ReadOnlyTaskList {","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    /*","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    public TaskList() {}","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"     * Creates an AddressBook using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"    public TaskList(ReadOnlyTaskList toBeCopied) {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        this();","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"    //// task-level operations","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"        tasks.add(p);","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"        tasks.remove(key);","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"JonLamy"},"content":"     * Removes tasks in the list that are already completed.","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"JonLamy"},"content":"    public void removeCompletedTasks() {","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"JonLamy"},"content":"        List\u003cTask\u003e completedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"JonLamy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"JonLamy"},"content":"            if (task.isTaskComplete()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"JonLamy"},"content":"                completedTasks.add(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"JonLamy"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"JonLamy"},"content":"        for (Task task : completedTasks) {","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"JonLamy"},"content":"            tasks.remove(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"angkl0"},"content":"     * Returns index of specified task in the list.","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"angkl0"},"content":"    public int indexOf(Task task) {","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"angkl0"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"angkl0"},"content":"        assert hasTask(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"angkl0"},"content":"        return tasks.indexOf(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"parnikkapore"},"content":"    //// util methods","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"parnikkapore"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"parnikkapore"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"parnikkapore"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 tasks.equals(((TaskList) other).tasks));","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"parnikkapore"},"content":"        return tasks.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"angkl0":9,"parnikkapore":117,"JonLamy":18,"songivan00":3}},{"path":"src/main/java/seedu/codeconnect/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"contacts.json\");","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    private Path taskListFilePath \u003d Paths.get(\"data\" , \"tasks.json\");","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        setTaskListFilePath(newUserPrefs.getTaskListFilePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        return taskListFilePath;","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"        this.taskListFilePath \u003d taskListFilePath;","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 taskListFilePath.equals(o.taskListFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, taskListFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"        sb.append(\"\\nLocal address book data file location : \" + addressBookFilePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"        sb.append(\"\\nLocal task list data file locaton : \" + taskListFilePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"angkl0":3,"parnikkapore":14,"songivan00":2,"-":81}},{"path":"src/main/java/seedu/codeconnect/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.module;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.ArgumentMultimap.DOES_NOT_EXIST;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task\u0027s module code in the task list.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModule(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"public class Module {","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module codes should be alphanumeric and should not be blank.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    /*","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"    public final String moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     * Constructs a {@code Module}.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"     * @param module A valid module code.","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    public Module(String module) {","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        checkArgument(isValidModule(module), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        this.moduleName \u003d module;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if a given string is a valid module code.","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    public static boolean isValidModule(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        if (Objects.equals(test, DOES_NOT_EXIST)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"            return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"        return moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof Module // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"                \u0026\u0026 moduleName.equalsIgnoreCase(((Module) other).moduleName)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"        return moduleName.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":51,"JonLamy":6,"songivan00":3,"danzzzerl":4}},{"path":"src/main/java/seedu/codeconnect/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.ArgumentMultimap.DOES_NOT_EXIST;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"        if (test.equals(DOES_NOT_EXIST)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"            return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":6,"-":55}},{"path":"src/main/java/seedu/codeconnect/model/person/CanHelpWithTaskPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":" * Tests if a {@code Person}\u0027s {@code Module} matches that of the given task.","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"public class CanHelpWithTaskPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"    private final Index taskIndex;","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"    private Task task;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"    public CanHelpWithTaskPredicate(Index taskIndex) {","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"    public CanHelpWithTaskPredicate(int taskIndex) {","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"        this.taskIndex \u003d Index.fromOneBased(taskIndex);","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"     * Builds a {@code CanHelpWithTaskPredicate} using a given task instead of its index.","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"     * @param task {@code Task} to test against a {@code Person} to determine if modules match.","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"     * @return {@code Predicate} to execute on the person.","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"    public static CanHelpWithTaskPredicate withTask(Task task) {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"        CanHelpWithTaskPredicate predicate \u003d new CanHelpWithTaskPredicate(Index.fromOneBased(1));","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        predicate.setTask(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"        return predicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"    public Index getTaskIndex() {","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"        return taskIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"    public void setTask(Task task) {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"        Module taskModule \u003d task.getModule();","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"        Set\u003cModule\u003e personMods \u003d person.getModules();","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"        for (Module takenModule : personMods) {","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"            if (taskModule.equals(takenModule)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"                return true;","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"        return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"        return other \u003d\u003d this // short circuit if same instance","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"JonLamy"},"content":"                || (other instanceof CanHelpWithTaskPredicate","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"                \u0026\u0026 taskIndex.equals(((CanHelpWithTaskPredicate) other).taskIndex));","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"JonLamy":61,"songivan00":5}},{"path":"src/main/java/seedu/codeconnect/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.ArgumentMultimap.DOES_NOT_EXIST;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"        if (test.equals(DOES_NOT_EXIST)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"            return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":6,"-":69}},{"path":"src/main/java/seedu/codeconnect/model/person/Github.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.ArgumentMultimap.DOES_NOT_EXIST;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":" * Represents a Person\u0027s GitHub profile in the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGh(String)}","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"public class Github {","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Github profiles can take any values \"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"            + \"(whether name or link to Github profile page, and it should only have one word)\";","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    /*","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s]+\";","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    public final String value;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     * Constructs a {@code Github}.","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"     * @param gh A valid GitHub profile.","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    public Github(String gh) {","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"        requireNonNull(gh);","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"        checkArgument(isValidGh(gh), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        value \u003d gh;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"     * Returns true if a given string is a valid GitHub profile type (username or website link).","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"    public static boolean isValidGh(String test) {","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"        if (test.equals(DOES_NOT_EXIST)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"            return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"        return value;","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"                || (other instanceof Github // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 value.equals(((Github) other).value)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"songivan00":6,"danzzzerl":57}},{"path":"src/main/java/seedu/codeconnect/model/person/ModuleTakenPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":" * Tests if any of a {@code Person}\u0027s {@code Module} matches any of the keywords given.","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"public class ModuleTakenPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"    public ModuleTakenPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"        Set\u003cModule\u003e personMods \u003d person.getModules();","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"        return keywords.stream().anyMatch(keyword -\u003e personMods.stream()","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"                .anyMatch(module -\u003e module.moduleName.toUpperCase()","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"                        .contains(keyword.toUpperCase())));","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"            return true;","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        } else if (other instanceof ModuleTakenPredicate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"            Set\u003cString\u003e thisKeywordSet \u003d new HashSet\u003c\u003e(keywords);","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"            Set\u003cString\u003e otherKeywordSet \u003d new HashSet\u003c\u003e(((ModuleTakenPredicate) other).keywords);","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"            return thisKeywordSet.equals(otherKeywordSet);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"        } else {","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"            return false;","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"angkl0":6,"JonLamy":33,"songivan00":2}},{"path":"src/main/java/seedu/codeconnect/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":3,"-":57}},{"path":"src/main/java/seedu/codeconnect/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"                .anyMatch(keyword -\u003e person.getName().fullName.toUpperCase().contains(keyword.toUpperCase()));","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"angkl0":1,"songivan00":1,"-":27}},{"path":"src/main/java/seedu/codeconnect/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"    private final Set\u003cModule\u003e modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    private final Github githubProfile;","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    private final Telegram telegramUsername;","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Set\u003cModule\u003e modules,","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"                  Github githubProfile, Telegram telegramUsername) {","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"        requireAllNonNull(name, phone);","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        this.githubProfile \u003d githubProfile;","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        this.telegramUsername \u003d telegramUsername;","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"songivan00"},"content":"     * Returns an immutable module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"songivan00"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"JonLamy"},"content":"    public Set\u003cModule\u003e getModules() {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"JonLamy"},"content":"        return Collections.unmodifiableSet(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"    public Github getGithub() {","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"danzzzerl"},"content":"        return githubProfile;","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"danzzzerl"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"danzzzerl"},"content":"        return telegramUsername;","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"JonLamy"},"content":"                \u0026\u0026 otherPerson.getModules().equals(getModules())","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 otherPerson.getGithub().equals(getGithub())","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 otherPerson.getTelegram().equals(getTelegram());","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"danzzzerl"},"content":"        return Objects.hash(name, phone, email, address, tags, modules, githubProfile, telegramUsername);","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"danzzzerl"},"content":"                .append(\"\\nPhone: \")","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"danzzzerl"},"content":"                .append(\"\\nEmail: \")","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"danzzzerl"},"content":"                .append(\"\\nAddress: \")","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"danzzzerl"},"content":"            builder.append(\"\\nTags: \");","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"JonLamy"},"content":"        Set\u003cModule\u003e modules \u003d getModules();","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"JonLamy"},"content":"        if (!modules.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"danzzzerl"},"content":"            builder.append(\"\\nModules: \");","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"JonLamy"},"content":"            modules.forEach(builder::append);","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"danzzzerl"},"content":"        builder.append(\"\\nGithub profile: \")","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"danzzzerl"},"content":"                .append(getGithub())","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"songivan00"},"content":"                .append(\"\\nTelegram Username: \")","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"danzzzerl"},"content":"                .append(getTelegram());","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JonLamy":11,"songivan00":10,"danzzzerl":28,"-":112}},{"path":"src/main/java/seedu/codeconnect/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":2,"-":51}},{"path":"src/main/java/seedu/codeconnect/model/person/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.ArgumentMultimap.DOES_NOT_EXIST;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":" * Represents a Person\u0027s Telegram username in the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTele(String)}","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"public class Telegram {","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram usernames can take any values, \"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"            + \"and it should only be one word\";","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    /*","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s]+\";","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    public final String telehandle;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     * Constructs a {@code Telegram}.","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"     * @param s A valid Telegram username.","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    public Telegram(String s) {","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"        checkArgument(isValidTele(s), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        telehandle \u003d s;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"     * Returns true if a given string is a valid GitHub profile type (username or website link).","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"    public static boolean isValidTele(String test) {","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"        if (test.equals(DOES_NOT_EXIST)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"            return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"        return telehandle.equals(DOES_NOT_EXIST) ? telehandle : \"@\" + telehandle;","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"                || (other instanceof Telegram // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 telehandle.equals(((Telegram) other).telehandle)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        return telehandle.hashCode();","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"songivan00":8,"danzzzerl":55}},{"path":"src/main/java/seedu/codeconnect/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":4,"-":133}},{"path":"src/main/java/seedu/codeconnect/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person.exceptions;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"songivan00":1,"-":10}},{"path":"src/main/java/seedu/codeconnect/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person.exceptions;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"songivan00":1,"-":5}},{"path":"src/main/java/seedu/codeconnect/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"        return \u0027[\u0027 + tagName + \"] \";","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":3,"-":51}},{"path":"src/main/java/seedu/codeconnect/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task\u0027s deadline.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeadline(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"public class Deadline {","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"            \"The deadline was not understood. Perhaps enter it like \\\"2 Jan 2022 15:04\\\" or \\\"tomorrow 2pm\\\"?\";","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    //@@author parnikkapore-reused","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Date format taken from https://github.com/angkl0/ip/blob/master/src/main/java/duke/tasks/Deadline.java#L39","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // and https://github.com/angkl0/ip/blob/master/src/main/java/duke/commands/DeadlineCommand.java#L42","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter WRITE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"hh:mm a \u0027on\u0027 dd/MM/yyyy\");","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter CONSTRUCT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public final LocalDateTime deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code Deadline} from a String written in the CONSTRUCT_FORMATTER format, such as that","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * returned by deadlineString().","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param deadlineString A valid deadline string.","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Deadline(String deadlineString) {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(deadlineString);","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        checkArgument(isValidDeadline(deadlineString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        LocalDateTime newDeadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            newDeadline \u003d LocalDateTime.parse(deadlineString, CONSTRUCT_FORMATTER);","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            assert false : \"Checked deadline string should not fail to parse?\";","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            newDeadline \u003d LocalDateTime.now(); // A good enough fallback","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.deadline \u003d newDeadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a {@code Deadline} from a LocalDateTime.","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param deadline A valid deadline.","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Deadline(LocalDateTime deadline) {","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid deadline string.","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            LocalDateTime.parse(test, CONSTRUCT_FORMATTER);","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a string representation of this Deadline in a format that can be reimported using","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Deadline(String).","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @return The string representation.","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String deadlineString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return deadline.format(CONSTRUCT_FORMATTER);","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return deadline.format(WRITE_FORMATTER);","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                || (other instanceof Deadline // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u0026\u0026 deadline.equals(((Deadline) other).deadline)); // state check","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return deadline.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":17,"songivan00":2,"-":79}},{"path":"src/main/java/seedu/codeconnect/model/task/DeadlineComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":" * Compares two tasks on the basis of the task with an earlier deadline ordered in front of the other task.","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"public class DeadlineComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    private static final String COMPARE_CRITERIA \u003d \"in order of task with earliest deadline.\";","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"     * Constructs a {@code DefaultComparator} with the given tasklist.","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"     * @param taskList A valid TaskList.","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    public DeadlineComparator(TaskList taskList) {","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"     * Constructs a DefaultComparator with an empty tasklist.","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    public DeadlineComparator() {","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    public int compare(Task a, Task b) {","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"        if (a.getDeadline().deadline.isBefore(b.getDeadline().deadline)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"            return -1;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"        } else if (a.getDeadline().deadline.isAfter(b.getDeadline().deadline)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"            return 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        return new DefaultComparator(taskList).compare(a, b);","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"            return true;","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        } else if (other instanceof DeadlineComparator) { // instanceof handles nulls","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"            DeadlineComparator otherDeadlineComparator \u003d (DeadlineComparator) other;","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"            return this.taskList.equals(otherDeadlineComparator.taskList); // state check","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"        return false;","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"    public String toString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"        return COMPARE_CRITERIA;","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"angkl0":60,"songivan00":1}},{"path":"src/main/java/seedu/codeconnect/model/task/DefaultComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-11-03"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":" * Compares two tasks on the basis of the task added later ordered in front of the other task.","lastModifiedDate":"2022-11-03"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"public class DefaultComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    private static final String COMPARE_CRITERIA \u003d \"in order of most recent task added.\";","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"     * Constructs a {@code DefaultComparator} with the given tasklist.","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"     * @param taskList A valid TaskList.","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    public DefaultComparator(TaskList taskList) {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"     * Constructs a DefaultComparator with an empty tasklist.","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    public DefaultComparator() {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    public int compare(Task a, Task b) {","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"        if (taskList.indexOf(a) \u003e taskList.indexOf(b)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"            return -1;","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"        } else if (taskList.indexOf(a) \u003c taskList.indexOf(b)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"            return 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        return 0;","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"            return true;","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        } else if (other instanceof DefaultComparator) { // instanceof handles nulls","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"            DefaultComparator otherDefaultComparator \u003d (DefaultComparator) other;","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"            return this.taskList.equals(otherDefaultComparator.taskList); // state check","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"        return false;","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"    public String toString() {","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"        return COMPARE_CRITERIA;","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"angkl0":59,"songivan00":2}},{"path":"src/main/java/seedu/codeconnect/model/task/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":" * Represents a Task\u0027s status in the task list.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":" * Guarantees: immutable","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"public class Status {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"String should only be either \\\"Complete\\\" or \\\"Not complete\\\".\";","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    private static final String COMPLETED_SYMBOL \u003d \"\\u2713\";","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"    private static final String INCOMPLETE_SYMBOL \u003d \"\\u2716\";","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"    private static final String COMPLETED_STATUS \u003d \"Complete\";","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    private static final String INCOMPLETE_STATUS \u003d \"Not complete\";","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    private final boolean isComplete;","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"     * Constructs a {@code Status} with a boolean parameter. Every field must be present and not null.","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"     * @param isComplete A boolean indicating whether a Status is complete.","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    public Status(boolean isComplete) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        requireNonNull(isComplete);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"     * Constructs a {@code Status} with a String parameter. Every field must be present and not null.","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"     * @param status A valid string representing a status.","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    public Status(String status) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        this.isComplete \u003d status.equals(COMPLETED_STATUS);","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"     * Returns true if a given string represents a status.","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        return test.equals(COMPLETED_STATUS) || test.equals(INCOMPLETE_STATUS);","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"    public boolean getIsComplete() {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"        return isComplete;","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"     * Returns unicode character representing a task\u0027s status shown in the GUI.","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"    public String toDisplayString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"        return isComplete ? COMPLETED_SYMBOL : INCOMPLETE_SYMBOL;","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"        return isComplete ? COMPLETED_STATUS : INCOMPLETE_STATUS;","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"        } else if (other instanceof Status) { // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"            Boolean thisBoolean \u003d this.isComplete;","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"            Boolean otherBoolean \u003d ((Status) other).getIsComplete();","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"            return thisBoolean.equals(otherBoolean); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"        return Boolean.hashCode(this.isComplete);","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":79,"parnikkapore":2,"songivan00":2}},{"path":"src/main/java/seedu/codeconnect/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task in the task list.","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"public class Task {","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    private final TaskName name;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    private final Module module;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    private final Deadline deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    private final Status status;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"     * Constructs a new Task. Every field must be present and not null.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    public Task(TaskName name, Module module, Deadline deadline, Status status) {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(name, module, deadline);","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    public TaskName getName() {","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        return name;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    public Module getModule() {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        return module;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        return deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    public Status getStatus() {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        return status;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"     * Returns a copy of this Task with the status modified.","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"     * @param isComplete The new completion status.","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"     * @return The new Task.","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    public Task withStatus(boolean isComplete) {","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        return new Task(","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"                this.name,","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"                this.module,","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"                this.deadline,","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"                new Status(isComplete)","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        );","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"     * Returns true if the task is marked as complete.","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"     * @return","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"    public boolean isTaskComplete() {","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"        return this.status.getIsComplete();","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if the tasks have the same name and module code.","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"    public boolean isSameTask(Task other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        return other !\u003d null","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 other.getName().equals(this.getName())","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 other.getModule().equals(this.getModule());","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if both tasks have equal values in all fields.","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 otherTask.getModule().equals(this.getModule())","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(this.getDeadline())","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"angkl0"},"content":"                \u0026\u0026 otherTask.getStatus().equals(this.getStatus());","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"angkl0"},"content":"        return Objects.hash(this.name, this.module, this.deadline, this.status);","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"        return this.getName()","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"                + \"; Module: \" + this.getModule()","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"angkl0"},"content":"                + \"; Deadline: \" + this.getDeadline()","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"angkl0"},"content":"                + \"; Status: \" + this.getStatus();","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"angkl0":21,"parnikkapore":91,"JonLamy":2,"songivan00":3}},{"path":"src/main/java/seedu/codeconnect/model/task/TaskContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"public class TaskContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    public TaskContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"                .anyMatch(keyword -\u003e task.getName().fullName.toUpperCase().contains(keyword.toUpperCase()));","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"                || (other instanceof TaskContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 keywords.equals(((TaskContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":1,"songivan00":1,"danzzzerl":27}},{"path":"src/main/java/seedu/codeconnect/model/task/TaskContainsModulesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":" * Tests that a {@code Task}\u0027s {@code module} matches the module given.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"public class TaskContainsModulesPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    public TaskContainsModulesPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"                .anyMatch(keyword -\u003e task.getModule().moduleName.toUpperCase()","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"                        .contains(keyword.toUpperCase()));","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"            return true;","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"        } else if (other instanceof TaskContainsModulesPredicate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"            Set\u003cString\u003e thisKeywordSet \u003d new HashSet\u003c\u003e(keywords);","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"            Set\u003cString\u003e otherKeywordSet \u003d new HashSet\u003c\u003e(((TaskContainsModulesPredicate) other).keywords);","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"            return thisKeywordSet.equals(otherKeywordSet);","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        } else {","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"            return false;","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":6,"JonLamy":11,"songivan00":1,"danzzzerl":20}},{"path":"src/main/java/seedu/codeconnect/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task\u0027s name in the task list.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"public class TaskName {","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names should not be blank\";","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    /*","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S[\\\\S ]*\";","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    public final String fullName;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    public TaskName(String name) {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        return fullName;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"                || (other instanceof seedu.codeconnect.model.task.TaskName // instanceof handles nulls","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"                \u0026\u0026 fullName.equals(((seedu.codeconnect.model.task.TaskName) other).fullName)); // state check","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":54,"songivan00":4}},{"path":"src/main/java/seedu/codeconnect/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the person {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"     * The person identity of {@code editedTask} must not be the same as another existing person in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"     * Returns index of specified Task in the list.","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"angkl0"},"content":"    public int indexOf(Task task) {","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"angkl0"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"angkl0"},"content":"        assert contains(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"angkl0"},"content":"        return internalList.indexOf(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"parnikkapore"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"parnikkapore"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"parnikkapore"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"parnikkapore"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"parnikkapore"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"parnikkapore"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"parnikkapore"},"content":"                    return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"parnikkapore"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"parnikkapore"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"parnikkapore"},"content":"        return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"angkl0":9,"parnikkapore":133,"songivan00":4}},{"path":"src/main/java/seedu/codeconnect/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task.exceptions;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":" * identity).","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":10,"songivan00":1}},{"path":"src/main/java/seedu/codeconnect/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task.exceptions;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":5,"songivan00":1}},{"path":"src/main/java/seedu/codeconnect/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Address;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Github;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Telegram;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Status;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"                    getModuleSet(\"CS1231\", \"CS101S\", \"ES2660\", \"IS1103\", \"ES2660\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"                    new Github(\"AlexY\"), new Telegram(\"alexyeoh\")),","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"                    getModuleSet(\"CS2030S\", \"CS2040S\", \"GEA1000\", \"ES2660\", \"MA2001\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"                    new Github(\"bernyu\"), new Telegram(\"bernicee\")),","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"neighbours\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"                    getModuleSet(\"CS2100\", \"CS2101\", \"GEN2001\", \"ST2334\", \"CS2103T\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"                    new Github(\"charlotteoli\"), new Telegram(\"charoli\")),","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"family\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"                    getModuleSet(\"CS1101S\", \"GEA1000\", \"IS1103\", \"MA1521\", \"MA2001\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"                    new Github(\"davidli\"), new Telegram(\"davidlii\")),","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"classmates\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"                    getModuleSet(\"CS2001\", \"CS2019S\", \"CS2106\", \"CS2107\", \"GEA1000\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"                    new Github(\"IrfanIbrahim\"), new Telegram(\"irfann\")),","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"colleagues\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"                    getModuleSet(\"CS2103T\", \"CS2019S\", \"CS2106\", \"CS2107\", \"GEA1000\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"                    new Github(\"Roy\"), new Telegram(\"Roybala\"))","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        return new Task[] {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"            new Task(new TaskName(\"Lab2\"), new Module(\"CS2030S\"), new Deadline(\"2022-02-02 23:59\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"                    new Status(false)),","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"            new Task(new TaskName(\"Problem Set 2\"), new Module(\"CS2040S\"),","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"                    new Deadline(\"2022-02-04 23:59\"), new Status(false))","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"        };","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"JonLamy"},"content":"     * Returns a module set containing the list of strings given.","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"JonLamy"},"content":"    public static Set\u003cModule\u003e getModuleSet(String... moduleNames) {","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"JonLamy"},"content":"        return Arrays.stream(moduleNames)","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"JonLamy"},"content":"                .map(Module::new)","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"JonLamy"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"    public static ReadOnlyTaskList getSampleTaskList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"angkl0"},"content":"        TaskList sampleTl \u003d new TaskList();","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"angkl0"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"angkl0"},"content":"            sampleTl.addTask(sampleTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"angkl0"},"content":"        return sampleTl;","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"angkl0":16,"JonLamy":19,"songivan00":18,"danzzzerl":12,"-":45}},{"path":"src/main/java/seedu/codeconnect/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":" * Represents a storage for {@link seedu.codeconnect.model.AddressBook}.","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"songivan00":4,"-":41}},{"path":"src/main/java/seedu/codeconnect/storage/JsonAdaptedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":" * Jackson-friendly version of {@link Module}.","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"class JsonAdaptedModule {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"    private final String moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"     * Constructs a {@code JsonAdaptedModule} with the given {@code moduleName}.","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"    public JsonAdaptedModule(String moduleName) {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"     * Converts a given {@code Module} into this class for Jackson use.","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"    public JsonAdaptedModule(Module source) {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"        moduleName \u003d source.moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"    @JsonValue","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"    public String getModuleName() {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        return moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"     * Converts this Jackson-friendly adapted module object into the model\u0027s {@code Module} object.","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted module.","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"        if (!Module.isValidModule(moduleName)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"        return new Module(moduleName);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"JonLamy":41,"songivan00":7}},{"path":"src/main/java/seedu/codeconnect/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Address;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Github;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Telegram;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    private final String github;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    private final String telegram;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"                             @JsonProperty(\"mods\") List\u003cJsonAdaptedModule\u003e modules,","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"                             @JsonProperty(\"github\") String github, @JsonProperty(\"telegram\") String telegram) {","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"            this.tags.addAll(tagged);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"JonLamy"},"content":"        if (modules !\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"            this.modules.addAll(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"        this.github \u003d github;","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"JonLamy"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"JonLamy"},"content":"        modules.addAll(source.getModules().stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"JonLamy"},"content":"                .map(JsonAdaptedModule::new)","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"JonLamy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"        github \u003d source.getGithub().value;","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"        telegram \u003d source.getTelegram().telehandle;","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"JonLamy"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"JonLamy"},"content":"        final List\u003cModule\u003e personModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"JonLamy"},"content":"        for (JsonAdaptedModule module: modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"JonLamy"},"content":"            personModules.add(module.toModelType());","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"JonLamy"},"content":"        final Set\u003cModule\u003e modelModules \u003d new HashSet\u003c\u003e(personModules);","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"danzzzerl"},"content":"        if (github \u003d\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"danzzzerl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Github.class.getSimpleName()));","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"danzzzerl"},"content":"        if (!Github.isValidGh(github)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"danzzzerl"},"content":"            throw new IllegalValueException(Github.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"danzzzerl"},"content":"        final Github modelGithub \u003d new Github(github);","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"danzzzerl"},"content":"        if (telegram \u003d\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"danzzzerl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"danzzzerl"},"content":"                    Telegram.class.getSimpleName()));","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"danzzzerl"},"content":"        if (!Telegram.isValidTele(telegram)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"danzzzerl"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":147,"author":{"gitId":"danzzzerl"},"content":"        final Telegram modelTelegram \u003d new Telegram(telegram);","lastModifiedDate":"2022-10-24"},{"lineNumber":148,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"danzzzerl"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelModules, modelGithub,","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"danzzzerl"},"content":"                modelTelegram);","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JonLamy":15,"songivan00":13,"danzzzerl":29,"-":96}},{"path":"src/main/java/seedu/codeconnect/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"songivan00":3,"-":45}},{"path":"src/main/java/seedu/codeconnect/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Status;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    private static final DateTimeFormatter DEADLINE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    public final String taskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    public final String module;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    public final String deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    public final String status;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    public JsonAdaptedTask(@JsonProperty(\"taskName\") String taskName, @JsonProperty(\"module\") String module,","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"            @JsonProperty(\"deadline\") String deadline, @JsonProperty(\"status\") String status) {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        taskName \u003d source.getName().fullName;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"        module \u003d source.getModule().moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"        deadline \u003d source.getDeadline().deadline.format(DEADLINE_FORMATTER);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        status \u003d source.getStatus().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"        if (taskName \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"        if (!TaskName.isValidName(taskName)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"        final TaskName modelTaskName \u003d new TaskName(taskName);","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Module.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"        if (!Module.isValidModule(module)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"        final Module modelModule \u003d new Module(module);","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"        if (!Deadline.isValidDeadline(deadline)) {","lastModifiedDate":"2022-11-03"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"        Deadline modelDeadline \u003d new Deadline(deadline);","lastModifiedDate":"2022-11-03"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"        Status modelStatus \u003d new Status(status);","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"        return new Task(modelTaskName, modelModule, modelDeadline, modelStatus);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":86,"JonLamy":1,"songivan00":7}},{"path":"src/main/java/seedu/codeconnect/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.FileUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.JsonUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"songivan00":7,"-":73}},{"path":"src/main/java/seedu/codeconnect/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"songivan00":5,"-":55}},{"path":"src/main/java/seedu/codeconnect/storage/JsonSerializableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":" * An Immutable TaskList that is serializable to JSON format.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"@JsonRootName(value \u003d \"tasklist\")","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"class JsonSerializableTaskList {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"     * Constructs a {@code JsonSerializableTaskList} with the given tasks.","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    public JsonSerializableTaskList(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"     * Converts a given {@code ReadOnlyTaskList} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskList}.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    public JsonSerializableTaskList(ReadOnlyTaskList source) {","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"     * Converts this task list into the model\u0027s {@code TaskList} object.","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"    public TaskList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"            if (taskList.hasTask(task)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"        return taskList;","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"angkl0":56,"songivan00":5}},{"path":"src/main/java/seedu/codeconnect/storage/JsonTaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.FileUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.JsonUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" * A class to access TaskList data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"public class JsonTaskListStorage implements TaskListStorage {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskListStorage.class);","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    public JsonTaskListStorage(Path filePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"        return filePath;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        return readTaskList(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"     * Similar to {@link #readTaskList()}.","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        Optional\u003cJsonSerializableTaskList\u003e jsonTaskList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"                filePath, JsonSerializableTaskList.class);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        if (!jsonTaskList.isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        try {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"            return Optional.of(jsonTaskList.get().toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        saveTaskList(taskList, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"     * Similar to {@link #saveTaskList(ReadOnlyTaskList)}.","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskList(taskList), filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"angkl0":73,"songivan00":7}},{"path":"src/main/java/seedu/codeconnect/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.JsonUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"songivan00":5,"-":42}},{"path":"src/main/java/seedu/codeconnect/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"public interface Storage extends AddressBookStorage, TaskListStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"angkl0":10,"songivan00":6,"-":26}},{"path":"src/main/java/seedu/codeconnect/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    private TaskListStorage taskListStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    public StorageManager(","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"            AddressBookStorage addressBookStorage, TaskListStorage taskListStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"        this.taskListStorage \u003d taskListStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"        return taskListStorage.getTaskListFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"        return readTaskList(taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"        return taskListStorage.readTaskList(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"        saveTaskList(taskList, taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"angkl0"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"angkl0"},"content":"        taskListStorage.saveTaskList(taskList, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"angkl0":33,"songivan00":7,"-":70}},{"path":"src/main/java/seedu/codeconnect/storage/TaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":" * Represents a storage for {@link seedu.codeconnect.model.TaskList}.","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"public interface TaskListStorage {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"     * Returns TaskList data as a {@link ReadOnlyTaskList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"     * @see #readTaskList()","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"     * Saves the given {@link ReadOnlyTaskList} to the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"     * @param taskList cannot be null.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"     * @see #saveTaskList(ReadOnlyTaskList)","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":39,"songivan00":4}},{"path":"src/main/java/seedu/codeconnect/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":" * Represents a storage for {@link seedu.codeconnect.model.UserPrefs}.","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"     * Saves the given {@link seedu.codeconnect.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"songivan00":6,"-":30}},{"path":"src/main/java/seedu/codeconnect/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"songivan00"},"content":"         * @see seedu.codeconnect.logic.Logic#execute(String)","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"songivan00":5,"-":80}},{"path":"src/main/java/seedu/codeconnect/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-t14-2.github.io/tp/UserGuide.html#\";","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"songivan00":3,"-":99}},{"path":"src/main/java/seedu/codeconnect/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"import javafx.scene.control.SingleSelectionModel;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.Logic;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"    // Require to be initialized because they contain dynamic data.","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"JonLamy"},"content":"    private TabPane tabPanePlaceholder;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"angkl0"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getSortedTaskList());","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"songivan00"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"JonLamy"},"content":"     * Focuses the task list tab.","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"JonLamy"},"content":"    public void focusTaskTab() {","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"JonLamy"},"content":"        SingleSelectionModel\u003cTab\u003e selectionModel \u003d tabPanePlaceholder.getSelectionModel();","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"JonLamy"},"content":"        selectionModel.select(1);","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"JonLamy"},"content":"     * Focuses the contacts list tab.","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"JonLamy"},"content":"    public void focusPersonTab() {","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"JonLamy"},"content":"        SingleSelectionModel\u003cTab\u003e selectionModel \u003d tabPanePlaceholder.getSelectionModel();","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"JonLamy"},"content":"        selectionModel.select(0);","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":177,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":178,"author":{"gitId":"JonLamy"},"content":"    @FXML","lastModifiedDate":"2022-11-07"},{"lineNumber":179,"author":{"gitId":"JonLamy"},"content":"    public void setTasksPath() {","lastModifiedDate":"2022-11-07"},{"lineNumber":180,"author":{"gitId":"JonLamy"},"content":"        try {","lastModifiedDate":"2022-11-07"},{"lineNumber":181,"author":{"gitId":"JonLamy"},"content":"            StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getTaskListFilePath());","lastModifiedDate":"2022-11-07"},{"lineNumber":182,"author":{"gitId":"JonLamy"},"content":"            statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2022-11-07"},{"lineNumber":183,"author":{"gitId":"JonLamy"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-11-07"},{"lineNumber":184,"author":{"gitId":"JonLamy"},"content":"            System.out.println(\"Not initialized on first run.\");","lastModifiedDate":"2022-11-07"},{"lineNumber":185,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":186,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":187,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":188,"author":{"gitId":"JonLamy"},"content":"    @FXML","lastModifiedDate":"2022-11-07"},{"lineNumber":189,"author":{"gitId":"JonLamy"},"content":"    public void setContactsPath() {","lastModifiedDate":"2022-11-07"},{"lineNumber":190,"author":{"gitId":"JonLamy"},"content":"        try {","lastModifiedDate":"2022-11-07"},{"lineNumber":191,"author":{"gitId":"JonLamy"},"content":"            StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2022-11-07"},{"lineNumber":192,"author":{"gitId":"JonLamy"},"content":"            statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2022-11-07"},{"lineNumber":193,"author":{"gitId":"JonLamy"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-11-07"},{"lineNumber":194,"author":{"gitId":"JonLamy"},"content":"            System.out.println(\"Not initialized on first run.\");","lastModifiedDate":"2022-11-07"},{"lineNumber":195,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":196,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"songivan00"},"content":"     * @see seedu.codeconnect.logic.Logic#execute(String)","lastModifiedDate":"2022-11-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"JonLamy"},"content":"            if (commandResult.useTaskTab()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"JonLamy"},"content":"                focusTaskTab();","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"JonLamy"},"content":"            } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"JonLamy"},"content":"                focusPersonTab();","lastModifiedDate":"2022-10-12"},{"lineNumber":241,"author":{"gitId":"JonLamy"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"angkl0":1,"JonLamy":50,"songivan00":13,"-":186}},{"path":"src/main/java/seedu/codeconnect/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"    private FlowPane modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"    private Label github;","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"    private Label telegram;","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"        phone.setText(\"Phone: \" + person.getPhone().value);","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"        person.getModules().stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.moduleName))","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"                .forEach(module -\u003e modules.getChildren().add(new Label(module.moduleName)));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"        github.setText(\"Github Profile: \" + person.getGithub().value);","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"songivan00"},"content":"        telegram.setText(\"Telegram username: \" + person.getTelegram().telehandle);","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"JonLamy":4,"songivan00":4,"danzzzerl":8,"-":72}},{"path":"src/main/java/seedu/codeconnect/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"songivan00":3,"-":46}},{"path":"src/main/java/seedu/codeconnect/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"songivan00":1,"-":27}},{"path":"src/main/java/seedu/codeconnect/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":1,"-":27}},{"path":"src/main/java/seedu/codeconnect/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    public final Task task;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    private Label name;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    private Label id;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    private Label module;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    private Label deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    private Label status;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"        super(FXML);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"        name.setText(task.getName().fullName);","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        String mod \u003d task.getModule().moduleName;","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"        if (Objects.equals(mod, \"-\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"            module.setVisible(false);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"            module.setText(mod);","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        status.setText(task.getStatus().toDisplayString());","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"        deadline.setText(task.getDeadline().toString());","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"        // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":3,"songivan00":2,"danzzzerl":71}},{"path":"src/main/java/seedu/codeconnect/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        super(FXML);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"                setText(null);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"            } else {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"songivan00":3,"danzzzerl":46}},{"path":"src/main/java/seedu/codeconnect/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"songivan00":1,"-":12}},{"path":"src/main/java/seedu/codeconnect/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.MainApp;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.StringUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.Logic;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":" * Interacts with Logic","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JonLamy":1,"songivan00":5,"-":83}},{"path":"src/main/java/seedu/codeconnect/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.MainApp;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"songivan00":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":".tab-header-background {","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"    -fx-background-color: inherit;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":".tab-header-area .tab {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"    -fx-background-color: inherit;","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":".tab-header-area .tab:selected {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"    -fx-background-color: salmon;","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"JonLamy"},"content":".tab-header-area .tab .tab-label {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"JonLamy"},"content":"#tags,#modules {","lastModifiedDate":"2022-10-12"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":371,"author":{"gitId":"JonLamy"},"content":"#modules .label {","lastModifiedDate":"2022-10-12"},{"lineNumber":372,"author":{"gitId":"JonLamy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-12"},{"lineNumber":373,"author":{"gitId":"JonLamy"},"content":"    -fx-background-color: brown;","lastModifiedDate":"2022-10-12"},{"lineNumber":374,"author":{"gitId":"JonLamy"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-12"},{"lineNumber":375,"author":{"gitId":"JonLamy"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-12"},{"lineNumber":376,"author":{"gitId":"JonLamy"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-12"},{"lineNumber":377,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":378,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":379,"author":{"gitId":"songivan00"},"content":"#module {","lastModifiedDate":"2022-10-12"},{"lineNumber":380,"author":{"gitId":"songivan00"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-12"},{"lineNumber":381,"author":{"gitId":"songivan00"},"content":"    -fx-background-color: brown;","lastModifiedDate":"2022-10-12"},{"lineNumber":382,"author":{"gitId":"songivan00"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-12"},{"lineNumber":383,"author":{"gitId":"songivan00"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-12"},{"lineNumber":384,"author":{"gitId":"songivan00"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-12"},{"lineNumber":385,"author":{"gitId":"songivan00"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"JonLamy":27,"songivan00":8,"-":350}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"CodeConnect\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"        \u003cTabPane fx:id\u003d\"tabPanePlaceholder\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\" tabMinWidth\u003d\"150\" tabMaxWidth\u003d\"150\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"          \u003cTab text\u003d\"Contacts\" onSelectionChanged\u003d\"#setContactsPath\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"          \u003cTab text\u003d\"Tasks\" onSelectionChanged\u003d\"#setTasksPath\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"JonLamy"},"content":"            \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"JonLamy"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"        \u003c/TabPane\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"JonLamy":15,"-":47}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"      \u003cFlowPane fx:id\u003d\"modules\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d \"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"      \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$github\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"      \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JonLamy":1,"danzzzerl":2,"-":36}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JonLamy":5,"-":4}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"                \u003cLabel fx:id\u003d\"status\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"            \u003cLabel fx:id\u003d\"module\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$module\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"            \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":1,"JonLamy":35}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"JonLamy":11}},{"path":"src/test/java/seedu/codeconnect/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"    public void equals() {","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"        assertTrue(expected.equals(expected));","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"        assertFalse(expected.equals(new Object()));","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"JonLamy":8,"songivan00":1,"-":57}},{"path":"src/test/java/seedu/codeconnect/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.core;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"songivan00":1,"-":26}},{"path":"src/test/java/seedu/codeconnect/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.core;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":2,"-":133}},{"path":"src/test/java/seedu/codeconnect/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.core.index;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"songivan00":2,"-":58}},{"path":"src/test/java/seedu/codeconnect/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"songivan00":2,"-":34}},{"path":"src/test/java/seedu/codeconnect/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"songivan00":3,"-":105}},{"path":"src/test/java/seedu/codeconnect/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Config;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"songivan00":4,"-":112}},{"path":"src/test/java/seedu/codeconnect/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":2,"-":21}},{"path":"src/test/java/seedu/codeconnect/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.SerializableTestClass;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.TestUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":3,"-":42}},{"path":"src/test/java/seedu/codeconnect/commons/util/NaturalDateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.util.NaturalDateParser.parse;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"class NaturalDateParserTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    /** Some usual inputs */","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    void parse_smoketest() {","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"            assertEquals(","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"                    LocalDateTime.of(2006, 1, 2, 15, 0),","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"                    parse(\"2 Jan 2006 3pm\")","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"            );","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"            assertEquals(","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"                    LocalDateTime.of(2006, 1, 2, 15, 4, 5),","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"                    parse(\"Jan 2 2006 15:04:05\")","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"            );","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"            fail(\"Should not have thrown any exceptions\", e);","lastModifiedDate":"2022-10-30"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    /** Inputs that are not a point - implementations should satisfy these behavior */","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    void parse_nonPointInputs() {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"            // Use the end of the day/week","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"            assertEquals(","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"                    LocalDateTime.of(2006, 1, 2, 23, 59, 59),","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"                    parse(\"2 Jan 2006\")","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"            );","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"            assertEquals(","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"                    LocalDateTime.of(2006, 2, 28, 23, 59, 59),","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"                    parse(\"Feb 2006\")","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"            );","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"            fail(\"Should not have thrown any exceptions\", e);","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    /** null */","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    void parse_null_throwsException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e parse(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"    /** Not a date/time */","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    void parse_notADateTime_throwsException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NaturalDateParser.DateTimeNotFoundException.class, () -\u003e parse(\"Hello World :p\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    /** Integer overflow - see https://github.com/AY2223S1-CS2103T-T14-2/tp/issues/132 */","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    void parse_giantInteger_throwsException() {","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NaturalDateParser.ParseFailureException.class, () -\u003e parse(\"7842394875\"));","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"parnikkapore":63,"songivan00":3}},{"path":"src/test/java/seedu/codeconnect/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.commons.util;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"songivan00":2,"-":141}},{"path":"src/test/java/seedu/codeconnect/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_CS1101;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.AddContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.ListContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.JsonTaskListStorage;","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.storage.StorageManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(temporaryFolder.resolve(\"taskList.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"songivan00"},"content":"        String deleteCommand \u003d \"delc 9\";","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"songivan00"},"content":"        String listCommand \u003d ListContactCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(listCommand, ListContactCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"        JsonTaskListStorage taskListStorage \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"                new JsonTaskListIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionTaskList.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"songivan00"},"content":"        String addContactCommand \u003d AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"danzzzerl"},"content":"                + ADDRESS_DESC_AMY + MODULE_DESC_CS1101 + GITHUB_DESC_AMY + TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(addContactCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"angkl0"},"content":"    public void getSortedTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"angkl0"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getSortedTaskList().remove(0));","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"angkl0"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"angkl0"},"content":"    private static class JsonTaskListIoExceptionThrowingStub extends JsonTaskListStorage {","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"angkl0"},"content":"        private JsonTaskListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"angkl0"},"content":"            super(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"angkl0"},"content":"        public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"angkl0"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"angkl0":21,"songivan00":37,"danzzzerl":1,"-":130}},{"path":"src/test/java/seedu/codeconnect/logic/commands/AddContactCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":" * Contains integration tests (interaction with the Model) for {@code AddContactCommand}.","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"public class AddContactCommandIntegrationTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    //should use getTypicalTaskList() instead of null","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(new AddContactCommand(validPerson), model,","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"                String.format(AddContactCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(new AddContactCommand(personInList), model, AddContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"songivan00":18,"-":29}},{"path":"src/test/java/seedu/codeconnect/logic/commands/AddContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"public class AddContactCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddContactCommand(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"        CommandResult commandResult \u003d new AddContactCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"        assertEquals(String.format(AddContactCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"        AddContactCommand addContactCommand \u003d new AddContactCommand(validPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"                addContactCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addContactCommand.execute(modelStub));","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"songivan00"},"content":"        AddContactCommand addAliceCommand \u003d new AddContactCommand(alice);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"songivan00"},"content":"        AddContactCommand addBobCommand \u003d new AddContactCommand(bob);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"songivan00"},"content":"        AddContactCommand addAliceCommandCopy \u003d new AddContactCommand(alice);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"songivan00"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"songivan00"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"songivan00"},"content":"            return null;","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"angkl0"},"content":"        public ObservableList\u003cTask\u003e getSortedTaskList() {","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"angkl0"},"content":"            return null;","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"songivan00"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"songivan00"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"angkl0"},"content":"        public void updateSortedTaskList(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"angkl0"},"content":"        public void setTask(Task task, Task editedTask) {","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":180,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"angkl0"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":184,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"angkl0"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"angkl0"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"angkl0"},"content":"        public void setTaskList(ReadOnlyTaskList newData) {","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"angkl0"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"angkl0"},"content":"        public void deleteTask(Task task) {","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"JonLamy"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"JonLamy"},"content":"        public void deleteCompletedTasks() {","lastModifiedDate":"2022-10-25"},{"lineNumber":212,"author":{"gitId":"JonLamy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":213,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":214,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":215,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":216,"author":{"gitId":"angkl0"},"content":"        public int indexOf(Task task) {","lastModifiedDate":"2022-10-25"},{"lineNumber":217,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":218,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":219,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"angkl0":52,"JonLamy":5,"songivan00":32,"-":175}},{"path":"src/test/java/seedu/codeconnect/logic/commands/AddTaskCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.LAB_3;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":" * Contains integration tests (interaction with the Model) for {@code AddTaskCommand}.","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"public class AddTaskCommandIntegrationTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    private Model model;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    public void execute_newTask_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        Task validTask \u003d LAB_3;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        expectedModel.addTask(validTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        assertCommandSuccess(new AddTaskCommand(validTask), model,","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"                String.format(AddTaskCommand.TEMPLATE_SUCCESS, validTask), expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        Task taskInList \u003d model.getTaskList().getTaskList().get(0);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        assertCommandFailure(new AddTaskCommand(taskInList), model, AddTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"parnikkapore":36,"songivan00":10}},{"path":"src/test/java/seedu/codeconnect/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        Task validTask \u003d LAB_2;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(String.format(AddTaskCommand.TEMPLATE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"        Task validTask \u003d LAB_2;","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(validTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"                AddTaskCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addTaskCommand.execute(modelStub));","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        Task alice \u003d LAB_2;","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"        Task bob \u003d FINISH_TP;","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        AddTaskCommand addAliceCommand \u003d new AddTaskCommand(alice);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"        AddTaskCommand addBobCommand \u003d new AddTaskCommand(bob);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"        AddTaskCommand addAliceCommandCopy \u003d new AddTaskCommand(alice);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"parnikkapore"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"parnikkapore"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"parnikkapore"},"content":"            return null;","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"parnikkapore"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"parnikkapore"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"parnikkapore"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"parnikkapore"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"parnikkapore"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"angkl0"},"content":"        public ObservableList\u003cTask\u003e getSortedTaskList() {","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"angkl0"},"content":"            return null;","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"parnikkapore"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"angkl0"},"content":"        public void updateSortedTaskList(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"parnikkapore"},"content":"        public void setTask(Task task, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"parnikkapore"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"parnikkapore"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"parnikkapore"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"parnikkapore"},"content":"        public void setTaskList(ReadOnlyTaskList newData) {","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":201,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"parnikkapore"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"parnikkapore"},"content":"        public void deleteTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"parnikkapore"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":211,"author":{"gitId":"JonLamy"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":212,"author":{"gitId":"JonLamy"},"content":"        public void deleteCompletedTasks() {","lastModifiedDate":"2022-10-25"},{"lineNumber":213,"author":{"gitId":"JonLamy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":214,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":215,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":216,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":217,"author":{"gitId":"angkl0"},"content":"        public int indexOf(Task task) {","lastModifiedDate":"2022-10-25"},{"lineNumber":218,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":219,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":220,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":221,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":222,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":223,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"parnikkapore"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2022-10-11"},{"lineNumber":225,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":226,"author":{"gitId":"parnikkapore"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2022-10-11"},{"lineNumber":227,"author":{"gitId":"parnikkapore"},"content":"        private final Task task;","lastModifiedDate":"2022-10-11"},{"lineNumber":228,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":229,"author":{"gitId":"parnikkapore"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":230,"author":{"gitId":"parnikkapore"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":231,"author":{"gitId":"parnikkapore"},"content":"            this.task \u003d task;","lastModifiedDate":"2022-10-11"},{"lineNumber":232,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":233,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":234,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":235,"author":{"gitId":"parnikkapore"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":236,"author":{"gitId":"parnikkapore"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":237,"author":{"gitId":"parnikkapore"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":238,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":239,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":240,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":241,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":242,"author":{"gitId":"parnikkapore"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2022-10-11"},{"lineNumber":243,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":244,"author":{"gitId":"parnikkapore"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2022-10-11"},{"lineNumber":245,"author":{"gitId":"parnikkapore"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":246,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":247,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":248,"author":{"gitId":"parnikkapore"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":249,"author":{"gitId":"parnikkapore"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":250,"author":{"gitId":"parnikkapore"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":251,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":252,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":253,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":254,"author":{"gitId":"parnikkapore"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":255,"author":{"gitId":"parnikkapore"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":256,"author":{"gitId":"parnikkapore"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":257,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":258,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":259,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":260,"author":{"gitId":"parnikkapore"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":261,"author":{"gitId":"parnikkapore"},"content":"            return new TaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":262,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":263,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":264,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":265,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"angkl0":16,"parnikkapore":231,"JonLamy":5,"songivan00":13}},{"path":"src/test/java/seedu/codeconnect/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    //should be getTypicalTaskList()","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"songivan00":11,"-":23}},{"path":"src/test/java/seedu/codeconnect/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"songivan00":1,"-":53}},{"path":"src/test/java/seedu/codeconnect/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"    public static final String VALID_MODULE_CS1101 \u003d \"CS1101\";","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"    public static final String VALID_MODULE_CS2030S \u003d \"CS2030S\";","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"    public static final String VALID_GITHUB_AMY \u003d \"AMYBEE\";","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"    public static final String VALID_GITHUB_BOB \u003d \"BOB5\";","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"AMYBEEE\";","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"BOB555\";","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"    public static final String MODULE_DESC_CS1101 \u003d \" \" + PREFIX_MODULE + VALID_MODULE_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"    public static final String MODULE_DESC_CS2030S \u003d \" \" + PREFIX_MODULE + VALID_MODULE_CS2030S;","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    public static final String MODULE_DESC_COMBINED \u003d \" \" + PREFIX_MODULE + VALID_MODULE_CS1101","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"            + \"  \\t \" + VALID_MODULE_CS2030S;","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"    public static final String GITHUB_DESC_AMY \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"    public static final String GITHUB_DESC_BOB \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"JonLamy"},"content":"    public static final String INVALID_MODS_DESC \u003d \" \" + PREFIX_MODULE + \"cs****\"; // space not allowed","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"    public static final String INVALID_GITHUB_DESC \u003d \" \" + PREFIX_GITHUB + \"amy bee\"; // only one word allowed","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + PREFIX_TELEGRAM + \"box lee lee\"; // only one word allowed","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"    public static final String VALID_TASK_NAME_FINISH_TP \u003d \"Finish TP\";","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    public static final String VALID_DEADLINE_FINISH_TP \u003d \"2022-11-15 00:00\";","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"    public static final String HUMAN_DEADLINE_FINISH_TP \u003d \"15/11/2022 00:00\";","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"    public static final String VALID_MODULE_FINISH_TP \u003d \"CS2103T\";","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"    public static final String VALID_TASK_NAME_LAB_2 \u003d \"Lab 2\";","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"    public static final String VALID_DEADLINE_LAB_2 \u003d \"2022-02-02 23:59\";","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"    public static final String HUMAN_DEADLINE_LAB_2 \u003d \"2 Feb 2022 23:59\";","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"    public static final String VALID_MODULE_LAB_2 \u003d \"CS2030S\";","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"danzzzerl"},"content":"    public static final String VALID_TASK_NAME_BUY_GROCERIES \u003d \"Buy Groceries\";","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"danzzzerl"},"content":"    public static final String HUMAN_DEADLINE_BUY_GROCERIES \u003d \"15/07/2022 00:00\";","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"songivan00"},"content":"    public static final String TASK_NAME_DESC_FINISH_TP \u003d \" \" + PREFIX_NAME + VALID_TASK_NAME_FINISH_TP;","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"    public static final String MODULE_DESC_FINISH_TP \u003d \" \" + PREFIX_MODULE + VALID_MODULE_FINISH_TP;","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"    public static final String DEADLINE_DESC_FINISH_TP \u003d \" \" + PREFIX_DEADLINE + HUMAN_DEADLINE_FINISH_TP;","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"songivan00"},"content":"    public static final String TASK_NAME_DESC_LAB_2 \u003d \" \" + PREFIX_NAME + VALID_TASK_NAME_LAB_2;","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"    public static final String MODULE_DESC_LAB_2 \u003d \" \" + PREFIX_MODULE + VALID_MODULE_LAB_2;","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"    public static final String DEADLINE_DESC_LAB_2 \u003d \" \" + PREFIX_DEADLINE + HUMAN_DEADLINE_LAB_2;","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"danzzzerl"},"content":"    public static final String DEADLINE_DESC_BUY_GROCERIES \u003d \" \" + PREFIX_DEADLINE + HUMAN_DEADLINE_BUY_GROCERIES;","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"    public static final String INVALID_TASK_NAME_DESC \u003d \"John\\nEvelyn\\tTan\";","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"songivan00"},"content":"    public static final String INVALID_TASK_NAME_PREF \u003d \" \" + PREFIX_NAME + \" \";","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"    public static final String INVALID_MODULE_DESC \u003d \" \" + PREFIX_MODULE + \"Software Engineering\";","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"    public static final String INVALID_DEADLINE_DESC \u003d \" \" + PREFIX_DEADLINE + \"foobar\";","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"songivan00"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"songivan00"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"songivan00"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_FINISH_TP;","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"songivan00"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_LAB_2;","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"danzzzerl"},"content":"                .withTags(VALID_TAG_FRIEND).withModules(VALID_MODULE_CS1101)","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"danzzzerl"},"content":"                .withGithub(VALID_GITHUB_AMY).withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":120,"author":{"gitId":"danzzzerl"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withModules(VALID_MODULE_CS2030S)","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"                .withGithub(VALID_GITHUB_BOB).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"songivan00"},"content":"        DESC_FINISH_TP \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_FINISH_TP)","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"songivan00"},"content":"                .withModule(VALID_MODULE_FINISH_TP).withDeadline(VALID_DEADLINE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"songivan00"},"content":"        DESC_LAB_2 \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_LAB_2)","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"songivan00"},"content":"                .withModule(VALID_MODULE_LAB_2).withDeadline(VALID_DEADLINE_LAB_2).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"parnikkapore"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"parnikkapore"},"content":"     * {@code model}\u0027s task list.","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"parnikkapore"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"angkl0"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getSortedTaskList().size());","lastModifiedDate":"2022-10-25"},{"lineNumber":191,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"angkl0"},"content":"        Task task \u003d model.getSortedTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":193,"author":{"gitId":"parnikkapore"},"content":"        final String[] splitName \u003d task.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"parnikkapore"},"content":"        model.updateFilteredTaskList(new TaskContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"angkl0"},"content":"        assertEquals(1, model.getSortedTaskList().size());","lastModifiedDate":"2022-10-25"},{"lineNumber":197,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"angkl0":3,"parnikkapore":30,"JonLamy":5,"songivan00":33,"danzzzerl":17,"-":110}},{"path":"src/test/java/seedu/codeconnect/logic/commands/DeleteContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"public class DeleteContactCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"        DeleteContactCommand deleteFirstCommand \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"        DeleteContactCommand deleteSecondCommand \u003d new DeleteContactCommand(INDEX_SECOND);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"        DeleteContactCommand deleteFirstCommandCopy \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"parnikkapore":10,"songivan00":26,"-":73}},{"path":"src/test/java/seedu/codeconnect/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        Task taskToDelete \u003d model.getSortedTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedTaskList().size() + 1);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        Task taskToDelete \u003d model.getSortedTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND);","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"angkl0"},"content":"        assertTrue(model.getSortedTaskList().isEmpty());","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"angkl0":4,"parnikkapore":92,"songivan00":14}},{"path":"src/test/java/seedu/codeconnect/logic/commands/EditContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"public class EditContactCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"    //should be getTypicalTaskList","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"songivan00"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST, new EditPersonDescriptor());","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST,","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"parnikkapore"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"parnikkapore"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST,","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"songivan00"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"parnikkapore"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"parnikkapore"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"songivan00"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"parnikkapore"},"content":"        final EditContactCommand standardCommand \u003d new EditContactCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"parnikkapore"},"content":"        EditContactCommand commandWithSameValues \u003d new EditContactCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"parnikkapore":17,"songivan00":50,"-":113}},{"path":"src/test/java/seedu/codeconnect/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"songivan00":10,"-":48}},{"path":"src/test/java/seedu/codeconnect/logic/commands/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DESC_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DESC_LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_DEADLINE_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TASK_NAME_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.TaskBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditTaskCommand.","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"public class EditTaskCommandTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        expectedModel.setTask(model.getSortedTaskList().get(0), editedTask);","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"songivan00"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getSortedTaskList().size());","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"        Task lastTask \u003d model.getSortedTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"songivan00"},"content":"        Task editedTask \u003d taskInList.withName(VALID_TASK_NAME_FINISH_TP).withModule(VALID_MODULE_FINISH_TP)","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"songivan00"},"content":"                .withDeadline(VALID_DEADLINE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_FINISH_TP)","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"songivan00"},"content":"                .withModule(VALID_MODULE_FINISH_TP).withDeadline(VALID_DEADLINE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(indexLastTask, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"songivan00"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"songivan00"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST, new EditTaskDescriptor());","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        Task editedTask \u003d model.getSortedTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"songivan00"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"songivan00"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        Task taskInFilteredList \u003d model.getSortedTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"songivan00"},"content":"        Task editedTask \u003d new TaskBuilder(taskInFilteredList).withName(VALID_TASK_NAME_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST,","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_FINISH_TP).build());","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"        expectedModel.setTask(model.getSortedTaskList().get(0), editedTask);","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"songivan00"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"        Task firstTask \u003d model.getSortedTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"songivan00"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"        // The list is sorted in reverse by default","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"        showTaskAtIndex(model, INDEX_SECOND);","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"songivan00"},"content":"        // edit Task in filtered list into a duplicate in task list","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"songivan00"},"content":"        Task taskInList \u003d model.getTaskList().getTaskList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST,","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"songivan00"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"songivan00"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedTaskList().size() + 1);","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"songivan00"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"songivan00"},"content":"     * but smaller than size of task list","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"songivan00"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"songivan00"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"songivan00"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"songivan00"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"songivan00"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"songivan00"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_FINISH_TP).build());","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"songivan00"},"content":"    public void equals() {","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"songivan00"},"content":"        final EditTaskCommand standardCommand \u003d new EditTaskCommand(INDEX_FIRST, DESC_LAB_2);","lastModifiedDate":"2022-10-23"},{"lineNumber":158,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"songivan00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(DESC_LAB_2);","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand commandWithSameValues \u003d new EditTaskCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"songivan00"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"songivan00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"songivan00"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-23"},{"lineNumber":166,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"songivan00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"songivan00"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"songivan00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":171,"author":{"gitId":"songivan00"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-23"},{"lineNumber":172,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":173,"author":{"gitId":"songivan00"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":174,"author":{"gitId":"songivan00"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_SECOND, DESC_LAB_2)));","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":176,"author":{"gitId":"songivan00"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":177,"author":{"gitId":"songivan00"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_FIRST, DESC_FINISH_TP)));","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"songivan00"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"parnikkapore":10,"songivan00":170}},{"path":"src/test/java/seedu/codeconnect/logic/commands/EditTaskDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DESC_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DESC_LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_DEADLINE_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TASK_NAME_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"public class EditTaskDescriptorTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"    public void equals() {","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor descriptorWithSameValues \u003d new EditTaskDescriptor(DESC_LAB_2);","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"        assertTrue(DESC_LAB_2.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"        assertTrue(DESC_LAB_2.equals(DESC_LAB_2));","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"        assertFalse(DESC_LAB_2.equals(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"        assertFalse(DESC_LAB_2.equals(5));","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"        assertFalse(DESC_LAB_2.equals(DESC_FINISH_TP));","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor editedTP \u003d new EditTaskDescriptorBuilder(DESC_LAB_2).withName(VALID_TASK_NAME_FINISH_TP)","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"                .build();","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"        assertFalse(DESC_LAB_2.equals(editedTP));","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"        editedTP \u003d new EditTaskDescriptorBuilder(DESC_LAB_2).withModule(VALID_MODULE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"        assertFalse(DESC_LAB_2.equals(editedTP));","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"        editedTP \u003d new EditTaskDescriptorBuilder(DESC_LAB_2).withDeadline(VALID_DEADLINE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"        assertFalse(DESC_LAB_2.equals(editedTP));","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"songivan00":49}},{"path":"src/test/java/seedu/codeconnect/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"songivan00":5,"-":15}},{"path":"src/test/java/seedu/codeconnect/logic/commands/FindContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.CanHelpWithTaskPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":" * Contains integration tests (interaction with the Model) for {@code FindContactCommand}.","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"public class FindContactCommandTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"    //should be getTypicalTaskList()","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand findFirstCommand \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand findSecondCommand \u003d new FindContactCommand(secondPredicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand findFirstCommandCopy \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":83,"author":{"gitId":"JonLamy"},"content":"    public void execute_searchByValidTask_personFound() {","lastModifiedDate":"2022-11-03"},{"lineNumber":84,"author":{"gitId":"JonLamy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-11-03"},{"lineNumber":85,"author":{"gitId":"JonLamy"},"content":"        CanHelpWithTaskPredicate predicate \u003d new CanHelpWithTaskPredicate(1);","lastModifiedDate":"2022-11-03"},{"lineNumber":86,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2022-11-03"},{"lineNumber":87,"author":{"gitId":"JonLamy"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-11-03"},{"lineNumber":88,"author":{"gitId":"JonLamy"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-03"},{"lineNumber":89,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":90,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":91,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":92,"author":{"gitId":"JonLamy"},"content":"    public void execute_searchByInvalidTask_throwsCommandException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":93,"author":{"gitId":"JonLamy"},"content":"        CanHelpWithTaskPredicate predicate \u003d new CanHelpWithTaskPredicate(100);","lastModifiedDate":"2022-11-03"},{"lineNumber":94,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2022-11-03"},{"lineNumber":95,"author":{"gitId":"JonLamy"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-03"},{"lineNumber":96,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":97,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":98,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":99,"author":{"gitId":"JonLamy"},"content":"    public void withoutArgs_returnCanHelpWithFirstTask() {","lastModifiedDate":"2022-11-03"},{"lineNumber":100,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand expectedCommand \u003d new FindContactCommand(new CanHelpWithTaskPredicate((1)));","lastModifiedDate":"2022-11-03"},{"lineNumber":101,"author":{"gitId":"JonLamy"},"content":"        assertEquals(expectedCommand, FindContactCommand.withoutArgs());","lastModifiedDate":"2022-11-03"},{"lineNumber":102,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":103,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"JonLamy":29,"songivan00":18,"-":63}},{"path":"src/test/java/seedu/codeconnect/logic/commands/FindTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.FINISH_TUTORIAL;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.WATCH_LECTURE;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTaskCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"public class FindTaskCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"                new TaskContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"                new TaskContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand findFirstCommand \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand findSecondCommand \u003d new FindTaskCommand(secondPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand findFirstCommandCopy \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        assertEquals(Collections.emptyList(), model.getSortedTaskList());","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"songivan00"},"content":"        TaskContainsKeywordsPredicate predicate \u003d preparePredicate(\"Tutorial lecture\");","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(Arrays.asList(WATCH_LECTURE, FINISH_TUTORIAL), model.getSortedTaskList());","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"danzzzerl"},"content":"    private TaskContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"danzzzerl"},"content":"        return new TaskContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":1,"parnikkapore":1,"songivan00":12,"danzzzerl":69}},{"path":"src/test/java/seedu/codeconnect/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"songivan00":5,"-":15}},{"path":"src/test/java/seedu/codeconnect/logic/commands/ListContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"public class ListContactCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(new ListContactCommand(), model, ListContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"        Assertions.assertTrue(model.getAddressBook().equals(expectedModel.getAddressBook()));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(new ListContactCommand(), model, ListContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"angkl0":2,"parnikkapore":1,"songivan00":14,"-":25}},{"path":"src/test/java/seedu/codeconnect/logic/commands/ListTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-11-03"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.DeadlineComparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.DefaultComparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListTaskCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"public class ListTaskCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    private Model model;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    public void execute_listIsNotFilteredDefaultComparator_showsSameList() {","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        DefaultComparator comparator \u003d new DefaultComparator();","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        expectedModel.updateSortedTaskList(comparator);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(ListTaskCommand.MESSAGE_SUCCESS, comparator);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(new ListTaskCommand(new DefaultComparator()), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"    public void execute_listIsFilteredDefaultComparator_showsEverything() {","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        Assertions.assertTrue(model.getTaskList().equals(expectedModel.getTaskList()));","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"        DefaultComparator comparator \u003d new DefaultComparator();","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        expectedModel.updateSortedTaskList(comparator);","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(ListTaskCommand.MESSAGE_SUCCESS, comparator);","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(new ListTaskCommand(new DefaultComparator()), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"    public void execute_listIsNotFilteredDeadlineComparator_showsSameList() {","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        DeadlineComparator comparator \u003d new DeadlineComparator();","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        expectedModel.updateSortedTaskList(comparator);","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(ListTaskCommand.MESSAGE_SUCCESS, comparator);","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(new ListTaskCommand(new DeadlineComparator()), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"    public void execute_listIsFilteredDeadlineComparator_showsEverything() {","lastModifiedDate":"2022-11-03"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"        Assertions.assertTrue(model.getTaskList().equals(expectedModel.getTaskList()));","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        DeadlineComparator comparator \u003d new DeadlineComparator();","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        expectedModel.updateSortedTaskList(comparator);","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(ListTaskCommand.MESSAGE_SUCCESS, comparator);","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(new ListTaskCommand(new DeadlineComparator()), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":60,"songivan00":11}},{"path":"src/test/java/seedu/codeconnect/logic/commands/MarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Status;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":" * {@code MarkTaskCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"public class MarkTaskCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    // To make things easier to test, task 0 will be unmarked and task 1 will be marked","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    public MarkTaskCommandTest() {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"        model.setTask(model.getSortedTaskList().get(0), model.getSortedTaskList().get(0).withStatus(false));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        model.setTask(model.getSortedTaskList().get(1), model.getSortedTaskList().get(1).withStatus(true));","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"        Task taskToMark \u003d model.getSortedTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"        Task markedTask \u003d new Task(","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"                taskToMark.getName(), taskToMark.getModule(), taskToMark.getDeadline(), new Status(true));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"        expectedModel.setTask(taskToMark, markedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(MarkTaskCommand.MESSAGE_MARK_TASK_SUCCESS, markedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(markTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedTaskList().size() + 1);","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"        assertCommandFailure(markTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-11-03"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        Task taskToMark \u003d model.getSortedTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-11-03"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"        Task markedTask \u003d new Task(","lastModifiedDate":"2022-11-03"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"                taskToMark.getName(), taskToMark.getModule(), taskToMark.getDeadline(), new Status(true));","lastModifiedDate":"2022-11-03"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"        showTaskAtIndex(expectedModel, INDEX_FIRST);","lastModifiedDate":"2022-11-03"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"        expectedModel.setTask(taskToMark, markedTask);","lastModifiedDate":"2022-11-03"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(MarkTaskCommand.MESSAGE_MARK_TASK_SUCCESS, markedTask);","lastModifiedDate":"2022-11-03"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(markTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-03"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-11-03"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-11-03"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-11-03"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2022-11-03"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-11-03"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"        assertCommandFailure(markTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-03"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"    public void excecute_markUnmarkedTask_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"        Task taskToMark \u003d model.getSortedTaskList().get(0);","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"        Task markedTask \u003d new Task(","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"                taskToMark.getName(), taskToMark.getModule(), taskToMark.getDeadline(), new Status(true));","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"        expectedModel.setTask(taskToMark, markedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(MarkTaskCommand.MESSAGE_MARK_TASK_SUCCESS, markedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(markTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"angkl0"},"content":"    public void execute_markMarkedTask_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(Index.fromZeroBased(1));","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"angkl0"},"content":"        assertCommandFailure(markTaskCommand, model, MarkTaskCommand.MESSAGE_TASK_ALREADY_COMPLETED);","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"angkl0"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskFirstCommand \u003d new MarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskSecondCommand \u003d new MarkTaskCommand(Index.fromZeroBased(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"angkl0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"angkl0"},"content":"        assertTrue(markTaskFirstCommand.equals(markTaskFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"angkl0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskFirstCommandCopy \u003d new MarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"angkl0"},"content":"        assertTrue(markTaskFirstCommand.equals(markTaskFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"angkl0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"angkl0"},"content":"        assertFalse(markTaskFirstCommand.equals(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"angkl0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"angkl0"},"content":"        assertFalse(markTaskFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"angkl0"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"angkl0"},"content":"        assertFalse(markTaskFirstCommand.equals(markTaskSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":115,"parnikkapore":5,"songivan00":15}},{"path":"src/test/java/seedu/codeconnect/logic/commands/UnmarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.commands;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.Messages;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ModelManager;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Status;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":" * {@code UnmarkTaskCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"public class UnmarkTaskCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    // To make things easier to test, task 0 will be marked and task 1 will be unmarked","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    public UnmarkTaskCommandTest() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        model.setTask(model.getSortedTaskList().get(0), model.getSortedTaskList().get(0).withStatus(true));","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"        model.setTask(model.getSortedTaskList().get(1), model.getSortedTaskList().get(1).withStatus(false));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"        Task taskToUnmark \u003d model.getSortedTaskList().get(0);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        Task unmarkedTask \u003d new Task(","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"                taskToUnmark.getName(), taskToUnmark.getModule(), taskToUnmark.getDeadline(), new Status(false));","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        expectedModel.setTask(taskToUnmark, unmarkedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(UnmarkTaskCommand.MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(unmarkTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedTaskList().size() + 1);","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"        assertCommandFailure(unmarkTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-11-03"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-11-03"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"        Task taskToUnmark \u003d model.getSortedTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-11-03"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-11-03"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"        Task unmarkedTask \u003d new Task(","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"                taskToUnmark.getName(), taskToUnmark.getModule(), taskToUnmark.getDeadline(), new Status(false));","lastModifiedDate":"2022-11-03"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"        showTaskAtIndex(expectedModel, INDEX_FIRST);","lastModifiedDate":"2022-11-03"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"        expectedModel.setTask(taskToUnmark, unmarkedTask);","lastModifiedDate":"2022-11-03"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(UnmarkTaskCommand.MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask);","lastModifiedDate":"2022-11-03"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(unmarkTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-03"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-11-03"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-11-03"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-11-03"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2022-11-03"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-11-03"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"        assertCommandFailure(unmarkTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-03"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"    public void excecute_unmarkMarkedTask_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"        Task taskToMark \u003d model.getSortedTaskList().get(0);","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"        Task unmarkedTask \u003d new Task(","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"                taskToMark.getName(), taskToMark.getModule(), taskToMark.getDeadline(), new Status(false));","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"        expectedModel.setTask(taskToMark, unmarkedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(UnmarkTaskCommand.MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(unmarkTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"angkl0"},"content":"    public void execute_unmarkUnmarkedTask_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(Index.fromZeroBased(1));","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"angkl0"},"content":"        assertCommandFailure(unmarkTaskCommand, model, UnmarkTaskCommand.MESSAGE_TASK_ALREADY_NOT_COMPLETED);","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"angkl0"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskFirstCommand \u003d new UnmarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskSecondCommand \u003d new UnmarkTaskCommand(Index.fromZeroBased(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"angkl0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"angkl0"},"content":"        assertTrue(unmarkTaskFirstCommand.equals(unmarkTaskFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"angkl0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskFirstCommandCopy \u003d new UnmarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"angkl0"},"content":"        assertTrue(unmarkTaskFirstCommand.equals(unmarkTaskFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"angkl0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"angkl0"},"content":"        assertFalse(unmarkTaskFirstCommand.equals(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"angkl0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"angkl0"},"content":"        assertFalse(unmarkTaskFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"angkl0"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"angkl0"},"content":"        assertFalse(unmarkTaskFirstCommand.equals(unmarkTaskSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":115,"parnikkapore":5,"songivan00":15}},{"path":"src/test/java/seedu/codeconnect/logic/parser/AddContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.GITHUB_DESC_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_GITHUB_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_MODS_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_COMBINED;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_CS1101;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_CS2030S;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_CS1101;","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_CS2030S;","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.EMPTY_OPTIONAL_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.AddContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Address;","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Github;","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Telegram;","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"songivan00"},"content":"public class AddContactCommandParserTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"    private AddContactCommandParser parser \u003d new AddContactCommandParser();","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"                .withModules(VALID_MODULE_CS2030S).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"                new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"                new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"                new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"danzzzerl"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"danzzzerl"},"content":"                new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"danzzzerl"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"danzzzerl"},"content":"                new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":93,"author":{"gitId":"JonLamy"},"content":"                .withModules(VALID_MODULE_CS2030S).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"danzzzerl"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"                new AddContactCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"        // multiple modules - all accepted","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"JonLamy"},"content":"        Person expectedPersonMultipleModules \u003d new PersonBuilder(BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"JonLamy"},"content":"                .withModules(VALID_MODULE_CS2030S, VALID_MODULE_CS1101).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"JonLamy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"danzzzerl"},"content":"                + TAG_DESC_HUSBAND + MODULE_DESC_CS1101 + MODULE_DESC_CS2030S","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"danzzzerl"},"content":"                + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"JonLamy"},"content":"                new AddContactCommand(expectedPersonMultipleModules));","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"        // multiple modules written in one string - all accepted","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"                        + TAG_DESC_HUSBAND + MODULE_DESC_COMBINED","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"                        + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"                new AddContactCommand(expectedPersonMultipleModules));","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"danzzzerl"},"content":"        // multiple githubs - last github accepted","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"danzzzerl"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"danzzzerl"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"danzzzerl"},"content":"                        + GITHUB_DESC_AMY + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"danzzzerl"},"content":"                new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"danzzzerl"},"content":"        // multiple telegrams - last telegram accepted","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"danzzzerl"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"danzzzerl"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"                        + GITHUB_DESC_BOB + TELEGRAM_DESC_AMY + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"danzzzerl"},"content":"                new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"songivan00"},"content":"        // zero of the optional fields","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"songivan00"},"content":"        Person expectedPerson \u003d new PersonBuilder(EMPTY_OPTIONAL_AMY).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY,","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"danzzzerl"},"content":"                        new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"JonLamy"},"content":"                        + MODULE_DESC_CS2030S, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"JonLamy"},"content":"                        + VALID_MODULE_CS2030S, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":153,"author":{"gitId":"danzzzerl"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"danzzzerl"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"danzzzerl"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"danzzzerl"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"danzzzerl"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"danzzzerl"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"danzzzerl"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"danzzzerl"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"danzzzerl"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"danzzzerl"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"songivan00"},"content":"        // invalid mods","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"danzzzerl"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + INVALID_MODS_DESC + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"danzzzerl"},"content":"                Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"danzzzerl"},"content":"        // invalid Github","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"danzzzerl"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"danzzzerl"},"content":"                        + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + MODULE_DESC_CS2030S","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"danzzzerl"},"content":"                        + INVALID_GITHUB_DESC + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"danzzzerl"},"content":"                Github.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"danzzzerl"},"content":"        // invalid Telegram","lastModifiedDate":"2022-10-24"},{"lineNumber":188,"author":{"gitId":"danzzzerl"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"danzzzerl"},"content":"                        + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + MODULE_DESC_CS2030S","lastModifiedDate":"2022-10-24"},{"lineNumber":190,"author":{"gitId":"danzzzerl"},"content":"                        + GITHUB_DESC_BOB + INVALID_TELEGRAM_DESC,","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"danzzzerl"},"content":"                Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"danzzzerl"},"content":"                + MODULE_DESC_CS2030S + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"danzzzerl"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S","lastModifiedDate":"2022-10-24"},{"lineNumber":200,"author":{"gitId":"danzzzerl"},"content":"                        + GITHUB_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-10-24"},{"lineNumber":201,"author":{"gitId":"songivan00"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"parnikkapore":7,"JonLamy":10,"songivan00":67,"danzzzerl":53,"-":66}},{"path":"src/test/java/seedu/codeconnect/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DEADLINE_DESC_BUY_GROCERIES;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DEADLINE_DESC_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DEADLINE_DESC_LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_MODULE_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_TASK_NAME_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_DEADLINE_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TASK_NAME_BUY_GROCERIES;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TASK_NAME_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.BUY_GROCERIES;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"public class AddTaskCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    private final AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        Task expectedTask \u003d FINISH_TP;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        // Typical usage example","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, VALID_TASK_NAME_FINISH_TP + DEADLINE_DESC_FINISH_TP + MODULE_DESC_FINISH_TP,","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"                new AddTaskCommand(expectedTask));","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        // multiple modules - last module accepted","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"                VALID_TASK_NAME_FINISH_TP + MODULE_DESC_LAB_2 + DEADLINE_DESC_FINISH_TP","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"                        + MODULE_DESC_FINISH_TP, new AddTaskCommand(expectedTask));","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"        // multiple deadlines - last deadline accepted","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"                VALID_TASK_NAME_FINISH_TP + DEADLINE_DESC_LAB_2 + DEADLINE_DESC_FINISH_TP","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"                        + MODULE_DESC_FINISH_TP, new AddTaskCommand(expectedTask));","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"    public void parse_optionalFieldMissing_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"        // optional modules","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"        assertParseSuccess(parser, VALID_TASK_NAME_BUY_GROCERIES + DEADLINE_DESC_BUY_GROCERIES,","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"                new AddTaskCommand(BUY_GROCERIES));","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        // missing name","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"        assertParseFailure(parser, \"\" + DEADLINE_DESC_FINISH_TP + MODULE_DESC_FINISH_TP,","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        // missing deadline prefix","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, VALID_TASK_NAME_FINISH_TP + VALID_DEADLINE_FINISH_TP + MODULE_DESC_FINISH_TP,","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"        // all prefixes missing","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"        assertParseFailure(parser, VALID_TASK_NAME_FINISH_TP + VALID_DEADLINE_FINISH_TP + VALID_MODULE_FINISH_TP,","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        // invalid name","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        assertParseFailure(parser, INVALID_TASK_NAME_DESC + DEADLINE_DESC_FINISH_TP + MODULE_DESC_FINISH_TP,","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"                TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"        // invalid deadline","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, VALID_TASK_NAME_FINISH_TP + INVALID_DEADLINE_DESC + MODULE_DESC_FINISH_TP,","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"                Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        // invalid module","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, VALID_TASK_NAME_FINISH_TP + DEADLINE_DESC_FINISH_TP + INVALID_MODULE_DESC,","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"                Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"        assertParseFailure(parser, INVALID_TASK_NAME_DESC + DEADLINE_DESC_FINISH_TP + INVALID_MODULE_DESC,","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"                TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"parnikkapore":54,"songivan00":32,"danzzzerl":7}},{"path":"src/test/java/seedu/codeconnect/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"songivan00":1,"-":149}},{"path":"src/test/java/seedu/codeconnect/logic/parser/CodeConnectParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.AddContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.ClearCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.ExitCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.FindContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.HelpCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.ListContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.CanHelpWithTaskPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.ModuleTakenPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskContainsModulesPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.TaskBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.TaskUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"public class CodeConnectParserTest {","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"    private final CodeConnectParser parser \u003d new CodeConnectParser();","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"    public void parseCommand_addc() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"        AddContactCommand command \u003d (AddContactCommand) parser.parseCommand(PersonUtil.getAddContactCommand(person));","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"        assertEquals(new AddContactCommand(person), command);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"songivan00"},"content":"        DeleteContactCommand command \u003d (DeleteContactCommand) parser.parseCommand(","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"                DeleteContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(new DeleteContactCommand(INDEX_FIRST), command);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"songivan00"},"content":"    public void parseCommand_editc() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"songivan00"},"content":"        EditContactCommand command \u003d (EditContactCommand) parser.parseCommand(EditContactCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(new EditContactCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"JonLamy"},"content":"    public void parseCommand_findContactByName() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"JonLamy"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"Jacob\", \"Alex\", \"Alice\");","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand command \u003d (FindContactCommand) parser.parseCommand(","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"JonLamy"},"content":"                FindContactCommand.COMMAND_WORD + \" n/ \"","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"JonLamy"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"JonLamy"},"content":"        assertEquals(new FindContactCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"JonLamy"},"content":"    public void parseCommand_findContactByModule() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"JonLamy"},"content":"        List\u003cString\u003e moduleNames \u003d Arrays.asList(\"CS1101S\", \"MA1521\", \"IS1103\");","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand command \u003d (FindContactCommand) parser.parseCommand(","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"JonLamy"},"content":"                FindContactCommand.COMMAND_WORD + \" m/ \"","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"JonLamy"},"content":"                        + moduleNames.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"        assertEquals(new FindContactCommand(new ModuleTakenPredicate(moduleNames)), command);","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"JonLamy"},"content":"    public void parseCommand_findContactByTask() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand command \u003d (FindContactCommand) parser.parseCommand(","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"JonLamy"},"content":"                FindContactCommand.COMMAND_WORD + \" ts/ 3\");","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"JonLamy"},"content":"        assertEquals(new FindContactCommand(new CanHelpWithTaskPredicate(3)), command);","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"danzzzerl"},"content":"    public void parseCommand_findTaskByName() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":111,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand command \u003d (FindTaskCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"danzzzerl"},"content":"                FindTaskCommand.COMMAND_WORD + \" n/ \"","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"danzzzerl"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(new FindTaskCommand(new TaskContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"danzzzerl"},"content":"    public void parseCommand_findTaskByModule() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"angkl0"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"angkl0"},"content":"        keywords.add(\"foo1231\");","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"angkl0"},"content":"        keywords.add(\"bar1101s\");","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"angkl0"},"content":"        keywords.add(\"baz2100\");","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand command \u003d (FindTaskCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"danzzzerl"},"content":"                FindTaskCommand.COMMAND_WORD + \" m/ \" + \"foo1231 bar1101s baz2100\");","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"angkl0"},"content":"        assertEquals(new FindTaskCommand(new TaskContainsModulesPredicate(keywords)), command);","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"songivan00"},"content":"    public void parseCommand_listc() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"songivan00"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD) instanceof ListContactCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"songivan00"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD + \" 3\") instanceof ListContactCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"songivan00"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"songivan00"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(task).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand command \u003d (EditTaskCommand) parser.parseCommand(EditTaskCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"songivan00"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + TaskUtil.getEditTaskDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"songivan00"},"content":"        assertEquals(new EditTaskCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2022-10-23"},{"lineNumber":158,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"angkl0":6,"parnikkapore":4,"JonLamy":21,"songivan00":51,"danzzzerl":12,"-":65}},{"path":"src/test/java/seedu/codeconnect/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.Command;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"songivan00":3,"-":36}},{"path":"src/test/java/seedu/codeconnect/logic/parser/DeleteContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"public class DeleteContactCommandParserTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"    private DeleteContactCommandParser parser \u003d new DeleteContactCommandParser();","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"        assertParseSuccess(parser, \"1\", new DeleteContactCommand(INDEX_FIRST));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"                DeleteContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"parnikkapore":1,"songivan00":10,"-":22}},{"path":"src/test/java/seedu/codeconnect/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" * outside of the DeleteTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" * same path through the DeleteTaskCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(INDEX_FIRST));","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"parnikkapore":26,"songivan00":6}},{"path":"src/test/java/seedu/codeconnect/logic/parser/EditContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_GITHUB_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_MODS_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_COMBINED;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_CS1101;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_CS2030S;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_CS1101;","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_CS2030S;","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Address;","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Github;","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Telegram;","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"songivan00"},"content":"public class EditContactCommandParserTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"songivan00"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"songivan00"},"content":"    private EditContactCommandParser parser \u003d new EditContactCommandParser();","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1\", EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"danzzzerl"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GITHUB_DESC, Github.MESSAGE_CONSTRAINTS); // invalid github","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"danzzzerl"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_DESC, Telegram.MESSAGE_CONSTRAINTS); // invalid tele","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"JonLamy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MODS_DESC, Module.MESSAGE_CONSTRAINTS); // invalid mods","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"danzzzerl"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"danzzzerl"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"danzzzerl"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"danzzzerl"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"danzzzerl"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"danzzzerl"},"content":"                        + VALID_PHONE_AMY + VALID_MODULE_CS1101 + VALID_GITHUB_AMY + INVALID_TELEGRAM_DESC,","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"danzzzerl"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":136,"author":{"gitId":"danzzzerl"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + MODULE_DESC_CS1101","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"danzzzerl"},"content":"                + GITHUB_DESC_AMY + TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-10-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"songivan00"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"danzzzerl"},"content":"                .withModules(VALID_MODULE_CS1101)","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"danzzzerl"},"content":"                .withGithub(VALID_GITHUB_AMY).withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"parnikkapore"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"parnikkapore"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"songivan00"},"content":"        // mods","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"JonLamy"},"content":"        userInput \u003d targetIndex.getOneBased() + MODULE_DESC_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"JonLamy"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withModules(VALID_MODULE_CS1101).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":200,"author":{"gitId":"danzzzerl"},"content":"        // github","lastModifiedDate":"2022-10-25"},{"lineNumber":201,"author":{"gitId":"danzzzerl"},"content":"        userInput \u003d targetIndex.getOneBased() + GITHUB_DESC_AMY;","lastModifiedDate":"2022-10-25"},{"lineNumber":202,"author":{"gitId":"danzzzerl"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGithub(VALID_GITHUB_AMY).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":203,"author":{"gitId":"danzzzerl"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-25"},{"lineNumber":204,"author":{"gitId":"danzzzerl"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":205,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":206,"author":{"gitId":"danzzzerl"},"content":"        // telegram","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"danzzzerl"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-10-25"},{"lineNumber":208,"author":{"gitId":"danzzzerl"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"danzzzerl"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"danzzzerl"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":215,"author":{"gitId":"parnikkapore"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"JonLamy"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + MODULE_DESC_CS1101 + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-11"},{"lineNumber":217,"author":{"gitId":"songivan00"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"JonLamy"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_CS2030S","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"songivan00"},"content":"                + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"songivan00"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"JonLamy"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"JonLamy"},"content":"                .withModules(VALID_MODULE_CS2030S, VALID_MODULE_CS1101).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":225,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":230,"author":{"gitId":"parnikkapore"},"content":"    /** m/A B m/C -\u003e m \u003d\u003d [A,B,C] */","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":232,"author":{"gitId":"parnikkapore"},"content":"    public void parse_spaceSeparatedAndMultipleModules_acceptsAll() {","lastModifiedDate":"2022-10-26"},{"lineNumber":233,"author":{"gitId":"parnikkapore"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"parnikkapore"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + MODULE_DESC_COMBINED + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-26"},{"lineNumber":235,"author":{"gitId":"parnikkapore"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"parnikkapore"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_FINISH_TP","lastModifiedDate":"2022-10-26"},{"lineNumber":237,"author":{"gitId":"parnikkapore"},"content":"                + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":239,"author":{"gitId":"parnikkapore"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":240,"author":{"gitId":"parnikkapore"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"parnikkapore"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"parnikkapore"},"content":"                .withModules(VALID_MODULE_CS2030S, VALID_MODULE_CS1101, VALID_MODULE_FINISH_TP).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":243,"author":{"gitId":"parnikkapore"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":244,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":245,"author":{"gitId":"parnikkapore"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":246,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":247,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"parnikkapore"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-10-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":259,"author":{"gitId":"JonLamy"},"content":"                + PHONE_DESC_BOB + MODULE_DESC_CS2030S;","lastModifiedDate":"2022-10-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"JonLamy"},"content":"                .withAddress(VALID_ADDRESS_BOB).withModules(VALID_MODULE_CS2030S).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":262,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":268,"author":{"gitId":"parnikkapore"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2022-10-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"parnikkapore":25,"JonLamy":9,"songivan00":80,"danzzzerl":26,"-":136}},{"path":"src/test/java/seedu/codeconnect/logic/parser/EditTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DEADLINE_DESC_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.DEADLINE_DESC_LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_MODULE_DESC;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.INVALID_TASK_NAME_PREF;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.MODULE_DESC_LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.TASK_NAME_DESC_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.TASK_NAME_DESC_LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_DEADLINE_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TASK_NAME_FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TASK_NAME_LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"public class EditTaskCommandParserTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"    private EditTaskCommandParser parser \u003d new EditTaskCommandParser();","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"        // no index specified","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, VALID_TASK_NAME_FINISH_TP, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"        // no field specified","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1\", EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"songivan00"},"content":"        // negative index","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"-5\" + TASK_NAME_DESC_FINISH_TP, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"songivan00"},"content":"        // zero index","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"0\" + TASK_NAME_DESC_FINISH_TP, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"songivan00"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"songivan00"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"songivan00"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TASK_NAME_PREF, TaskName.MESSAGE_CONSTRAINTS); // invalid taskname","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MODULE_DESC, Module.MESSAGE_CONSTRAINTS); // invalid module","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEADLINE_DESC, Deadline.MESSAGE_CONSTRAINTS); // invalid deadline","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"songivan00"},"content":"        // invalid module followed by valid deadline","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MODULE_DESC + DEADLINE_DESC_FINISH_TP,","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"songivan00"},"content":"                Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"songivan00"},"content":"        //valid module followed by invalid deadline","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1\" + MODULE_DESC_FINISH_TP + INVALID_DEADLINE_DESC,","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"songivan00"},"content":"                Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"songivan00"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TASK_NAME_PREF + INVALID_MODULE_DESC + INVALID_DEADLINE_DESC,","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"songivan00"},"content":"                TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"songivan00"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"songivan00"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"songivan00"},"content":"        String userInput \u003d targetIndex.getOneBased() + TASK_NAME_DESC_FINISH_TP + DEADLINE_DESC_FINISH_TP","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"songivan00"},"content":"                + MODULE_DESC_FINISH_TP;","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_FINISH_TP)","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"songivan00"},"content":"                .withDeadline(VALID_DEADLINE_FINISH_TP).withModule(VALID_MODULE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"songivan00"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"songivan00"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"songivan00"},"content":"        String userInput \u003d targetIndex.getOneBased() + MODULE_DESC_FINISH_TP + DEADLINE_DESC_FINISH_TP;","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withModule(VALID_MODULE_FINISH_TP)","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"songivan00"},"content":"                .withDeadline(VALID_DEADLINE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"songivan00"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"songivan00"},"content":"        // name","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"songivan00"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"songivan00"},"content":"        String userInput \u003d targetIndex.getOneBased() + TASK_NAME_DESC_FINISH_TP;","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"songivan00"},"content":"        //module","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"songivan00"},"content":"        userInput \u003d targetIndex.getOneBased() + MODULE_DESC_FINISH_TP;","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"songivan00"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withModule(VALID_MODULE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"songivan00"},"content":"        //deadline","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"songivan00"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_FINISH_TP;","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"songivan00"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDeadline(VALID_DEADLINE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"songivan00"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"songivan00"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"songivan00"},"content":"        String userInput \u003d targetIndex.getOneBased() + TASK_NAME_DESC_FINISH_TP + MODULE_DESC_LAB_2","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"songivan00"},"content":"                + DEADLINE_DESC_FINISH_TP + DEADLINE_DESC_LAB_2 + DEADLINE_DESC_FINISH_TP + TASK_NAME_DESC_LAB_2","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"songivan00"},"content":"                + MODULE_DESC_FINISH_TP + MODULE_DESC_LAB_2;","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_LAB_2)","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"songivan00"},"content":"                .withModule(VALID_MODULE_LAB_2).withDeadline(VALID_DEADLINE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"songivan00"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"songivan00"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"songivan00"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"songivan00"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_MODULE_DESC + MODULE_DESC_FINISH_TP;","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"songivan00"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withModule(VALID_MODULE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"songivan00"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"songivan00"},"content":"        // other valid values specified","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"songivan00"},"content":"        userInput \u003d targetIndex.getOneBased() + TASK_NAME_DESC_FINISH_TP + INVALID_MODULE_DESC + MODULE_DESC_FINISH_TP","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"songivan00"},"content":"                + DEADLINE_DESC_FINISH_TP;","lastModifiedDate":"2022-10-23"},{"lineNumber":158,"author":{"gitId":"songivan00"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_FINISH_TP)","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"songivan00"},"content":"                .withModule(VALID_MODULE_FINISH_TP).withDeadline(VALID_DEADLINE_FINISH_TP).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"songivan00"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"songivan00":163}},{"path":"src/test/java/seedu/codeconnect/logic/parser/FindContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.FindContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"public class FindContactCommandParserTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"    private FindContactCommandParser parser \u003d new FindContactCommandParser();","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"        // multiple search prefixes (e.g. both n/ and m/)","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"        assertParseFailure(parser, \" n/Alice m/CS1101S\",","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"        // invalid prefixes","lastModifiedDate":"2022-11-03"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"        assertParseFailure(parser, \"s/foo\",","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-03"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"        assertParseFailure(parser, \"s/foo g/bar\",","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"        // no prefixes","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"        assertParseFailure(parser, \"jeremy\",","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand expectedFindContactCommand \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"                new FindContactCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"        assertParseSuccess(parser, \" n/Alice n/Bob\", expectedFindContactCommand);","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindContactCommand);","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"        assertParseSuccess(parser, \" n/\\n Alice \\n \\t Bob  \\t\", expectedFindContactCommand);","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"JonLamy":27,"songivan00":6,"-":21}},{"path":"src/test/java/seedu/codeconnect/logic/parser/FindTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"public class FindTaskCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    private FindTaskCommandParser parser \u003d new FindTaskCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"                new FindTaskCommand(new TaskContainsKeywordsPredicate(Arrays.asList(\"Study\", \"Shower\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        assertParseSuccess(parser, \" n/Study Shower\", expectedFindCommand);","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        assertParseSuccess(parser, \" n/ \\n Study \\n \\t Shower  \\t\", expectedFindCommand);","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"songivan00":6,"danzzzerl":29}},{"path":"src/test/java/seedu/codeconnect/logic/parser/MarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":" * outside of the MarkTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":" * same path through the MarkTaskCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"public class MarkTaskCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    private MarkTaskCommandParser parser \u003d new MarkTaskCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    public void parse_validArgs_returnsMarkTaskCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        assertParseSuccess(parser, \"1\", new MarkTaskCommand(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        assertParseFailure(","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"                parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":27,"songivan00":6}},{"path":"src/test/java/seedu/codeconnect/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.ArgumentMultimap.DOES_NOT_EXIST;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Address;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    private static final String INVALID_MODULE \u003d \"hello \u003c3\";","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":199,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":200,"author":{"gitId":"parnikkapore"},"content":"    public void parseModule_null_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":201,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseModule(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":202,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":203,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":204,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":205,"author":{"gitId":"parnikkapore"},"content":"    public void parseModule_invalidModule_throwsParseException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":206,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseModule(INVALID_MODULE));","lastModifiedDate":"2022-11-06"},{"lineNumber":207,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":208,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":209,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":210,"author":{"gitId":"parnikkapore"},"content":"    public void parseModule_nullModuleInput_throwsParseException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":211,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseModule(DOES_NOT_EXIST));","lastModifiedDate":"2022-11-06"},{"lineNumber":212,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"parnikkapore":18,"songivan00":11,"-":184}},{"path":"src/test/java/seedu/codeconnect/logic/parser/UnmarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.logic.parser;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":" * outside of the UnmarkTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":" * same path through the UnmarkTaskCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"public class UnmarkTaskCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    private UnmarkTaskCommandParser parser \u003d new UnmarkTaskCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    public void parse_validArgs_returnsUnmarkTaskCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        assertParseSuccess(parser, \"1\", new UnmarkTaskCommand(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        assertParseFailure(","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"                parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":27,"songivan00":6}},{"path":"src/test/java/seedu/codeconnect/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"songivan00":9,"-":93}},{"path":"src/test/java/seedu/codeconnect/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.AddressBookBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"    public void getSortedTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getSortedTaskList().remove(0));","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"songivan00"},"content":"        TaskList differentTaskList \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"songivan00"},"content":"        modelManager \u003d new ModelManager(addressBook, differentTaskList, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"songivan00"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, differentTaskList, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"songivan00"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, differentTaskList, userPrefs)));","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"songivan00"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentTaskList, userPrefs)));","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":136,"author":{"gitId":"songivan00"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentTaskList, differentUserPrefs)));","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"angkl0":2,"songivan00":17,"-":119}},{"path":"src/test/java/seedu/codeconnect/model/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.FINISH_TP_ISH;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"public class TaskListTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    private final TaskList addressBook \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(Collections.emptyList(), addressBook.getTaskList());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    public void resetData_withValidReadOnlyTaskList_replacesData() {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"        TaskList newData \u003d getTypicalTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(FINISH_TP, FINISH_TP_ISH);","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        TaskListStub newData \u003d new TaskListStub(newTasks);","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTask(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_taskNotInTaskList_returnsFalse() {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(addressBook.hasTask(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_taskInTaskList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"        addressBook.addTask(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(addressBook.hasTask(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_taskWithSameIdentityFieldsInTaskList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"        addressBook.addTask(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(addressBook.hasTask(FINISH_TP_ISH));","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTaskList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"     * A stub ReadOnlyTaskList whose tasks list can violate interface constraints.","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"    private static class TaskListStub implements ReadOnlyTaskList {","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        TaskListStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"            return tasks;","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":89,"songivan00":7}},{"path":"src/test/java/seedu/codeconnect/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"songivan00":2,"-":19}},{"path":"src/test/java/seedu/codeconnect/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"songivan00":2,"-":34}},{"path":"src/test/java/seedu/codeconnect/model/person/CanHelpWithTaskPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.TaskBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"public class CanHelpWithTaskPredicateTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"    public void equals() {","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"        int firstTaskIndex \u003d 2;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"        int secondTaskIndex \u003d 4;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"        CanHelpWithTaskPredicate firstPredicate \u003d new CanHelpWithTaskPredicate(firstTaskIndex);","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"        CanHelpWithTaskPredicate secondPredicate \u003d new CanHelpWithTaskPredicate(secondTaskIndex);","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"        CanHelpWithTaskPredicate firstPredicateCopy \u003d new CanHelpWithTaskPredicate(2);","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"    public void test_personTakesTasksModule_returnsTrue() {","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"        // One keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"        CanHelpWithTaskPredicate predicate \u003d CanHelpWithTaskPredicate","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"                .withTask(new TaskBuilder().withModule(\"CS1234\").build());","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModules(\"CS1234\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"        // Mixed case keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"        predicate \u003d CanHelpWithTaskPredicate","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"                .withTask(new TaskBuilder().withModule(\"cs1234\").build());","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModules(\"CS1234\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"    public void test_personNotTakingTasksModule_returnsFalse() {","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"JonLamy"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"JonLamy"},"content":"        CanHelpWithTaskPredicate predicate \u003d CanHelpWithTaskPredicate","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"                .withTask(new TaskBuilder().withModule(\"BIZ1101\").build());","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"JonLamy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withModules(\"CS1234\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"    public void getTaskIndex() {","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"JonLamy"},"content":"        CanHelpWithTaskPredicate testPredicate \u003d new CanHelpWithTaskPredicate(99);","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"        assertEquals(99, testPredicate.getTaskIndex().getOneBased());","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"JonLamy":62,"songivan00":3}},{"path":"src/test/java/seedu/codeconnect/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"songivan00":2,"-":66}},{"path":"src/test/java/seedu/codeconnect/model/person/GithubTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"class GithubTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Github(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public void constructor_invalidGithub_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        String invalidGithub \u003d \"\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Github(invalidGithub));","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    public void isValidGithub() {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        // null address","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"        assertThrows(NullPointerException.class, () -\u003e Github.isValidGh(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(Github.isValidGh(\"\")); // empty string","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(Github.isValidGh(\" \")); // spaces only","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(Github.isValidGh(\"ben wong\")); // more than one word","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        // valid github names","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(Github.isValidGh(\"benwong\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(Github.isValidGh(\"ben-wong\")); // special character inside","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(Github.isValidGh(\"b\")); // one character","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"songivan00":2,"danzzzerl":36}},{"path":"src/test/java/seedu/codeconnect/model/person/ModuleTakenPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"public class ModuleTakenPredicateTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"    public void equals() {","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"        List\u003cString\u003e firstPredicateKeywordsList \u003d Collections.singletonList(\"CS1101S\");","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"        List\u003cString\u003e secondPredicateKeywordsList \u003d Arrays.asList(\"CS1101S\", \"MA1521\");","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"        ModuleTakenPredicate firstPredicate \u003d new ModuleTakenPredicate(firstPredicateKeywordsList);","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"        ModuleTakenPredicate secondPredicate \u003d new ModuleTakenPredicate(secondPredicateKeywordsList);","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"        ModuleTakenPredicate firstPredicateCopy \u003d new ModuleTakenPredicate(firstPredicateKeywordsList);","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"    public void test_personTakesModules_returnsTrue() {","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"        // One keyword","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"        ModuleTakenPredicate predicate \u003d new ModuleTakenPredicate(","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"                Collections.singletonList(\"CS1101S\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModules(\"CS1101S\", \"CS1231S\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new ModuleTakenPredicate(Arrays.asList(\"CS1101S\", \"MA1521\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModules(\"CS1101S\", \"MA1521\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new ModuleTakenPredicate(Arrays.asList(\"CS1101S\", \"IS1103\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"JonLamy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModules(\"CS1101S\", \"MA1521\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"JonLamy"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new ModuleTakenPredicate(Arrays.asList(\"cs1101S\", \"Is1103\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModules(\"CS1101S\", \"MA1521\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"        // Matching substring","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new ModuleTakenPredicate(Arrays.asList(\"1101S\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModules(\"CS1101S\", \"MA1521\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"JonLamy"},"content":"    public void test_personNotTakingModules_returnsFalse() {","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"JonLamy"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"JonLamy"},"content":"        ModuleTakenPredicate predicate \u003d new ModuleTakenPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"JonLamy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withModules(\"CS1101S\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"JonLamy"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new ModuleTakenPredicate(Collections.singletonList(\"CS1101S\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"JonLamy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withModules(\"FSC2101\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"        // Non-matching substring","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new ModuleTakenPredicate(Arrays.asList(\"2001\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"        assertFalse(predicate.test(new PersonBuilder().withModules(\"CS1101S\", \"MA1521\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"angkl0":16,"JonLamy":63,"songivan00":2}},{"path":"src/test/java/seedu/codeconnect/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"        // Matching substring","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Ali\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"        // Non-matching substring","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"ant\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"angkl0":8,"songivan00":2,"-":73}},{"path":"src/test/java/seedu/codeconnect/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"songivan00":2,"-":38}},{"path":"src/test/java/seedu/codeconnect/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"songivan00":10,"-":81}},{"path":"src/test/java/seedu/codeconnect/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"songivan00":2,"-":38}},{"path":"src/test/java/seedu/codeconnect/model/person/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"class TelegramTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public void constructor_invalidTelegram_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        String invalidTelegram \u003d \"\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Telegram(invalidTelegram));","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    public void isValidTelegram() {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        // null address","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidTele(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(Telegram.isValidTele(\"\")); // empty string","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(Telegram.isValidTele(\" \")); // spaces only","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(Telegram.isValidTele(\"ben wong\")); // more than one word","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        // valid github names","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(Telegram.isValidTele(\"benwong\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(Telegram.isValidTele(\"ben-wong\")); // special character inside","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(Telegram.isValidTele(\"b\")); // one character","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"songivan00":2,"danzzzerl":36}},{"path":"src/test/java/seedu/codeconnect/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.person;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"songivan00":9,"-":161}},{"path":"src/test/java/seedu/codeconnect/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"songivan00":2,"-":24}},{"path":"src/test/java/seedu/codeconnect/model/task/DeadlineComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-03"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"public class DeadlineComparatorTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    private TaskList firstTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    private TaskList secondTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    private DeadlineComparator firstDeadlineComparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    private DeadlineComparator secondDeadlineComparator;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    @BeforeEach","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    public void setUp() {","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        firstTaskList \u003d getTypicalTaskList();","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"        secondTaskList \u003d new TaskList();","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"        secondTaskList.addTask(FINISH_TP);","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        Task finishTpCopy \u003d new Task(","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"                new TaskName(\"Finish TP 1\"), FINISH_TP.getModule(), FINISH_TP.getDeadline(), FINISH_TP.getStatus());","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        secondTaskList.addTask(finishTpCopy);","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"        firstDeadlineComparator \u003d new DeadlineComparator(firstTaskList);","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        secondDeadlineComparator \u003d new DeadlineComparator(secondTaskList);","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    public void equals() {","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"        assertTrue(firstDeadlineComparator.equals(firstDeadlineComparator));","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        DeadlineComparator firstDeadlineComparatorCopy \u003d new DeadlineComparator(firstTaskList);","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        assertTrue(firstDeadlineComparator.equals(firstDeadlineComparatorCopy));","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        // different comparator -\u003e returns false","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"        assertFalse(firstDeadlineComparator.equals(secondDeadlineComparator));","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        assertFalse(firstDeadlineComparator.equals(1));","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"        assertFalse(firstDeadlineComparator.equals(null));","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"    public void compare() {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"        Comparator\u003cTask\u003e comparator \u003d new DeadlineComparator();","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"        assertEquals(-1, firstDeadlineComparator.compare(","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"                firstTaskList.getTaskList().get(0), firstTaskList.getTaskList().get(1)));","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"        assertEquals(1, firstDeadlineComparator.compare(","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"                firstTaskList.getTaskList().get(1), firstTaskList.getTaskList().get(0)));","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"        assertEquals(-1, secondDeadlineComparator.compare(","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"                secondTaskList.getTaskList().get(1), secondTaskList.getTaskList().get(0)));","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        assertEquals(1, secondDeadlineComparator.compare(","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"                secondTaskList.getTaskList().get(0), secondTaskList.getTaskList().get(1)));","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"angkl0":65,"songivan00":2}},{"path":"src/test/java/seedu/codeconnect/model/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline((String) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline((LocalDateTime) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_invalidDeadline_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"        String invalidDeadline \u003d \"\";","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDeadline));","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    public void isValidDeadline() {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        // null deadline","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDeadline(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        // invalid deadlines","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Deadline.isValidDeadline(\"\")); // empty string","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Deadline.isValidDeadline(\"Geylang Rd\")); // not in correct format","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        // valid deadlines","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(Deadline.isValidDeadline(\"2006-01-15 15:04\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(Deadline.isValidDeadline(\"2050-02-28 05:04\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":36,"songivan00":2}},{"path":"src/test/java/seedu/codeconnect/model/task/DefaultComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-03"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-03"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-11-03"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-03"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"public class DefaultComparatorTest {","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"    private TaskList firstTaskList;","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    private TaskList secondTaskList;","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    private DefaultComparator firstDefaultComparator;","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    private DefaultComparator secondDefaultComparator;","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    @BeforeEach","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    public void setUp() {","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"        firstTaskList \u003d getTypicalTaskList();","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        secondTaskList \u003d new TaskList();","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"        secondTaskList.addTask(FINISH_TP);","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"        secondTaskList.addTask(LAB_2);","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        firstDefaultComparator \u003d new DefaultComparator(firstTaskList);","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"        secondDefaultComparator \u003d new DefaultComparator(secondTaskList);","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    public void equals() {","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        assertTrue(firstDefaultComparator.equals(firstDefaultComparator));","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"        DefaultComparator firstDefaultComparatorCopy \u003d new DefaultComparator(firstTaskList);","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"        assertTrue(firstDefaultComparator.equals(firstDefaultComparatorCopy));","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        // different comparator -\u003e returns false","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        assertFalse(firstDefaultComparator.equals(secondDefaultComparator));","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"        assertFalse(firstDefaultComparator.equals(1));","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        assertFalse(firstDefaultComparator.equals(null));","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"    public void compare() {","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        // first task before second task in tasklist -\u003e returns 1","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        assertEquals(1,","lastModifiedDate":"2022-11-03"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"                firstDefaultComparator.compare(firstTaskList.getTaskList().get(0), firstTaskList.getTaskList().get(1)));","lastModifiedDate":"2022-11-03"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"        // first task after second task in tasklist -\u003e returns -1","lastModifiedDate":"2022-11-03"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"        assertEquals(-1,","lastModifiedDate":"2022-11-03"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"                firstDefaultComparator.compare(firstTaskList.getTaskList().get(1), firstTaskList.getTaskList().get(0)));","lastModifiedDate":"2022-11-03"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"        // first task and second task has same index in tasklist -\u003e returns 0","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"        assertEquals(0,","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"                firstDefaultComparator.compare(firstTaskList.getTaskList().get(0), firstTaskList.getTaskList().get(0)));","lastModifiedDate":"2022-11-03"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        assertEquals(0,","lastModifiedDate":"2022-11-03"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"                firstDefaultComparator.compare(firstTaskList.getTaskList().get(1), firstTaskList.getTaskList().get(1)));","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-11-03"}],"authorContributionMap":{"angkl0":66,"songivan00":5}},{"path":"src/test/java/seedu/codeconnect/model/task/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"public class ModuleTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_invalidModule_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"        String invalidModule \u003d \"\";","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(invalidModule));","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    public void isValidModule() {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        // null module","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e Module.isValidModule(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        // invalid modules","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Module.isValidModule(\"\")); // empty string","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Module.isValidModule(\" \")); // spaces only","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Module.isValidModule(\"A B\")); // has spaces","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(Module.isValidModule(\"#\")); // one character","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"        assertFalse(Module.isValidModule(\"USGCSDSA13495798735729475238945273858gf_ewt3wi4rw34\")); // long module","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        // valid modules","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(Module.isValidModule(\"CS2103T\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"        assertTrue(Module.isValidModule(\"CFG1003\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":33,"JonLamy":4,"songivan00":3,"danzzzerl":1}},{"path":"src/test/java/seedu/codeconnect/model/task/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"public class StatusTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    public void isValidStatus() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"        // null address","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        assertFalse(Status.isValidStatus(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"        assertFalse(Status.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        assertFalse(Status.isValidStatus(\"a\")); // invalid string","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        // valid addresses","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"        assertTrue(Status.isValidStatus(\"Complete\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        assertTrue(Status.isValidStatus(\"Not complete\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    public void getIsComplete() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"        assertFalse(new Status(\"Not complete\").getIsComplete());","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        assertTrue(new Status(\"Complete\").getIsComplete());","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        assertFalse(new Status(false).getIsComplete());","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        assertTrue(new Status(true).getIsComplete());","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":42,"songivan00":2}},{"path":"src/test/java/seedu/codeconnect/model/task/TaskContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"public class TaskContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate firstPredicate \u003d new TaskContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate secondPredicate \u003d new TaskContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate firstPredicateCopy \u003d new TaskContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        // One keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate predicate \u003d new","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"                TaskContainsKeywordsPredicate(Collections.singletonList(\"Science\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"        predicate \u003d new TaskContainsKeywordsPredicate(Arrays.asList(\"Science\", \"Math\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"        predicate \u003d new TaskContainsKeywordsPredicate(Arrays.asList(\"Math\", \"English\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science English homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"        predicate \u003d new TaskContainsKeywordsPredicate(Arrays.asList(\"sCIeNce\", \"maTH\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        // Matching substring","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new TaskContainsKeywordsPredicate(Arrays.asList(\"sci\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate predicate \u003d new TaskContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(predicate.test(new Task(new TaskName(\"Science homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"        predicate \u003d new TaskContainsKeywordsPredicate(Arrays.asList(\"English\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(predicate.test(new Task(new TaskName(\"Science homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"        // Non-matching substring","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new TaskContainsKeywordsPredicate(Arrays.asList(\"sca\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"        assertFalse(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":10,"songivan00":2,"danzzzerl":75}},{"path":"src/test/java/seedu/codeconnect/model/task/TaskContainsModulesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"public class TaskContainsModulesPredicateTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"        List\u003cString\u003e firstPredicateModuleList \u003d Collections.singletonList(\"MOD1\");","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"        List\u003cString\u003e secondPredicateModuleList \u003d Arrays.asList(\"MOD1\", \"MOD2\");","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsModulesPredicate firstPredicate \u003d new TaskContainsModulesPredicate(firstPredicateModuleList);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsModulesPredicate secondPredicate \u003d new TaskContainsModulesPredicate(secondPredicateModuleList);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsModulesPredicate firstPredicateCopy \u003d new TaskContainsModulesPredicate(firstPredicateModuleList);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    public void test_moduleContainsModules_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        // One keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsModulesPredicate predicate \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"                new TaskContainsModulesPredicate(Collections.singletonList(\"Mod1\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"Mod1\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new TaskContainsModulesPredicate(Collections.singletonList(\"mOd2\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MOD2\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        // Matching substring","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new TaskContainsModulesPredicate(Collections.singletonList(\"1521\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"    public void test_moduleDoesNotContainModules_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsModulesPredicate predicate \u003d new TaskContainsModulesPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"Mod1\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new TaskContainsModulesPredicate(Collections.singletonList(\"BZ1101\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"Mod1\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"        // Non-matching substring","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"        predicate \u003d new TaskContainsModulesPredicate(Collections.singletonList(\"1231\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"        assertFalse(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":15,"songivan00":2,"danzzzerl":60}},{"path":"src/test/java/seedu/codeconnect/model/task/TaskNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"public class TaskNameTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskName(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskName(invalidName));","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"        // null name","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskName.isValidName(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        // invalid name","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\"\")); // empty string","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\"\\t\")); // other whitespace only","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\"peter\\n\")); // contains other whitespace","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"        // valid name","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":38,"songivan00":2}},{"path":"src/test/java/seedu/codeconnect/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"public class TaskTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleA \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2006-01-15 15:04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleB \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2006-01-15 15:04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleC \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2010-04-15 08:30\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleD \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Dugong\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2006-01-15 15:04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleE \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"a\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2006-01-15 15:04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleF \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A \"),","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2006-01-15 15:04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    public void isSameTask() {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(sampleA.isSameTask(sampleA));","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(sampleA.isSameTask(sampleB));","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes except date -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(sampleA.isSameTask(sampleC));","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(sampleD));","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"        // different name casing -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(sampleE));","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"        // trailing space in name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(sampleF));","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"    public void equals() {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(sampleA, sampleA);","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, null);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes except date -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleC);","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleD);","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        // different name casing -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleE);","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"        // trailing space in name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleF);","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"    public void withCompletion_smokeTest() {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        Task a \u003d sampleA.withStatus(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"        Task b \u003d sampleB.withStatus(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"        Task c \u003d sampleA.withStatus(true).withStatus(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(a.getStatus().getIsComplete());","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(b.getStatus().getIsComplete());","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(c.getStatus().getIsComplete());","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":16,"parnikkapore":82,"JonLamy":1,"songivan00":2}},{"path":"src/test/java/seedu/codeconnect/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.model.task;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.FINISH_TP_ISH;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.LAB_2;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(uniqueTaskList.contains(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(uniqueTaskList.contains(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    public void contains_weaklyEqualTaskInList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(uniqueTaskList.contains(FINISH_TP_ISH));","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(FINISH_TP, null));","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(FINISH_TP, FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTask(FINISH_TP, FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTask(FINISH_TP, FINISH_TP_ISH);","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(FINISH_TP_ISH);","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTask(FINISH_TP, LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(FINISH_TP, LAB_2));","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.remove(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(FINISH_TP, FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"parnikkapore"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"parnikkapore"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":157,"songivan00":7}},{"path":"src/test/java/seedu/codeconnect/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Address;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Github;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Telegram;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"    private static final String INVALID_MODULES \u003d \" \";","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    private static final String INVALID_GITHUB \u003d \" \";","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    private static final String INVALID_TELEGRAM \u003d \" \";","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"    private static final List\u003cJsonAdaptedModule\u003e VALID_MODULES \u003d BENSON.getModules().stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"            .map(JsonAdaptedModule::new)","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"    private static final String VALID_GITHUB \u003d BENSON.getGithub().toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getTelegram().toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_MODULES,","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"                        VALID_GITHUB, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"songivan00"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"                VALID_MODULES, VALID_GITHUB, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_MODULES,","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"                        VALID_GITHUB, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"songivan00"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"danzzzerl"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_MODULES, VALID_GITHUB, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"danzzzerl"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_MODULES,","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"danzzzerl"},"content":"                        VALID_GITHUB, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"songivan00"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"danzzzerl"},"content":"                VALID_TAGS, VALID_MODULES, VALID_GITHUB, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"danzzzerl"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_MODULES,","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"danzzzerl"},"content":"                        VALID_GITHUB, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"songivan00"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"danzzzerl"},"content":"                VALID_MODULES, VALID_GITHUB, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"danzzzerl"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_MODULES,","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"danzzzerl"},"content":"                        VALID_GITHUB, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"songivan00"},"content":"    public void toModelType_invalidMods_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"JonLamy"},"content":"        List\u003cJsonAdaptedModule\u003e invalidModules \u003d new ArrayList\u003c\u003e(VALID_MODULES);","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"JonLamy"},"content":"        invalidModules.add(new JsonAdaptedModule(INVALID_MODULES));","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"songivan00"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"danzzzerl"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, invalidModules,","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"danzzzerl"},"content":"                        VALID_GITHUB, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"JonLamy"},"content":"        String expectedMessage \u003d Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"songivan00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"danzzzerl"},"content":"    public void toModelType_invalidGithub_throwsIllegalValueException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"danzzzerl"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"danzzzerl"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_MODULES,","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"danzzzerl"},"content":"                        INVALID_GITHUB, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"danzzzerl"},"content":"        String expectedMessage \u003d Github.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-24"},{"lineNumber":147,"author":{"gitId":"danzzzerl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-24"},{"lineNumber":148,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"danzzzerl"},"content":"    public void toModelType_nullGithub_throwsIllegalValueException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"danzzzerl"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"danzzzerl"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_MODULES,","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"danzzzerl"},"content":"                        null, VALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"danzzzerl"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Github.class.getSimpleName());","lastModifiedDate":"2022-10-24"},{"lineNumber":156,"author":{"gitId":"danzzzerl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"danzzzerl"},"content":"    public void toModelType_invalidTelegram_throwsIllegalValueException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"danzzzerl"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"danzzzerl"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_MODULES,","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"danzzzerl"},"content":"                        VALID_GITHUB, INVALID_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"danzzzerl"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"danzzzerl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"danzzzerl"},"content":"    public void toModelType_nullTelegram_throwsIllegalValueException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"danzzzerl"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"danzzzerl"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_MODULES,","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"danzzzerl"},"content":"                        VALID_GITHUB, null);","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"danzzzerl"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Telegram.class.getSimpleName());","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"danzzzerl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JonLamy":7,"songivan00":22,"danzzzerl":55,"-":92}},{"path":"src/test/java/seedu/codeconnect/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Status;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"class JsonAdaptedTaskTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"    private static final String INVALID_TASKNAME \u003d \" \";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    private static final String INVALID_MODULE \u003d \" \";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    private static final String INVALID_DEADLINE \u003d \"123456\";","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    private static final String INVALID_STATUS \u003d \"a\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    private static final String VALID_TASKNAME \u003d FINISH_TP.getName().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    private static final String VALID_MODULE \u003d FINISH_TP.getModule().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    private static final String VALID_DEADLINE \u003d FINISH_TP.getDeadline().deadlineString();","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    private static final String VALID_STATUS \u003d FINISH_TP.getStatus().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(FINISH_TP);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        assertEquals(FINISH_TP, task.toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    public void toModelType_nullTaskName_throwsIllegalValueException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_MODULE, VALID_DEADLINE, VALID_STATUS);","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName());","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"    public void toModelType_invalidTaskName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(INVALID_TASKNAME, VALID_MODULE, VALID_DEADLINE, VALID_STATUS);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d TaskName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"    public void toModelType_nullModule_throwsIllegalValueException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASKNAME, null, VALID_DEADLINE, VALID_STATUS);","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Module.class.getSimpleName());","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"    public void toModelType_invalidModule_throwsIllegalValueException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASKNAME, INVALID_MODULE, VALID_DEADLINE, VALID_STATUS);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"    public void toModelType_nullDeadline_throwsIllegalValueException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASKNAME, VALID_MODULE, null, VALID_STATUS);","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName());","lastModifiedDate":"2022-11-03"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASKNAME, VALID_MODULE, INVALID_DEADLINE, VALID_STATUS);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d Deadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASKNAME, VALID_MODULE, VALID_DEADLINE, null);","lastModifiedDate":"2022-11-03"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2022-11-03"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASKNAME, VALID_MODULE, VALID_DEADLINE, INVALID_STATUS);","lastModifiedDate":"2022-11-03"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-03"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":79,"songivan00":9}},{"path":"src/test/java/seedu/codeconnect/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"songivan00":10,"-":101}},{"path":"src/test/java/seedu/codeconnect/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.JsonUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.TypicalPersons;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"songivan00":6,"-":41}},{"path":"src/test/java/seedu/codeconnect/storage/JsonSerializableTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-03"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-11-03"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-03"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.util.JsonUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.testutil.TypicalTasks;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"public class JsonSerializableTaskListTest {","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTaskListTest\");","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksTaskList.json\");","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskTaskList.json\");","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskTaskList.json\");","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"        TaskList taskListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        TaskList typicalTasksTaskList \u003d TypicalTasks.getTypicalTaskList();","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"        assertEquals(taskListFromFile, typicalTasksTaskList);","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTaskList.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-11-03"}],"authorContributionMap":{"angkl0":41,"songivan00":6}},{"path":"src/test/java/seedu/codeconnect/storage/JsonTaskListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.BUY_GROCERIES;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.WATCH_LECTURE;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyTaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"public class JsonTaskListStorageTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskListStorageTest\");","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    @TempDir","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    public void readTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaskList(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    private java.util.Optional\u003cReadOnlyTaskList\u003e readTaskList(String filePath) throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        return new JsonTaskListStorage(Paths.get(filePath)).readTaskList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"                : null;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"        assertFalse(readTaskList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskList(\"notJsonFormatTaskList.json\"));","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"    public void readTaskList_invalidTaskTaskList_throwDataConversionException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskList(\"invalidTaskTaskList.json\"));","lastModifiedDate":"2022-11-03"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"    public void readTaskList_invalidAndValidTaskTaskList_throwDataConversionException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskList(\"invalidAndValidTaskTaskList.json\"));","lastModifiedDate":"2022-11-03"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTaskList.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        TaskList original \u003d getTypicalTaskList();","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"        JsonTaskListStorage jsonTaskListStorage \u003d new JsonTaskListStorage(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"        ReadOnlyTaskList readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"        assertEquals(original, new TaskList(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"        original.addTask(BUY_GROCERIES);","lastModifiedDate":"2022-11-03"},{"lineNumber":76,"author":{"gitId":"songivan00"},"content":"        original.removeTask(WATCH_LECTURE);","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"        assertEquals(original, new TaskList(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"        original.addTask(WATCH_LECTURE);","lastModifiedDate":"2022-11-03"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"        jsonTaskListStorage.saveTaskList(original); // file path not specified","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList().get(); // file path not specified","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"        assertEquals(original, new TaskList(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList_nullTaskList_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"     * Saves {@code taskList} at the specified {@code filePath}.","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"    private void saveTaskList(ReadOnlyTaskList taskList, String filePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"        try {","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"            new JsonTaskListStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"                    .saveTaskList(taskList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"angkl0"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(new TaskList(), null));","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"angkl0":100,"songivan00":10}},{"path":"src/test/java/seedu/codeconnect/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"songivan00":5,"-":118}},{"path":"src/test/java/seedu/codeconnect/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.UserPrefs;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(getTempFilePath(\"tl\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, taskListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"angkl0":2,"songivan00":6,"-":61}},{"path":"src/test/java/seedu/codeconnect/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":3,"-":31}},{"path":"src/test/java/seedu/codeconnect/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"songivan00":1,"-":33}},{"path":"src/test/java/seedu/codeconnect/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Address;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Github;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Telegram;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"        descriptor.setMods(person.getModules());","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        descriptor.setGithub(person.getGithub());","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"        descriptor.setTelegram(person.getTelegram());","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"songivan00"},"content":"     * Sets the {@code Mods} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"JonLamy"},"content":"    public EditPersonDescriptorBuilder withModules(String... mods) {","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"JonLamy"},"content":"        Set\u003cModule\u003e moduleSet \u003d Stream.of(mods).map(Module::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"JonLamy"},"content":"        descriptor.setMods(moduleSet);","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"danzzzerl"},"content":"     * Sets the {@code Github} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"danzzzerl"},"content":"    public EditPersonDescriptorBuilder withGithub(String gh) {","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"danzzzerl"},"content":"        descriptor.setGithub(new Github(gh));","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"danzzzerl"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"danzzzerl"},"content":"     * Sets the {@code Telegram} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"danzzzerl"},"content":"    public EditPersonDescriptorBuilder withTelegram(String tele) {","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"danzzzerl"},"content":"        descriptor.setTelegram(new Telegram(tele));","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"danzzzerl"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"JonLamy":4,"songivan00":17,"danzzzerl":18,"-":79}},{"path":"src/test/java/seedu/codeconnect/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"    private EditTaskDescriptor descriptor;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"    public EditTaskDescriptorBuilder(EditTaskDescriptor descriptor) {","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"        this.descriptor \u003d new EditTaskDescriptor(descriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"        descriptor.setName(task.getName());","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"        descriptor.setModule(task.getModule());","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"        descriptor.setDeadline(task.getDeadline());","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"        descriptor.setName(new TaskName(name));","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"     * Sets the {@code Module} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"    public EditTaskDescriptorBuilder withModule(String module) {","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"        descriptor.setModule(new Module(module));","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"     * Sets the {@code Deadline} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"    public EditTaskDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"        descriptor.setDeadline(new Deadline(deadline));","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"songivan00"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"songivan00"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"        return descriptor;","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"songivan00"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"songivan00":61}},{"path":"src/test/java/seedu/codeconnect/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Address;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Email;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Github;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Name;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Phone;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Telegram;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.util.SampleDataUtil;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    public static final String DEFAULT_GITHUB \u003d \"AmesBees\";","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"amybee\";","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"    private Set\u003cModule\u003e modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    private Github github;","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    private Telegram telegram;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"        modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"        github \u003d new Github(DEFAULT_GITHUB);","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        telegram \u003d new Telegram(DEFAULT_TELEGRAM);","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"        modules \u003d new HashSet\u003c\u003e(personToCopy.getModules());","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"        github \u003d personToCopy.getGithub();","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"        telegram \u003d personToCopy.getTelegram();","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"JonLamy"},"content":"     * Parses the {@code NusModules} into a {@code Set\u003cNusModules\u003e}","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"JonLamy"},"content":"     * and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"JonLamy"},"content":"    public PersonBuilder withModules(String... moduleNames) {","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"JonLamy"},"content":"        this.modules \u003d SampleDataUtil.getModuleSet(moduleNames);","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"JonLamy"},"content":"        return this;","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"danzzzerl"},"content":"     * Sets the {@code Github} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"danzzzerl"},"content":"    public PersonBuilder withGithub(String github) {","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"danzzzerl"},"content":"        this.github \u003d new Github(github);","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"danzzzerl"},"content":"     * Sets the {@code Telegram} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"danzzzerl"},"content":"    public PersonBuilder withTelegram(String telegram) {","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"danzzzerl"},"content":"        this.telegram \u003d new Telegram(telegram);","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"danzzzerl"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":133,"author":{"gitId":"danzzzerl"},"content":"        return new Person(name, phone, email, address, tags, modules, github, telegram);","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"JonLamy":13,"songivan00":11,"danzzzerl":25,"-":87}},{"path":"src/test/java/seedu/codeconnect/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.AddContactCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.tag.Tag;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"    public static String getAddContactCommand(Person person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"        return AddContactCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"        person.getModules().stream().forEach(","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"                s -\u003e sb.append(PREFIX_MODULE + s.moduleName + \" \")","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"        sb.append(PREFIX_GITHUB + person.getGithub().value + \" \");","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"        sb.append(PREFIX_TELEGRAM + person.getTelegram().telehandle + \" \");","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"        descriptor.getGithub().ifPresent(gh -\u003e sb.append(PREFIX_GITHUB).append(gh.value).append(\" \"));","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"        descriptor.getTelegram().ifPresent(tele -\u003e sb.append(PREFIX_TELEGRAM).append(tele.telehandle).append(\" \"));","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"JonLamy"},"content":"        if (descriptor.getMods().isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"JonLamy"},"content":"            Set\u003cModule\u003e modules \u003d descriptor.getMods().get();","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"JonLamy"},"content":"            if (modules.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"JonLamy"},"content":"                sb.append(PREFIX_MODULE);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"JonLamy"},"content":"            } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"JonLamy"},"content":"                modules.forEach(s -\u003e sb.append(PREFIX_MODULE).append(s.moduleName).append(\" \"));","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"JonLamy"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"JonLamy":12,"songivan00":16,"danzzzerl":4,"-":49}},{"path":"src/test/java/seedu/codeconnect/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":1,"-":71}},{"path":"src/test/java/seedu/codeconnect/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Status;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"public class TaskBuilder {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"    public static final String DEFAULT_NAME \u003d \"Tutorial 3\";","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"    public static final String DEFAULT_MODULE \u003d \"CS1231S\";","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"    public static final String DEFAULT_DEADLINE \u003d \"2022-12-12 23:59\";","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"    private TaskName name;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"    private Module module;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"    private Status status;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"    public TaskBuilder() {","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        name \u003d new TaskName(DEFAULT_NAME);","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"        module \u003d new Module(DEFAULT_MODULE);","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"        deadline \u003d new Deadline(DEFAULT_DEADLINE);","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"        status \u003d new Status(false);","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"        name \u003d taskToCopy.getName();","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"        module \u003d taskToCopy.getModule();","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"        deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"        status \u003d taskToCopy.getStatus();","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"     * Sets the {@code TaskName} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"        this.name \u003d new TaskName(name);","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"     * Sets the {@code Module} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"    public TaskBuilder withModule(String module) {","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"songivan00"},"content":"        this.module \u003d new Module(module);","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"songivan00"},"content":"     * Sets the {@code Deadline} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"songivan00"},"content":"    public TaskBuilder withDeadline(String deadline) {","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"songivan00"},"content":"        this.deadline \u003d new Deadline(deadline);","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"songivan00"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"songivan00"},"content":"    public Task build() {","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"songivan00"},"content":"        return new Task(name, module, deadline, status);","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"songivan00"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"songivan00":70}},{"path":"src/test/java/seedu/codeconnect/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":" * A utility class for Task.","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"public class TaskUtil {","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"     * Returns an add task string for adding the {@code task}.","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"    public static String getAddTaskCommand(Task task) {","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"        return AddTaskCommand.COMMAND_WORD + \" \" + getTaskDetails(task);","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"    public static String getTaskDetails(Task task) {","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"        sb.append(PREFIX_NAME + task.getName().fullName + \" \");","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"        sb.append(PREFIX_MODULE + task.getModule().moduleName + \" \");","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"        sb.append(PREFIX_DEADLINE + task.getDeadline().toString() + \" \");","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"     * Returns the part of command string for the given {@code EditTaskDescriptor}\u0027s details.","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"    public static String getEditTaskDescriptorDetails(EditTaskCommand.EditTaskDescriptor descriptor) {","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"        descriptor.getModule().ifPresent(module -\u003e sb.append(PREFIX_MODULE).append(module.moduleName).append(\" \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"        descriptor.getDeadline().ifPresent(deadline -\u003e sb.append(PREFIX_DEADLINE).append(deadline.deadlineString())","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"                .append(\" \"));","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"songivan00":46}},{"path":"src/test/java/seedu/codeconnect/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.Model;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":4,"-":51}},{"path":"src/test/java/seedu/codeconnect/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.commons.core.index.Index;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"parnikkapore":3,"songivan00":2,"-":7}},{"path":"src/test/java/seedu/codeconnect/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_CS1101;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_MODULE_CS2030S;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.person.Person;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"            .withTags(\"friends\").withModules(\"CS1101\", \"CS1231S\", \"ES2660\", \"MA1521\", \"IS1103\")","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"            .withGithub(\"alicePau\").withTelegram(\"APauline\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"            .withTags(\"owesMoney\", \"friends\").withGithub(\"bensonnn\")","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"            .withTelegram(\"bensonnn\").withGithub(\"benson\").withTelegram(\"bensonmeier\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withGithub(\"CarlKurz\").withTelegram(\"KarlCurz\")","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"            .build();","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"            .withModules(\"CS1101\", \"CS1231S\", \"ES2660\", \"MA1521\", \"IS1103\")","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"            .withGithub(\"Daneeale\").withTelegram(\"danielmei\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"            .withModules(\"CS2030S\", \"CS2040S\", \"ES2660\", \"MA2001\", \"IS1103\")","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"            .withGithub(\"Elleyer\").withTelegram(\"ellemeyes\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"            .withModules(\"CS2001\", \"CS2101\", \"CS2103T\", \"ST2334\", \"IS1103\")","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"            .withGithub(\"FionaKunzz\").withTelegram(\"kunzfiona\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"            .withModules(\"CS2030S\", \"CS1231S\", \"MA2001\", \"MA1521\", \"IS1103\")","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"            .withGithub(\"georgey\").withTelegram(\"GTheBest\").build();","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"            .withModules(\"CS1101\", \"CS1231S\", \"GEN2001\", \"MA1521\", \"IS1103\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"JonLamy"},"content":"            .withModules(\"CS1101\", \"CS1231S\", \"ES2660\", \"MA1521\", \"GC1049\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"JonLamy"},"content":"    ////////////////////////////////////////////////","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"songivan00"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"            .withModules(VALID_MODULE_CS1101)","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"            .withGithub(VALID_GITHUB_AMY).withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"songivan00"},"content":"    public static final Person EMPTY_OPTIONAL_AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"songivan00"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(\"-\").withAddress(\"-\").withTags()","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"songivan00"},"content":"            .withModules().withGithub(\"-\").withTelegram(\"-\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":81,"author":{"gitId":"danzzzerl"},"content":"            .withModules(VALID_MODULE_CS2030S)","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"danzzzerl"},"content":"            .withGithub(VALID_GITHUB_BOB).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"JonLamy":4,"songivan00":29,"danzzzerl":17,"-":52}},{"path":"src/test/java/seedu/codeconnect/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.testutil;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.TaskList;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.module.Module;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Status;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"    public static final Task FINISH_TUTORIAL \u003d new Task(","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"            new TaskName(\"Finish tutorial 6\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"            new Module(\"MA1521\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"            new Deadline(\"2022-11-14 00:00\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"            new Status(false)","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"    );","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"    public static final Task WATCH_LECTURE \u003d new Task(","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"            new TaskName(\"Watch week 5 lecture\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"            new Module(\"CS2103T\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"            new Deadline(\"2022-11-19 00:00\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"            new Status(false)","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"    );","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    public static final Task FINISH_TP \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Finish TP\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"CS2103T\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2022-11-15 00:00\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"    public static final Task BUY_GROCERIES \u003d new Task(","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"            new TaskName(\"Buy Groceries\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"            new Module(\"-\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"            new Deadline(\"2022-07-15 00:00\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"            new Status(false)","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"    );","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    /** Weakly but not strongly equivalent to FINISH_TP. */","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    public static final Task FINISH_TP_ISH \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Finish TP\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"CS2103T\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2022-12-12 12:00\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"            new Status(true)","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    public static final Task LAB_2 \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Lab 2\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"CS2030S\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2022-02-02 23:59\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    // This one is not in typicalTasks so that it can be added without issues","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    public static final Task LAB_3 \u003d new Task(","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Lab 3\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"CS2030S\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"            new Deadline(\"2022-03-15 23:59\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"            new Status(true)","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"songivan00"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FINISH_TUTORIAL, WATCH_LECTURE));","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"    public static TaskList getTypicalTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"            tl.addTask(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        return tl;","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":5,"parnikkapore":52,"songivan00":22,"danzzzerl":7}},{"path":"src/test/java/seedu/codeconnect/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"songivan00":1,"-":34}},{"path":"src/test/java/seedu/codeconnect/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"package seedu.codeconnect.ui;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.codeconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.codeconnect.MainApp;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"songivan00":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"\u003c?import seedu.codeconnect.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"songivan00":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"\u003cfx:root type\u003d\"seedu.codeconnect.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"songivan00":1,"-":5}}]
