[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![Code coverage](https://codecov.io/gh/AY2223S1-CS2103T-T14-2/tp/branch/master/graph/badge.svg?token\u003dHGCQQ52YOS)](https://codecov.io/gh/AY2223S1-CS2103T-T14-2/tp)","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"# About","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"Have you ever been struggling with a coding assignment for days, wanting to reach out to a friend, but not knowing who?","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"Do you ever get overwhelmed with tasks, not knowing which to prioritize?","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"CodeConnect solves both these problems at once by integrating your contacts with your tasks! CodeConnect is a command based application written in Java that runs locally in your computer. Our motivation was to provide a simple and friendly solution to the hectic life of computing students.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"CodeConnect allows you to quickly manage your tasks and contacts through a text based command line interface, with the option of using your mouse for quicker navigation. Tasks and contacts can be easily searched for and sorted to, to provide enhanced organization and management functionality.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"## Features","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"* Keep track of your tasks, their deadlines, and the modules they belong to","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"  * Mark them as complete or uncompleted","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"  * Have your contacts and tasks all listed out in a specified order!!","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"* Manage your contacts and keep track of the modules they are taking","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"## Usage","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"### Finding tasks: `find`","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"Finds tasks from your task list via keywords, or via module. ","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"`find /t {task}`, `find /m {module}`","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"* `find /t homework` returns `Science homework`, `Math homework`","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"* `find /m CS1101S` returns `Problem set 4`, `Reading assignment 2`","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"### Adding a task: `add`","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"Adds a task to the task manager.","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"`add {task_name} /by {deadline} /mod {module_code}`","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"* `add finish problem set 5 /by Week 6 Sunday /mod CS2040S`","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"* `add finish SEP application /by 2359 today`","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"### Deleting a task: `del`","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"Deletes a task from the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"`del {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"`del 5`","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"### Marking a task: `mark`","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"Marks a task as completed in the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"`mark {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"`mark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"Marks a task as incomplete in the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"`unmark {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"`unmark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"songivan00"},"content":"### Listing tasks: `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"songivan00"},"content":"Listing all tasks either in the order of the most recent task added or timing of deadline.","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"songivan00"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"songivan00"},"content":"`list / list time`","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"songivan00"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"* `list` (order of most recent task added)","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"songivan00"},"content":"* `list time` (order of timing of deadline)","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"### Adding a contact: `addc`","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"Adds a contact to the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"Format: `addc {name} /email {email} /hp {phone number} /mods {module1} {module2}...`","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"* `addc Bob Martin /email bobbymartini@gmail.com /hp 98765432 /mods CS1101S CS1231S`","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"* `addc Betsy Crowe /email betsycrowe@gmail.com /hp 89985432`","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"### Deleting a contact: `delc`","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"Deletes the specified contact from the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"Format: `delc {contact_index}`","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":103,"author":{"gitId":"angkl0"},"content":"Example:","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"angkl0"},"content":"* `delc 2` deletes the contact at index 2 in the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"songivan00"},"content":"### Finding contacts: `findc`","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"danzzzerl"},"content":"Find persons in your contacts via keywords, or via module.","lastModifiedDate":"2022-09-29"},{"lineNumber":109,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":110,"author":{"gitId":"danzzzerl"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"danzzzerl"},"content":"`findc /n {name}` `findc /m {module}`","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":113,"author":{"gitId":"danzzzerl"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"danzzzerl"},"content":"* `findc /n John` returns `john`, `John Doe`","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"danzzzerl"},"content":"* `findc /m CS1231S` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":117,"author":{"gitId":"angkl0"},"content":"### Listing contacts: `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"songivan00"},"content":"Listing out all contacts in the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"songivan00"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"songivan00"},"content":"`listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"songivan00"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"songivan00"},"content":"* `listc`","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"angkl0":23,"parnikkapore":40,"JonLamy":7,"songivan00":29,"danzzzerl":21,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"## CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"### Song Ivan","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"\u003cimg src\u003d\"images/songivan00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"[[github](https://github.com/songivan00)]","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"[[portfolio](team/songivan00.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"* Role: Developer","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"* Responsibilities: Listing/sorting tasks and contacts features","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"### Denzel Tan","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"\u003cimg src\u003d\"images/danzzzerl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"[[github](http://github.com/danzzzerl)]","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"[[portfolio](team/danzzzerl.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"* Responsibilities: finding tasks/contacts","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"### Jonathan Lam","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"\u003cimg src\u003d\"images/jonlamy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"[[github](http://github.com/JonLamy)]","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"[[portfolio](team/jonlamy.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"* Responsibilities: Storage and Data Management","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"### Poomklao Teerawatthanaprapha","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"\u003cimg src\u003d\"images/parnikkapore.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"[[github](http://github.com/parnikkapore)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"[[portfolio](team/parnikkapore.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"* Role: Integration, CI expert","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"* Responsibilities: adding/deleting/marking/unmarking tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"### Ang Kuang Long","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"\u003cimg src\u003d\"images/angkl0.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"[[github](http://github.com/angkl0)]","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"[[portfolio](team/angkl0.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"* Responsibilities: Adding, deleting, editing and tagging contacts","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"angkl0":5,"parnikkapore":6,"JonLamy":5,"songivan00":7,"danzzzerl":6,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"JonLamy"},"content":"* an SOC student","lastModifiedDate":"2022-09-29"},{"lineNumber":261,"author":{"gitId":"JonLamy"},"content":"* needs support with his academics","lastModifiedDate":"2022-09-29"},{"lineNumber":262,"author":{"gitId":"JonLamy"},"content":"* has friends that he is willing to ask for help","lastModifiedDate":"2022-09-29"},{"lineNumber":263,"author":{"gitId":"JonLamy"},"content":"* misses deadlines","lastModifiedDate":"2022-09-29"},{"lineNumber":264,"author":{"gitId":"JonLamy"},"content":"* cannot remember all the details of his assignments and exams","lastModifiedDate":"2022-09-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"JonLamy"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"JonLamy"},"content":"Search for contacts for help with a particular task faster than having to think about who is taking the same module as you.","lastModifiedDate":"2022-09-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                    | I want to …​                                                                   | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"parnikkapore"},"content":"|----------|------------------------------------------------------------|--------------------------------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-09-28"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                                   | see usage instructions                                                         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                       | add a new person                                                               |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                       | delete a person                                                                | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                       | find a person by name                                                          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"parnikkapore"},"content":"| `* * *`  | SOC student who has many (computing) modules in a semester | have a platform to keep track of all my submissions/tasks                      |                                                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":286,"author":{"gitId":"parnikkapore"},"content":"| `* * *`  | busy SOC student                                           | keep track of what I have to complete                                          | not miss out on any deadlines                                          |","lastModifiedDate":"2022-09-28"},{"lineNumber":287,"author":{"gitId":"parnikkapore"},"content":"| `* * *`  | typical SOC student who has too many assignments           | keep track of the status of my assignments                                     |                                                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":288,"author":{"gitId":"parnikkapore"},"content":"| `* * *`  | SOC student with many assignments and tasks                | use the search feature to find the task I am looking for                       |                                                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":289,"author":{"gitId":"parnikkapore"},"content":"| `* *`    | SOC student working on a group project                     | see all the contacts of those people in my group project                       | easily contact them                                                    |","lastModifiedDate":"2022-09-28"},{"lineNumber":290,"author":{"gitId":"-"},"content":"| `* *`    | user                                                       | hide private contact details                                                   | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"parnikkapore"},"content":"| `*`      | future thinking SOC CS Student                             | list tasks and events for the next 7 days                                      | plan what I want to do better                                          |","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"parnikkapore"},"content":"| `*`      | SOC student with many digital files to organize            | link a task to relevant local files (pdf, pptx, etc.)                          | open them quickly                                                      |","lastModifiedDate":"2022-09-28"},{"lineNumber":293,"author":{"gitId":"parnikkapore"},"content":"| `*`      | overwhelmed SOC student                                    | filter tasks by whether or not they are graded                                 | decide on what to do first                                             |","lastModifiedDate":"2022-09-28"},{"lineNumber":294,"author":{"gitId":"parnikkapore"},"content":"| `*`      | SOC student                                                | assign an estimated time to complete for each task                             | realistically estimate how much I can accomplish in a day              |","lastModifiedDate":"2022-09-28"},{"lineNumber":295,"author":{"gitId":"parnikkapore"},"content":"| `*`      | future thinking SOC student                                | prioritize my tasks                                                            | plan what I should be working on first                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":296,"author":{"gitId":"parnikkapore"},"content":"| `*`      | forgetful SOC student                                      | be greeted (or warned) with a list of urgent/overdue tasks when I open the app | remind myself about them                                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":297,"author":{"gitId":"parnikkapore"},"content":"| `*`      | SOC student who has many venues to keep track of           | store the venues associated with my tasks                                      |                                                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":298,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book                 | sort persons by name                                                           | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"songivan00"},"content":"(For all use cases below, the **System** is the `CodeConnect` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"danzzzerl"},"content":"**Use case: Finding contacts by module**","lastModifiedDate":"2022-09-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"songivan00"},"content":"1.  User requests to find persons taking a specific module.","lastModifiedDate":"2022-09-29"},{"lineNumber":311,"author":{"gitId":"songivan00"},"content":"2.  CodeConnect requests for module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":312,"author":{"gitId":"songivan00"},"content":"3.  User types in module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":313,"author":{"gitId":"songivan00"},"content":"4.  CodeConnect shows a list of persons taking that module.","lastModifiedDate":"2022-09-29"},{"lineNumber":314,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":315,"author":{"gitId":"songivan00"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":316,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":317,"author":{"gitId":"songivan00"},"content":"* 3a. The list is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":318,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":319,"author":{"gitId":"songivan00"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":320,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":321,"author":{"gitId":"songivan00"},"content":"* 3b. The given module code is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":322,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":323,"author":{"gitId":"songivan00"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":324,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":325,"author":{"gitId":"songivan00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-29"},{"lineNumber":326,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":327,"author":{"gitId":"parnikkapore"},"content":"**Use case: Mark a task as complete**","lastModifiedDate":"2022-09-28"},{"lineNumber":328,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":329,"author":{"gitId":"parnikkapore"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":330,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":331,"author":{"gitId":"parnikkapore"},"content":"1.  User requests to list tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":332,"author":{"gitId":"parnikkapore"},"content":"2.  CodeConnect shows a list of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":333,"author":{"gitId":"parnikkapore"},"content":"3.  User requests to mark a specific task in the list as complete","lastModifiedDate":"2022-09-28"},{"lineNumber":334,"author":{"gitId":"parnikkapore"},"content":"4.  CodeConnect marks the task as complete","lastModifiedDate":"2022-09-28"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"parnikkapore"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"angkl0"},"content":"**Use case: Edit a contact**","lastModifiedDate":"2022-09-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"angkl0"},"content":"1.  User requests to list contacts","lastModifiedDate":"2022-09-29"},{"lineNumber":355,"author":{"gitId":"angkl0"},"content":"2.  CodeConnect shows a list of contacts","lastModifiedDate":"2022-09-29"},{"lineNumber":356,"author":{"gitId":"angkl0"},"content":"3.  User inputs index of contact and its updated information","lastModifiedDate":"2022-09-29"},{"lineNumber":357,"author":{"gitId":"angkl0"},"content":"4.  CodeConnect updates the contact according to the input given","lastModifiedDate":"2022-09-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":361,"author":{"gitId":"parnikkapore"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":362,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":363,"author":{"gitId":"parnikkapore"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":364,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":365,"author":{"gitId":"parnikkapore"},"content":"  Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":366,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":367,"author":{"gitId":"parnikkapore"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-28"},{"lineNumber":368,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":369,"author":{"gitId":"parnikkapore"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-28"},{"lineNumber":370,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":371,"author":{"gitId":"parnikkapore"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-28"},{"lineNumber":372,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"danzzzerl"},"content":"1.  User requests to find persons taking a specific module.","lastModifiedDate":"2022-09-29"},{"lineNumber":378,"author":{"gitId":"danzzzerl"},"content":"2.  CodeConnect requests for module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":379,"author":{"gitId":"danzzzerl"},"content":"3.  User types in module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":380,"author":{"gitId":"danzzzerl"},"content":"4.  CodeConnect shows a list of persons taking that module.","lastModifiedDate":"2022-09-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"danzzzerl"},"content":"* 3a. The list is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"danzzzerl"},"content":"* 3b. The given module code is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"danzzzerl"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"danzzzerl"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"songivan00"},"content":"2. Should be able to hold up to 1000 persons and tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"songivan00"},"content":"4. Command should execute in less than a second.","lastModifiedDate":"2022-09-29"},{"lineNumber":402,"author":{"gitId":"songivan00"},"content":"5. Product features must work without internet.","lastModifiedDate":"2022-09-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"JonLamy"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2022-09-29"},{"lineNumber":409,"author":{"gitId":"JonLamy"},"content":"* **CLI**: Command Line Interface - Where you can execute commands by typing them","lastModifiedDate":"2022-09-29"},{"lineNumber":410,"author":{"gitId":"JonLamy"},"content":"* **JSON**: A file format that uses human-readable text to store and transmit data objects consisting of attribute–value pairs and arrays","lastModifiedDate":"2022-09-29"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"angkl0":5,"parnikkapore":35,"JonLamy":10,"songivan00":21,"danzzzerl":9,"-":385}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"CodeConnect is a **desktop app for managing your daily task and your contacts optimized for use via a Command Line Interface** (CLI) ","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"If you can type fast, CodeConnect can get your tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"1. Download the latest `CodeConnect.jar` from [here]().","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"1. Copy the file to the folder you want to use as the _home folder_.","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"   * **`listc`** : Lists all contacts.","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"   * **`add`**`add Finish homework /by 2022-12-12 /mod CS2040S` : Adds a task named `Finish homework` to the Task Manager.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"   * **`delete`**`1` : Deletes the 1st task shown in the current list.","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"### Getting help","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"#### Viewing help : `help`","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"songivan00"},"content":"### Managing tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"#### Adding a task: `add`","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"Adds a task to the task manager.","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"`add {task_name} /by {deadline} /mod {module_code}`","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"* `add finish problem set 5 /by Week 6 Sunday /mod CS2040S`","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"* `add finish SEP application /by 2359 today`","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"#### Deleting a task: `del`","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"Deletes a task from the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"`del {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"`del 5`","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"#### Marking a task: `mark`","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"Marks a task as completed in the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"`mark {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"`mark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"#### Unmarking a task: `unmark`","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"Marks a task as incomplete in the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"`unmark {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"`unmark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"danzzzerl"},"content":"#### Searching for tasks: `find`","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"Find tasks whose names contain any of the given keywords, or find them by their tagged module.","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"danzzzerl"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"danzzzerl"},"content":"`find /t {task}` `find /m {module}`","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"danzzzerl"},"content":"* `find /t homework` returns `Science homework`, `Math homework`","lastModifiedDate":"2022-09-29"},{"lineNumber":128,"author":{"gitId":"danzzzerl"},"content":"* `find /m CS1101S` returns `Problem set 4`, `Reading assignment 2`","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"songivan00"},"content":"#### Listing all tasks : `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":132,"author":{"gitId":"songivan00"},"content":"Shows a list of all tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"songivan00"},"content":"Format: `list` /  `list time`","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":136,"author":{"gitId":"songivan00"},"content":"* List displays a list of all tasks in the order of most recent task added","lastModifiedDate":"2022-09-29"},{"lineNumber":137,"author":{"gitId":"songivan00"},"content":"* List time displays a list of all tasks in the order of nearest deadline","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"songivan00"},"content":"### Managing contacts","lastModifiedDate":"2022-09-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"parnikkapore"},"content":"#### Adding a contact: `addc`","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"angkl0"},"content":"Adds a contact to the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"angkl0"},"content":"Format: `addc {name} /email {email} /hp {phone number} /mods {module1} {module2}...`","lastModifiedDate":"2022-09-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"angkl0"},"content":"* `addc Bob Martin /email bobbymartini@gmail.com /hp 98765432 /mods CS1101S CS1231S`","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"angkl0"},"content":"* `addc Betsy Crowe /email betsycrowe@gmail.com /hp 89985432`","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"songivan00"},"content":"### Listing all persons : `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"songivan00"},"content":"Format: `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"parnikkapore"},"content":"#### Deleting a person : `delc`","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"angkl0"},"content":"Deletes the specified contact from the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"angkl0"},"content":"Format: `delc {contact_index}`","lastModifiedDate":"2022-09-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"angkl0"},"content":"* `delc 2` deletes the contact at index 2 in the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"danzzzerl"},"content":"#### Searching for persons: `findc`","lastModifiedDate":"2022-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"danzzzerl"},"content":"Finds persons whose names contain any of the given keywords, or find persons who take a particular module.","lastModifiedDate":"2022-09-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"danzzzerl"},"content":"Format: ","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"danzzzerl"},"content":"`findc /n {name}` `findc /m {module}`","lastModifiedDate":"2022-09-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"danzzzerl"},"content":"* `findc /n John` returns `john`, `John Doe`","lastModifiedDate":"2022-09-29"},{"lineNumber":179,"author":{"gitId":"danzzzerl"},"content":"* `findc /m CS1231S` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"parnikkapore"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2022-09-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"parnikkapore"},"content":"### Finishing up","lastModifiedDate":"2022-09-28"},{"lineNumber":188,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":189,"author":{"gitId":"parnikkapore"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2022-09-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"songivan00"},"content":"CodeConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":201,"author":{"gitId":"songivan00"},"content":"CodeConnect data are saved as a JSON file `[JAR file location]/data/codeconnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":204,"author":{"gitId":"songivan00"},"content":"If your changes to the data file makes its format invalid, CodeConnect will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"songivan00"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CodeConnect home folder.","lastModifiedDate":"2022-09-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"parnikkapore"},"content":"**Add task** | `add {taskname} /by {deadline} /mod {module_code}` \u003cbr\u003e e.g. `add finish problem set 5 /by Week 6 Sunday /mod CS2040S`","lastModifiedDate":"2022-09-28"},{"lineNumber":225,"author":{"gitId":"parnikkapore"},"content":"**Delete task** | `del {task_index}` \u003cbr\u003e e.g. `delete 5`","lastModifiedDate":"2022-09-28"},{"lineNumber":226,"author":{"gitId":"parnikkapore"},"content":"**Mark task** | `mark {task_index}` \u003cbr\u003e e.g. `mark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":227,"author":{"gitId":"parnikkapore"},"content":"**Unmark task** | `unmark {task_index}` \u003cbr\u003e e.g. `unmark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":228,"author":{"gitId":"danzzzerl"},"content":"**Find tasks** | `find /t {task}` \u003cbr\u003e `find /m {module}`\u003cbr\u003e e.g., `find /t homework`, \u003cbr\u003e `find /m CS1101S`","lastModifiedDate":"2022-09-29"},{"lineNumber":229,"author":{"gitId":"angkl0"},"content":"**List tasks** | `list` / `list time`","lastModifiedDate":"2022-09-29"},{"lineNumber":230,"author":{"gitId":"angkl0"},"content":"**Add contact** | `addc {name} /email {email} /hp {phone number} /mods {module1} {module2}...` \u003cbr\u003e e.g., `addc Bob Martin /email bobbymartini@gmail.com /hp 98765432 /mods CS1101S CS1231S`","lastModifiedDate":"2022-09-29"},{"lineNumber":231,"author":{"gitId":"songivan00"},"content":"**Clear contacts** | `clear`","lastModifiedDate":"2022-09-29"},{"lineNumber":232,"author":{"gitId":"angkl0"},"content":"**Delete contact** | `delc {contact_index}`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2022-09-29"},{"lineNumber":233,"author":{"gitId":"songivan00"},"content":"**Edit contact** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-09-29"},{"lineNumber":234,"author":{"gitId":"danzzzerl"},"content":"**Find contacts** | `findc /n {name}` \u003cbr\u003e `findc /m {module}`\u003cbr\u003e e.g., `findc /n John`, \u003cbr\u003e `findc /m CS1231S`","lastModifiedDate":"2022-09-29"},{"lineNumber":235,"author":{"gitId":"angkl0"},"content":"**List contacts** | `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"angkl0":11,"parnikkapore":42,"songivan00":23,"danzzzerl":14,"-":146}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"parnikkapore"},"content":"    content: \"CodeConnect\";","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"parnikkapore":1,"-":293}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"title: CodeConnect","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"**CodeConnect is a desktop application for managing contacts and tasks of your modules.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"* If you are interested in using CodeConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"* If you are interested about developing CodeConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"parnikkapore":5,"-":14}},{"path":"docs/team/angkl0.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"title: Ang Kuang Long\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"### Project: CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and is linked to their local contacts to find students that take the same modules. This gives them an easy way to source for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dangkl0\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"* ","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"  * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    * Added documentation for the features `addc` and `delc`","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    * Added use case for editing a contact","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"angkl0":28}},{"path":"docs/team/danzzzerl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"title: Denzel Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"### Project: CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and ","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"is linked to their local contacts to find students that take the same modules. This gives them an easy way to source ","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. ","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003ddanzzzerl\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    * User Guide: ","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"      * Added documentation for the features `find` and `findc`","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    * Developer Guide: ","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"      * Added use case for finding tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"danzzzerl":31}},{"path":"docs/team/jonlamy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"title: Jonathan Lam\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"# Project: CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"## Overview","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"## Summary of Contributions","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"### Code Contributed","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"### Enhancements Implemented","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"### Contributions to UG","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"### Contributions to DG","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"### Contributions to Team-Based Tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"### Review Contributions","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"### Beyond the Project Team","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"JonLamy":25}},{"path":"docs/team/parnikkapore.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"title: Poomklao Teerawatthanaprapha\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"### Project: CodeConnect","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and is linked to their local contacts to find students that take the same modules. This gives them an easy way to source for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dparnikkapore\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"  * User Guide: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"  * Developer Guide: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"parnikkapore":28}},{"path":"docs/team/songivan00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"title: Song Ivan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"### Project: CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and is linked to their local contacts to find students that take the same modules. This gives them an easy way to source for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dsongivan00\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"  * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"    * Added documentation for the features `list` and `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    * Added Non-Functional Requirements","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"songivan00":29}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"        // initialise storage for AB","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"        // is aligned with developer guide section","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"JonLamy"},"content":"        return new ModelManager(initialData, new TaskList(), userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JonLamy":4,"-":182}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"songivan00":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"songivan00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"songivan00"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"songivan00":6,"-":81}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"    /** Returns the TaskList */","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"songivan00"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"songivan00"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"songivan00"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"songivan00"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"songivan00":13,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyTaskList taskList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"        this.taskList \u003d new TaskList(taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskList.getTaskList());","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"        this(new AddressBook(), new TaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"songivan00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"songivan00"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"songivan00"},"content":"        return taskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"songivan00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"songivan00"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"songivan00"},"content":"        return filteredTasks;","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"songivan00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"songivan00"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"songivan00"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"songivan00"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songivan00":25,"-":148}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":17}},{"path":"src/main/java/seedu/address/model/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":" * Wraps all date at the task list level","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"public class TaskList implements ReadOnlyTaskList {","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    /*","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    {","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    public TaskList() {}","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"     * Creates an AddressBook using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    public TaskList(ReadOnlyTaskList toBeCopied) {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        this();","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    //// task-level operations","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        tasks.add(p);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        tasks.remove(key);","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"    //// util methods","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 tasks.equals(((TaskList) other).tasks));","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"        return tasks.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":120}},{"path":"src/main/java/seedu/address/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task\u0027s deadline.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeadline(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"public class Deadline {","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"            \"Deadlines should be entered in the format \\\"2006-01-15 15:04\\\"\";","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    //@@author parnikkapore-reused","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Date format taken from https://github.com/angkl0/ip/blob/master/src/main/java/duke/tasks/Deadline.java#L39","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // and https://github.com/angkl0/ip/blob/master/src/main/java/duke/commands/DeadlineCommand.java#L42","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter WRITE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"hh:mm a \u0027on\u0027 dd/MM/yyyy\");","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter READ_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public final LocalDateTime deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code Deadline} from a handwritten description.","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param deadlineString A valid deadline written as a string.","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Deadline(String deadlineString) {","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(deadlineString);","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(isValidDeadline(deadlineString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        LocalDateTime newDeadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            newDeadline \u003d LocalDateTime.parse(deadlineString, READ_FORMATTER);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            assert false : \"Checked deadline string should not fail to parse?\";","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            newDeadline \u003d LocalDateTime.now(); // A good enough fallback","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.deadline \u003d newDeadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code Deadline} from a LocalDateTime.","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param deadline A valid deadline.","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Deadline(LocalDateTime deadline) {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid deadline.","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            LocalDateTime.parse(test, READ_FORMATTER);","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return deadline.format(WRITE_FORMATTER);","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                || (other instanceof Deadline // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 deadline.equals(((Deadline) other).deadline)); // state check","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return deadline.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":19,"-":69}},{"path":"src/main/java/seedu/address/model/task/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task\u0027s module code in the task list.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModule(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"public class Module {","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"            \"Module codes should contain only alphanumeric characters and should not be blank.\";","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    /*","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S+\";","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"    public final String module;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     * Constructs a {@code Module}.","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     * @param module A valid module code.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    public Module(String module) {","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        checkArgument(isValidModule(module), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if a given string is a valid module code.","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    public static boolean isValidModule(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"        return module;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof Module // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 module.equals(((Module) other).module)); // state check","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"        return module.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":59}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task in the task list.","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"public class Task {","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    private final TaskName name;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"    private final Module module;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    private final Deadline deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"     * Constructs a new Task. Every field must be present and not null.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    public Task(TaskName name, Module module, Deadline deadline) {","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(name, module, deadline);","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    public TaskName getName() {","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        return name;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    public Module getModule() {","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        return module;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        return deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if the tasks have the same name and module code.","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    public boolean isSameTask(Task other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        return other !\u003d null","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 other.getName().equals(this.getName())","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 other.getModule().equals(this.getModule());","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if both tasks have equal values in all fields.","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 otherTask.getModule().equals(this.getModule())","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(this.getDeadline());","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        return Objects.hash(this.name, this.module, this.deadline);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        return \"Task: \" + this.getName()","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"                + \"; Module: \" + this.getModule()","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"                + \"; Deadline: \" + this.getDeadline();","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":83}},{"path":"src/main/java/seedu/address/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task\u0027s name in the task list.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"public class TaskName {","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names should not be blank\";","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    /*","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S[\\\\S ]*\";","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    public final String fullName;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    public TaskName(String name) {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        return fullName;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof seedu.address.model.task.TaskName // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 fullName.equals(((seedu.address.model.task.TaskName) other).fullName)); // state check","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":58}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the person {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"     * The person identity of {@code editedTask} must not be the same as another existing person in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"parnikkapore"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"parnikkapore"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"parnikkapore"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"                    return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"parnikkapore"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"parnikkapore"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"parnikkapore"},"content":"        return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":137}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":" * identity).","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":6}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Module;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    private static final DateTimeFormatter DEADLINE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    public final String taskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    public final String module;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    public final String deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    public JsonAdaptedTask(@JsonProperty(\"taskName\") String taskName, @JsonProperty(\"module\") String module,","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"            @JsonProperty(\"deadline\") String deadline) {","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        taskName \u003d source.getName().fullName;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"        module \u003d source.getModule().module;","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"        deadline \u003d source.getDeadline().deadline.format(DEADLINE_FORMATTER);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        if (taskName \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"        if (!TaskName.isValidName(taskName)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"        final TaskName modelTaskName \u003d new TaskName(taskName);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Module.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"        if (!Module.isValidModule(module)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"        final Module modelModule \u003d new Module(module);","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"        LocalDateTime parsedDeadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"            parsedDeadline \u003d LocalDateTime.parse(deadline, DEADLINE_FORMATTER);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"        Deadline modelDeadline \u003d new Deadline(parsedDeadline);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"        return new Task(modelTaskName, modelModule, modelDeadline);","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":86}},{"path":"src/main/java/seedu/address/storage/TaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":" * Represents a storage for {@link seedu.address.model.TaskList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"public interface TaskListStorage {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"     * Returns TaskList data as a {@link ReadOnlyTaskList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"     * @see #getTaskListFilePath()","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"     * Saves the given {@link ReadOnlyTaskList} to the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"     * @param taskList cannot be null.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"     * @see #saveTaskList(ReadOnlyTaskList)","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":43}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"songivan00"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"songivan00"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"songivan00":7,"-":196}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    public final Task task;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    private Label name;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    private Label id;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    private Label module;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    private Label deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"        super(FXML);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        name.setText(task.getName().fullName);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"        module.setText(task.getModule().module);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        deadline.setText(task.getDeadline().toString());","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"        // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"danzzzerl":66}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        super(FXML);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"                setText(null);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"            } else {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"danzzzerl":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":" * Interacts with Logic","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JonLamy":1,"-":88}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"        \u003cHBox fx:id\u003d\"listContainer\" styleClass\u003d\"pane-without-border\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"              HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"          \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"              HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"JonLamy"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"            \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"JonLamy":12,"-":60}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"  \u003cText fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Contacts\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"      \u003cfont\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"         \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"      \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JonLamy":9,"-":4}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"            \u003cLabel fx:id\u003d\"module\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$module\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"            \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"JonLamy":35}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"    \u003cText fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Tasks\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"        \u003cfont\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"            \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"        \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"JonLamy":15}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"songivan00"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"songivan00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTaskList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"songivan00":6,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    //should use getTypicalTaskList() instead of null","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"songivan00":4,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"songivan00"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"songivan00"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"songivan00"},"content":"            return null;","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"songivan00"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"songivan00"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"songivan00"},"content":"            return null;","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"songivan00"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"songivan00"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"songivan00":17,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    //should be getTypicalTaskList()","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"songivan00":4,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"    //should be getTypicalTaskList()","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"songivan00":5,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"    //should be getTypicalTaskList","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"songivan00":12,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"    //should be getTypicalTaskList()","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"songivan00":4,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"songivan00":3,"-":37}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"songivan00"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"songivan00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"songivan00"},"content":"        TaskList differentTaskList \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"songivan00"},"content":"        modelManager \u003d new ModelManager(addressBook, differentTaskList, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"songivan00"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, differentTaskList, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"songivan00"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, differentTaskList, userPrefs)));","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"songivan00"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentTaskList, userPrefs)));","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":136,"author":{"gitId":"songivan00"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentTaskList, differentUserPrefs)));","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"songivan00":11,"-":127}},{"path":"src/test/java/seedu/address/model/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.FINISH_TP_ISH;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"public class TaskListTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    private final TaskList addressBook \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(Collections.emptyList(), addressBook.getTaskList());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    public void resetData_withValidReadOnlyTaskList_replacesData() {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"        TaskList newData \u003d getTypicalTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(FINISH_TP, FINISH_TP_ISH);","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        TaskListStub newData \u003d new TaskListStub(newTasks);","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTask(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_taskNotInTaskList_returnsFalse() {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(addressBook.hasTask(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_taskInTaskList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"        addressBook.addTask(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(addressBook.hasTask(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_taskWithSameIdentityFieldsInTaskList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"        addressBook.addTask(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(addressBook.hasTask(FINISH_TP_ISH));","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTaskList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"     * A stub ReadOnlyTaskList whose tasks list can violate interface constraints.","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"    private static class TaskListStub implements ReadOnlyTaskList {","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        TaskListStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"            return tasks;","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":96}},{"path":"src/test/java/seedu/address/model/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline((String) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline((LocalDateTime) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_invalidDeadline_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"        String invalidDeadline \u003d \"\";","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDeadline));","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    public void isValidDeadline() {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        // null deadline","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDeadline(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        // invalid deadlines","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Deadline.isValidDeadline(\"\")); // empty string","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Deadline.isValidDeadline(\"Geylang Rd\")); // not in correct format","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        // valid deadlines","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(Deadline.isValidDeadline(\"2006-01-15 15:04\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(Deadline.isValidDeadline(\"2050-02-28 05:04\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":38}},{"path":"src/test/java/seedu/address/model/task/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"public class ModuleTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_invalidModule_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"        String invalidModule \u003d \"\";","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(invalidModule));","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    public void isValidModule() {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"        // null module","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e Module.isValidModule(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        // invalid modules","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Module.isValidModule(\"\")); // empty string","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Module.isValidModule(\" \")); // spaces only","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Module.isValidModule(\"A B\")); // has spaces","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"        // valid modules","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(Module.isValidModule(\"CS2103T\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(Module.isValidModule(\"-\")); // one character","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(Module.isValidModule(\"USGCSDSA13495798735729475238945273858gf_ewt3wi4rw34\")); // long module","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    public void toString_roundtrip_works() {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"        String sampleModuleCode \u003d \"CS2103T\";","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(new Module(sampleModuleCode).toString(), sampleModuleCode);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":44}},{"path":"src/test/java/seedu/address/model/task/TaskNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"public class TaskNameTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskName(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskName(invalidName));","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"        // null name","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskName.isValidName(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        // invalid name","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\"\")); // empty string","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\"\\t\")); // other whitespace only","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\"peter\\n\")); // contains other whitespace","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"        // valid name","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":40}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"public class TaskTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleA \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"            new Deadline(\"2006-01-15 15:04\")","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleB \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"            new Deadline(\"2006-01-15 15:04\")","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleC \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"            new Deadline(\"2010-04-15 08:30\")","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleD \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Dugong\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"            new Deadline(\"2006-01-15 15:04\")","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleE \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"a\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"            new Deadline(\"2006-01-15 15:04\")","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleF \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A \"),","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"            new Deadline(\"2006-01-15 15:04\")","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    public void isSameTask() {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(sampleA.isSameTask(sampleA));","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(sampleA.isSameTask(sampleB));","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes except date -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(sampleA.isSameTask(sampleC));","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(sampleD));","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        // different name casing -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(sampleE));","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"        // trailing space in name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(sampleF));","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"    public void equals() {","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(sampleA, sampleA);","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, null);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes except date -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleC);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleD);","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        // different name casing -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleE);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        // trailing space in name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleF);","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":82}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.FINISH_TP_ISH;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.LAB_2;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(uniqueTaskList.contains(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(uniqueTaskList.contains(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    public void contains_weaklyEqualTaskInList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(uniqueTaskList.contains(FINISH_TP_ISH));","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(FINISH_TP, null));","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(FINISH_TP, FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTask(FINISH_TP, FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTask(FINISH_TP, FINISH_TP_ISH);","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(FINISH_TP_ISH);","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTask(FINISH_TP, LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(FINISH_TP, LAB_2));","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.remove(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(FINISH_TP, FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"parnikkapore"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"parnikkapore"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":164}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Module;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"class JsonAdaptedTaskTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"    private static final String INVALID_TASKNAME \u003d \" \";","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"    private static final String INVALID_MODULE \u003d \" \";","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"    private static final String INVALID_DEADLINE \u003d \"123456\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    private static final String VALID_TASKNAME \u003d \"Lab 2\";","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    private static final String VALID_MODULE \u003d \"CS2030S\";","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    private static final String VALID_DEADLINE \u003d \"2022-02-02 23:59\";","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        Task actualTask \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"                new TaskName(VALID_TASKNAME), new Module(VALID_MODULE), new Deadline(VALID_DEADLINE));","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASKNAME, VALID_MODULE, VALID_DEADLINE);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        assertEquals(actualTask, task.toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    public void toModelType_invalidTaskName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(INVALID_TASKNAME, VALID_MODULE, VALID_DEADLINE);","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d TaskName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    public void toModelType_invalidModule_throwsIllegalValueException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASKNAME, INVALID_MODULE, VALID_DEADLINE);","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASKNAME, VALID_MODULE, INVALID_DEADLINE);","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d Deadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":51}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Module;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    public static final Task FINISH_TP \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Finish TP\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"CS2103T\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"            new Deadline(\"2022-11-15 00:00\")","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    /** Weakly but not strongly equivalent to FINISH_TP. */","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    public static final Task FINISH_TP_ISH \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Finish TP\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"CS2103T\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"            new Deadline(\"2022-12-12 12:00\")","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    public static final Task LAB_2 \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Lab 2\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"CS2030S\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"            new Deadline(\"2022-02-02 23:59\")","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FINISH_TP, LAB_2));","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"    public static TaskList getTypicalTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"            tl.addTask(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"        return tl;","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":52}}]
