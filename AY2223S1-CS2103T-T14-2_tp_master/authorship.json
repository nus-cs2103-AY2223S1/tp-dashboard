[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![Code coverage](https://codecov.io/gh/AY2223S1-CS2103T-T14-2/tp/branch/master/graph/badge.svg?token\u003dHGCQQ52YOS)](https://codecov.io/gh/AY2223S1-CS2103T-T14-2/tp)","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"# About","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"Have you ever been struggling with a coding assignment for days, wanting to reach out to a friend, but not knowing who?","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"Do you ever get overwhelmed with tasks, not knowing which to prioritize?","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"CodeConnect solves both these problems at once by integrating your contacts with your tasks! CodeConnect is a command based application written in Java that runs locally in your computer. Our motivation was to provide a simple and friendly solution to the hectic life of computing students.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"CodeConnect allows you to quickly manage your tasks and contacts through a text based command line interface, with the option of using your mouse for quicker navigation. Tasks and contacts can be easily searched for and sorted to, to provide enhanced organization and management functionality.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"## Features","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"* Keep track of your tasks, their deadlines, and the modules they belong to","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"  * Mark them as complete or uncompleted","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"  * Have your contacts and tasks all listed out in a specified order!!","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"* Manage your contacts and keep track of the modules they are taking","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"## Usage","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"### Finding tasks: `find`","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"Finds tasks from your task list via keywords, or via module. ","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"`find /t {task}`, `find /m {module}`","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"* `find /t homework` returns `Science homework`, `Math homework`","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"* `find /m CS1101S` returns `Problem set 4`, `Reading assignment 2`","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"### Adding a task: `add`","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"Adds a task to the task manager.","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"`add {task_name} /by {deadline} /mod {module_code}`","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"* `add finish problem set 5 /by Week 6 Sunday /mod CS2040S`","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"* `add finish SEP application /by 2359 today`","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"### Deleting a task: `del`","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"Deletes a task from the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"`del {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"`del 5`","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"### Marking a task: `mark`","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"Marks a task as completed in the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"`mark {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"`mark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"Marks a task as incomplete in the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"`unmark {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"`unmark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"songivan00"},"content":"### Listing tasks: `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"songivan00"},"content":"Listing all tasks either in the order of the most recent task added or timing of deadline.","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"songivan00"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"songivan00"},"content":"`list / list time`","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"songivan00"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"* `list` (order of most recent task added)","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"songivan00"},"content":"* `list time` (order of timing of deadline)","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"### Adding a contact: `addc`","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"Adds a contact to the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"Format: `addc {name} /email {email} /hp {phone number} /mods {module1} {module2}...`","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"* `addc Bob Martin /email bobbymartini@gmail.com /hp 98765432 /mods CS1101S CS1231S`","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"* `addc Betsy Crowe /email betsycrowe@gmail.com /hp 89985432`","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"### Deleting a contact: `delc`","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"Deletes the specified contact from the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"Format: `delc {contact_index}`","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":103,"author":{"gitId":"angkl0"},"content":"Example:","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"angkl0"},"content":"* `delc 2` deletes the contact at index 2 in the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"songivan00"},"content":"### Finding contacts: `findc`","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"danzzzerl"},"content":"Find persons in your contacts via keywords, or via module.","lastModifiedDate":"2022-09-29"},{"lineNumber":109,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":110,"author":{"gitId":"danzzzerl"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"danzzzerl"},"content":"`findc /n {name}` `findc /m {module}`","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":113,"author":{"gitId":"danzzzerl"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"danzzzerl"},"content":"* `findc /n John` returns `john`, `John Doe`","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"danzzzerl"},"content":"* `findc /m CS1231S` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":117,"author":{"gitId":"angkl0"},"content":"### Listing contacts: `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"songivan00"},"content":"Listing out all contacts in the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"songivan00"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"songivan00"},"content":"`listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"songivan00"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"songivan00"},"content":"* `listc`","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"angkl0":23,"parnikkapore":40,"JonLamy":7,"songivan00":29,"danzzzerl":21,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"## CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"### Song Ivan","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"\u003cimg src\u003d\"images/songivan00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"[[github](https://github.com/songivan00)]","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"[[portfolio](team/songivan00.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"* Role: Developer","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"* Responsibilities: Listing/sorting tasks and contacts features","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"### Denzel Tan","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"\u003cimg src\u003d\"images/danzzzerl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"[[github](http://github.com/danzzzerl)]","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"[[portfolio](team/danzzzerl.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"* Responsibilities: finding tasks/contacts","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"### Jonathan Lam","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"\u003cimg src\u003d\"images/jonlamy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"[[github](http://github.com/JonLamy)]","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"[[portfolio](team/jonlamy.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"* Responsibilities: Storage and Data Management","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"### Poomklao Teerawatthanaprapha","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"\u003cimg src\u003d\"images/parnikkapore.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"[[github](http://github.com/parnikkapore)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"[[portfolio](team/parnikkapore.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"* Role: Integration, CI expert","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"* Responsibilities: adding/deleting/marking/unmarking tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"### Ang Kuang Long","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"\u003cimg src\u003d\"images/angkl0.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"[[github](http://github.com/angkl0)]","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"[[portfolio](team/angkl0.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"* Responsibilities: Adding, deleting, editing and tagging contacts","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"angkl0":5,"parnikkapore":6,"JonLamy":5,"songivan00":7,"danzzzerl":6,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"JonLamy"},"content":"* an SOC student","lastModifiedDate":"2022-09-29"},{"lineNumber":261,"author":{"gitId":"JonLamy"},"content":"* needs support with his academics","lastModifiedDate":"2022-09-29"},{"lineNumber":262,"author":{"gitId":"JonLamy"},"content":"* has friends that he is willing to ask for help","lastModifiedDate":"2022-09-29"},{"lineNumber":263,"author":{"gitId":"JonLamy"},"content":"* misses deadlines","lastModifiedDate":"2022-09-29"},{"lineNumber":264,"author":{"gitId":"JonLamy"},"content":"* cannot remember all the details of his assignments and exams","lastModifiedDate":"2022-09-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"JonLamy"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"JonLamy"},"content":"Search for contacts for help with a particular task faster than having to think about who is taking the same module as you.","lastModifiedDate":"2022-09-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                    | I want to …​                                                                   | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"parnikkapore"},"content":"|----------|------------------------------------------------------------|--------------------------------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-09-28"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                                   | see usage instructions                                                         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                       | add a new person                                                               |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                       | delete a person                                                                | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                       | find a person by name                                                          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"parnikkapore"},"content":"| `* * *`  | SOC student who has many (computing) modules in a semester | have a platform to keep track of all my submissions/tasks                      |                                                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":286,"author":{"gitId":"parnikkapore"},"content":"| `* * *`  | busy SOC student                                           | keep track of what I have to complete                                          | not miss out on any deadlines                                          |","lastModifiedDate":"2022-09-28"},{"lineNumber":287,"author":{"gitId":"parnikkapore"},"content":"| `* * *`  | typical SOC student who has too many assignments           | keep track of the status of my assignments                                     |                                                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":288,"author":{"gitId":"parnikkapore"},"content":"| `* * *`  | SOC student with many assignments and tasks                | use the search feature to find the task I am looking for                       |                                                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":289,"author":{"gitId":"parnikkapore"},"content":"| `* *`    | SOC student working on a group project                     | see all the contacts of those people in my group project                       | easily contact them                                                    |","lastModifiedDate":"2022-09-28"},{"lineNumber":290,"author":{"gitId":"-"},"content":"| `* *`    | user                                                       | hide private contact details                                                   | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"parnikkapore"},"content":"| `*`      | future thinking SOC CS Student                             | list tasks and events for the next 7 days                                      | plan what I want to do better                                          |","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"parnikkapore"},"content":"| `*`      | SOC student with many digital files to organize            | link a task to relevant local files (pdf, pptx, etc.)                          | open them quickly                                                      |","lastModifiedDate":"2022-09-28"},{"lineNumber":293,"author":{"gitId":"parnikkapore"},"content":"| `*`      | overwhelmed SOC student                                    | filter tasks by whether or not they are graded                                 | decide on what to do first                                             |","lastModifiedDate":"2022-09-28"},{"lineNumber":294,"author":{"gitId":"parnikkapore"},"content":"| `*`      | SOC student                                                | assign an estimated time to complete for each task                             | realistically estimate how much I can accomplish in a day              |","lastModifiedDate":"2022-09-28"},{"lineNumber":295,"author":{"gitId":"parnikkapore"},"content":"| `*`      | future thinking SOC student                                | prioritize my tasks                                                            | plan what I should be working on first                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":296,"author":{"gitId":"parnikkapore"},"content":"| `*`      | forgetful SOC student                                      | be greeted (or warned) with a list of urgent/overdue tasks when I open the app | remind myself about them                                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":297,"author":{"gitId":"parnikkapore"},"content":"| `*`      | SOC student who has many venues to keep track of           | store the venues associated with my tasks                                      |                                                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":298,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book                 | sort persons by name                                                           | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"songivan00"},"content":"(For all use cases below, the **System** is the `CodeConnect` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"danzzzerl"},"content":"**Use case: Finding contacts by module**","lastModifiedDate":"2022-09-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"songivan00"},"content":"1.  User requests to find persons taking a specific module.","lastModifiedDate":"2022-09-29"},{"lineNumber":311,"author":{"gitId":"songivan00"},"content":"2.  CodeConnect requests for module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":312,"author":{"gitId":"songivan00"},"content":"3.  User types in module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":313,"author":{"gitId":"songivan00"},"content":"4.  CodeConnect shows a list of persons taking that module.","lastModifiedDate":"2022-09-29"},{"lineNumber":314,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":315,"author":{"gitId":"songivan00"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":316,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":317,"author":{"gitId":"songivan00"},"content":"* 3a. The list is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":318,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":319,"author":{"gitId":"songivan00"},"content":"  Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":320,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":321,"author":{"gitId":"songivan00"},"content":"* 3b. The given module code is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":322,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":323,"author":{"gitId":"songivan00"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":324,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":325,"author":{"gitId":"songivan00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-29"},{"lineNumber":326,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":327,"author":{"gitId":"parnikkapore"},"content":"**Use case: Mark a task as complete**","lastModifiedDate":"2022-09-28"},{"lineNumber":328,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":329,"author":{"gitId":"parnikkapore"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":330,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":331,"author":{"gitId":"parnikkapore"},"content":"1.  User requests to list tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":332,"author":{"gitId":"parnikkapore"},"content":"2.  CodeConnect shows a list of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":333,"author":{"gitId":"parnikkapore"},"content":"3.  User requests to mark a specific task in the list as complete","lastModifiedDate":"2022-09-28"},{"lineNumber":334,"author":{"gitId":"parnikkapore"},"content":"4.  CodeConnect marks the task as complete","lastModifiedDate":"2022-09-28"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"parnikkapore"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"angkl0"},"content":"**Use case: Edit a contact**","lastModifiedDate":"2022-09-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"angkl0"},"content":"1.  User requests to list contacts","lastModifiedDate":"2022-09-29"},{"lineNumber":355,"author":{"gitId":"angkl0"},"content":"2.  CodeConnect shows a list of contacts","lastModifiedDate":"2022-09-29"},{"lineNumber":356,"author":{"gitId":"angkl0"},"content":"3.  User inputs index of contact and its updated information","lastModifiedDate":"2022-09-29"},{"lineNumber":357,"author":{"gitId":"angkl0"},"content":"4.  CodeConnect updates the contact according to the input given","lastModifiedDate":"2022-09-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":361,"author":{"gitId":"parnikkapore"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":362,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":363,"author":{"gitId":"parnikkapore"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":364,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":365,"author":{"gitId":"parnikkapore"},"content":"  Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":366,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":367,"author":{"gitId":"parnikkapore"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-28"},{"lineNumber":368,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":369,"author":{"gitId":"parnikkapore"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-28"},{"lineNumber":370,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":371,"author":{"gitId":"parnikkapore"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-28"},{"lineNumber":372,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"danzzzerl"},"content":"1.  User requests to find persons taking a specific module.","lastModifiedDate":"2022-09-29"},{"lineNumber":378,"author":{"gitId":"danzzzerl"},"content":"2.  CodeConnect requests for module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":379,"author":{"gitId":"danzzzerl"},"content":"3.  User types in module code.","lastModifiedDate":"2022-09-29"},{"lineNumber":380,"author":{"gitId":"danzzzerl"},"content":"4.  CodeConnect shows a list of persons taking that module.","lastModifiedDate":"2022-09-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"danzzzerl"},"content":"* 3a. The list is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"danzzzerl"},"content":"* 3b. The given module code is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"danzzzerl"},"content":"    * 3a1. CodeConnect shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"danzzzerl"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"songivan00"},"content":"2. Should be able to hold up to 1000 persons and tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"songivan00"},"content":"4. Command should execute in less than a second.","lastModifiedDate":"2022-09-29"},{"lineNumber":402,"author":{"gitId":"songivan00"},"content":"5. Product features must work without internet.","lastModifiedDate":"2022-09-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"JonLamy"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2022-09-29"},{"lineNumber":409,"author":{"gitId":"JonLamy"},"content":"* **CLI**: Command Line Interface - Where you can execute commands by typing them","lastModifiedDate":"2022-09-29"},{"lineNumber":410,"author":{"gitId":"JonLamy"},"content":"* **JSON**: A file format that uses human-readable text to store and transmit data objects consisting of attribute–value pairs and arrays","lastModifiedDate":"2022-09-29"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"angkl0":5,"parnikkapore":35,"JonLamy":10,"songivan00":21,"danzzzerl":9,"-":385}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"CodeConnect is a **desktop app for managing your daily task and your contacts optimized for use via a Command Line Interface** (CLI) ","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"If you can type fast, CodeConnect can get your tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"1. Download the latest `CodeConnect.jar` from [here]().","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"1. Copy the file to the folder you want to use as the _home folder_.","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"   * **`listc`** : Lists all contacts.","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"   * **`add`**`add Finish homework /by 2022-12-12 /mod CS2040S` : Adds a task named `Finish homework` to the Task Manager.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"   * **`delete`**`1` : Deletes the 1st task shown in the current list.","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"### Getting help","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"#### Viewing help : `help`","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"songivan00"},"content":"### Managing tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"#### Adding a task: `add`","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"Adds a task to the task manager.","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"`add {task_name} /by {deadline} /mod {module_code}`","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"* `add finish problem set 5 /by Week 6 Sunday /mod CS2040S`","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"* `add finish SEP application /by 2359 today`","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"#### Deleting a task: `del`","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"Deletes a task from the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"`del {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"`del 5`","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"#### Marking a task: `mark`","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"Marks a task as completed in the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"`mark {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"`mark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"#### Unmarking a task: `unmark`","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"Marks a task as incomplete in the task manager list.","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"Format:","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"`unmark {task_index}`","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"`unmark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"danzzzerl"},"content":"#### Searching for tasks: `find`","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"Find tasks whose names contain any of the given keywords, or find them by their tagged module.","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"danzzzerl"},"content":"Format:","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"danzzzerl"},"content":"`find n/ {task}` `find m/ {module}`","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"danzzzerl"},"content":"* `find n/ homework` returns `Science homework`, `Math homework`","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"danzzzerl"},"content":"* `find m/ CS1101S` returns `Problem set 4`, `Reading assignment 2`","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"songivan00"},"content":"#### Listing all tasks : `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":132,"author":{"gitId":"songivan00"},"content":"Shows a list of all tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"songivan00"},"content":"Format: `list` /  `list time`","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":136,"author":{"gitId":"songivan00"},"content":"* List displays a list of all tasks in the order of most recent task added","lastModifiedDate":"2022-09-29"},{"lineNumber":137,"author":{"gitId":"songivan00"},"content":"* List time displays a list of all tasks in the order of nearest deadline","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"songivan00"},"content":"### Managing contacts","lastModifiedDate":"2022-09-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"parnikkapore"},"content":"#### Adding a contact: `addc`","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"angkl0"},"content":"Adds a contact to the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"angkl0"},"content":"Format: `addc {name} /email {email} /hp {phone number} /mods {module1} {module2}...`","lastModifiedDate":"2022-09-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"angkl0"},"content":"* `addc Bob Martin /email bobbymartini@gmail.com /hp 98765432 /mods CS1101S CS1231S`","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"angkl0"},"content":"* `addc Betsy Crowe /email betsycrowe@gmail.com /hp 89985432`","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"songivan00"},"content":"### Listing all persons : `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"songivan00"},"content":"Format: `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"parnikkapore"},"content":"#### Deleting a person : `delc`","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"angkl0"},"content":"Deletes the specified contact from the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"angkl0"},"content":"Format: `delc {contact_index}`","lastModifiedDate":"2022-09-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"angkl0"},"content":"* `delc 2` deletes the contact at index 2 in the contact list.","lastModifiedDate":"2022-09-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"danzzzerl"},"content":"#### Searching for persons: `findc`","lastModifiedDate":"2022-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"danzzzerl"},"content":"Finds persons whose names contain any of the given keywords, or find persons who take a particular module.","lastModifiedDate":"2022-09-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"danzzzerl"},"content":"Format: ","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"danzzzerl"},"content":"`findc n/ {name}` `findc m/ {module}`","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"danzzzerl"},"content":"* `findc n/ John` returns `john`, `John Doe`","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"danzzzerl"},"content":"* `findc m/ CS1231S` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"parnikkapore"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2022-09-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"parnikkapore"},"content":"### Finishing up","lastModifiedDate":"2022-09-28"},{"lineNumber":188,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":189,"author":{"gitId":"parnikkapore"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2022-09-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"songivan00"},"content":"CodeConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":201,"author":{"gitId":"songivan00"},"content":"CodeConnect data are saved as a JSON file `[JAR file location]/data/codeconnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":204,"author":{"gitId":"songivan00"},"content":"If your changes to the data file makes its format invalid, CodeConnect will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"songivan00"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CodeConnect home folder.","lastModifiedDate":"2022-09-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"parnikkapore"},"content":"**Add task** | `add {taskname} /by {deadline} /mod {module_code}` \u003cbr\u003e e.g. `add finish problem set 5 /by Week 6 Sunday /mod CS2040S`","lastModifiedDate":"2022-09-28"},{"lineNumber":225,"author":{"gitId":"parnikkapore"},"content":"**Delete task** | `del {task_index}` \u003cbr\u003e e.g. `delete 5`","lastModifiedDate":"2022-09-28"},{"lineNumber":226,"author":{"gitId":"parnikkapore"},"content":"**Mark task** | `mark {task_index}` \u003cbr\u003e e.g. `mark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":227,"author":{"gitId":"parnikkapore"},"content":"**Unmark task** | `unmark {task_index}` \u003cbr\u003e e.g. `unmark 3`","lastModifiedDate":"2022-09-28"},{"lineNumber":228,"author":{"gitId":"danzzzerl"},"content":"**Find tasks** | `find /t {task}` \u003cbr\u003e `find /m {module}`\u003cbr\u003e e.g., `find /t homework`, \u003cbr\u003e `find /m CS1101S`","lastModifiedDate":"2022-09-29"},{"lineNumber":229,"author":{"gitId":"angkl0"},"content":"**List tasks** | `list` / `list time`","lastModifiedDate":"2022-09-29"},{"lineNumber":230,"author":{"gitId":"angkl0"},"content":"**Add contact** | `addc {name} /email {email} /hp {phone number} /mods {module1} {module2}...` \u003cbr\u003e e.g., `addc Bob Martin /email bobbymartini@gmail.com /hp 98765432 /mods CS1101S CS1231S`","lastModifiedDate":"2022-09-29"},{"lineNumber":231,"author":{"gitId":"songivan00"},"content":"**Clear contacts** | `clear`","lastModifiedDate":"2022-09-29"},{"lineNumber":232,"author":{"gitId":"angkl0"},"content":"**Delete contact** | `delc {contact_index}`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2022-09-29"},{"lineNumber":233,"author":{"gitId":"songivan00"},"content":"**Edit contact** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-09-29"},{"lineNumber":234,"author":{"gitId":"danzzzerl"},"content":"**Find contacts** | `findc /n {name}` \u003cbr\u003e `findc /m {module}`\u003cbr\u003e e.g., `findc /n John`, \u003cbr\u003e `findc /m CS1231S`","lastModifiedDate":"2022-09-29"},{"lineNumber":235,"author":{"gitId":"angkl0"},"content":"**List contacts** | `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"angkl0":11,"parnikkapore":42,"songivan00":23,"danzzzerl":14,"-":146}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"parnikkapore"},"content":"    content: \"CodeConnect\";","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"parnikkapore":1,"-":293}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"title: CodeConnect","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"**CodeConnect is a desktop application for managing contacts and tasks of your modules.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"* If you are interested in using CodeConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"* If you are interested about developing CodeConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"parnikkapore":5,"-":14}},{"path":"docs/team/angkl0.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"title: Ang Kuang Long\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"### Project: CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and is linked to their local contacts to find students that take the same modules. This gives them an easy way to source for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dangkl0\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"* ","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"  * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    * Added documentation for the features `addc` and `delc`","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    * Added use case for editing a contact","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"angkl0":28}},{"path":"docs/team/danzzzerl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"title: Denzel Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"### Project: CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and ","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"is linked to their local contacts to find students that take the same modules. This gives them an easy way to source ","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. ","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"* **New Feature**:","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"  * Implemented find feature for tasks:","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    * find tasks by keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    * find tasks by their modules","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003ddanzzzerl\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"  * User Guide: ","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    * Added documentation for the features `find` and `findc`","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"  * Developer Guide: ","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    * Added use case for finding tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"danzzzerl":34}},{"path":"docs/team/jonlamy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"title: Jonathan Lam\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"# Project: CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"## Overview","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"## Summary of Contributions","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"### Code Contributed","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"### Enhancements Implemented","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"### Contributions to UG","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"### Contributions to DG","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"### Contributions to Team-Based Tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"### Review Contributions","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"### Beyond the Project Team","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"[to be added soon]","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"JonLamy":25}},{"path":"docs/team/parnikkapore.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"title: Poomklao Teerawatthanaprapha\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"### Project: CodeConnect","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and is linked to their local contacts to find students that take the same modules. This gives them an easy way to source for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dparnikkapore\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"  * User Guide: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"  * Developer Guide: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"parnikkapore":28}},{"path":"docs/team/songivan00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songivan00"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"songivan00"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"songivan00"},"content":"title: Song Ivan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"songivan00"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"### Project: CodeConnect","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"songivan00"},"content":"CodeConnect is a specialised task management that can help NUS CS students keep track of their tasks in any modules and is linked to their local contacts to find students that take the same modules. This gives them an easy way to source for help within each module.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dsongivan00\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"* **Enhancements to existing features**: ","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"  * Changed naming convention for all Contacts features","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"  * Added and allowed commands to take in Mods field ","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"  * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    * Added documentation for the features `list` and `listc`","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"    * Added Non-Functional Requirements","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"songivan00":31}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"import seedu.address.storage.TaskListStorage;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"        // initialise storage for AB","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        TaskListStorage taskListStorage \u003d new JsonTaskListStorage(userPrefs.getTaskListFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        storage \u003d new StorageManager(addressBookStorage, taskListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"JonLamy"},"content":"        // is aligned with developer guide section","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        ReadOnlyAddressBook initialAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        Optional\u003cReadOnlyTaskList\u003e taskListOptional;","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"        ReadOnlyTaskList initialTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"            initialAddressBook \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"            initialAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"            initialAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"            taskListOptional \u003d storage.readTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"            if (!taskListOptional.isPresent()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TaskList\");","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"            initialTaskList \u003d taskListOptional.orElseGet(SampleDataUtil::getSampleTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"            initialTaskList \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"            initialTaskList \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"        return new ModelManager(initialAddressBook, initialTaskList, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"angkl0":4,"parnikkapore":22,"JonLamy":2,"songivan00":1,"-":178}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d person(s) listed!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d task(s) listed!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"angkl0":1,"danzzzerl":2,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"songivan00":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"            storage.saveTaskList(model.getTaskList());","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"songivan00"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"songivan00"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"angkl0":1,"songivan00":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"    public static final String COMMAND_WORD \u003d \"addc\";","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"            + \"[\" + PREFIX_MODULE + \"MODULE]...\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"            + PREFIX_TAG + \"owesMoney\"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"            + PREFIX_MODULE + \"CS1101S \"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"            + PREFIX_MODULE + \"ES2660 \";","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"    public AddContactCommand(Person person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"songivan00"},"content":"                || (other instanceof AddContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"songivan00"},"content":"                \u0026\u0026 toAdd.equals(((AddContactCommand) other).toAdd));","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JonLamy":5,"songivan00":5,"-":61}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_LONG;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":" * Adds a task to the address book.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"            + PREFIX_DEADLINE + \"{deadline}\" + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"            + PREFIX_MODULE_LONG + \"{module}\" + \"\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"            + \"Lab2\" + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"            + PREFIX_DEADLINE + \"2022-02-02 23:59\" + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"            + PREFIX_MODULE_LONG + \"CS2030S\";","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    public static final String TEMPLATE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list\";","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    private final Task toAdd;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        toAdd \u003d task;","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        return new CommandResult(String.format(TEMPLATE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"parnikkapore":58}},{"path":"src/main/java/seedu/address/logic/commands/DeleteContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"public class DeleteContactCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"    public static final String COMMAND_WORD \u003d \"delc\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"    public DeleteContactCommand(Index targetIndex) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"                || (other instanceof DeleteContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"songivan00"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteContactCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":5,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" * Deletes a task identified using it\u0027s displayed index from the task list.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    public static final String COMMAND_WORD \u003d \"del\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"            + \"Parameters: {index} (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"parnikkapore":53}},{"path":"src/main/java/seedu/address/logic/commands/EditContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"public class EditContactCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"    public static final String COMMAND_WORD \u003d \"editc\";","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"            + \"[\" + PREFIX_MODULE + \"MODS] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"songivan00"},"content":"    public EditContactCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"JonLamy"},"content":"        Set\u003cModule\u003e updatedModules \u003d editPersonDescriptor.getMods().orElse(personToEdit.getModules());","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"JonLamy"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedModules);","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"songivan00"},"content":"        if (!(other instanceof EditContactCommand)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"songivan00"},"content":"        EditContactCommand e \u003d (EditContactCommand) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"JonLamy"},"content":"        private Set\u003cModule\u003e modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"JonLamy"},"content":"            setMods(toCopy.modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"JonLamy"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"JonLamy"},"content":"        public void setMods(Set\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":212,"author":{"gitId":"JonLamy"},"content":"            this.modules \u003d modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":213,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":214,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"JonLamy"},"content":"        public Optional\u003cSet\u003cModule\u003e\u003e getMods() {","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"JonLamy"},"content":"            return Optional.ofNullable(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":217,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"songivan00"},"content":"                    \u0026\u0026 getMods().equals(e.getMods())","lastModifiedDate":"2022-10-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"JonLamy":17,"songivan00":7,"-":219}},{"path":"src/main/java/seedu/address/logic/commands/FindContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.person.ModuleTakenPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"public class FindContactCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"    public static final String COMMAND_WORD \u003d \"findc\";","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"    public FindContactCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"    // TODO","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"    public FindContactCommand(ModuleTakenPredicate predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"                || (other instanceof FindContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"                \u0026\u0026 predicate.equals(((FindContactCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JonLamy":16,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.TaskContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.TaskContainsModulesPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":" * Finds and lists all tasks in the TaskList whose description contains any of the argument keywords.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks in the TaskList whose description \"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"            + \"contains the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/ lecture 20\";","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    private final Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    public FindTaskCommand(TaskContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    public FindTaskCommand(TaskContainsModulesPredicate predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"                || (other instanceof FindTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"danzzzerl":50}},{"path":"src/main/java/seedu/address/logic/commands/ListContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"public class ListContactCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"    public static final String COMMAND_WORD \u003d \"listc\";","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songivan00":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":24}},{"path":"src/main/java/seedu/address/logic/commands/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":" * Marks a task as done.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"            + \": Marks the task identified by the index number used in the displayed task list as completed.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Task marked as completed: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_TASK_ALREADY_COMPLETED \u003d \"This task is already marked as completed.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    public MarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"        if (taskToMark.getStatus().getIsComplete()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"            throw new CommandException(MESSAGE_TASK_ALREADY_COMPLETED);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        Task markedTask \u003d new Task(","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"                taskToMark.getName(), taskToMark.getModule(), taskToMark.getDeadline(), new Status(true));","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"        model.setTask(taskToMark, markedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, markedTask));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"                || (other instanceof MarkTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"                \u0026\u0026 targetIndex.equals(((MarkTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":62}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":" * Marks a task as done.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"            + \": Unmarks the task identified by the index number used in the displayed task list as not complete.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Task unmarked as not complete: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_TASK_ALREADY_NOT_COMPLETED \u003d \"This task is already unmarked as not complete.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    public UnmarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        Task taskToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"        if (!taskToUnmark.getStatus().getIsComplete()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"            throw new CommandException(MESSAGE_TASK_ALREADY_NOT_COMPLETED);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        Task unmarkedTask \u003d new Task(","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"                taskToUnmark.getName(), taskToUnmark.getModule(), taskToUnmark.getDeadline(), new Status(false));","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"        model.setTask(taskToUnmark, unmarkedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"                || (other instanceof UnmarkTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"                \u0026\u0026 targetIndex.equals(((UnmarkTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":62}},{"path":"src/main/java/seedu/address/logic/parser/AddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"public class AddContactCommandParser implements Parser\u003cAddContactCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"    public AddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"                        PREFIX_MODULE);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"        Set\u003cModule\u003e moduleList \u003d ParserUtil.parseModules(argMultimap.getAllValues(PREFIX_MODULE));","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, moduleList);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"        return new AddContactCommand(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"JonLamy":5,"songivan00":6,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_LONG;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DEADLINE, PREFIX_MODULE_LONG);","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DEADLINE, PREFIX_MODULE_LONG)","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        TaskName name \u003d ParserUtil.parseTaskName(argMultimap.getPreamble());","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        Deadline deadline \u003d ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        Module module \u003d ParserUtil.parseModule(argMultimap.getValue(PREFIX_MODULE_LONG).get());","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"        Status status \u003d new Status(false);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"        Task task \u003d new Task(name, module, deadline, status);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"parnikkapore":50,"danzzzerl":4}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"        case AddContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"            return new AddContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"        case EditContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"            return new EditContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"        case DeleteContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"songivan00"},"content":"            return new DeleteContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"        case FindContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"            return new FindContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"songivan00"},"content":"        case ListContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"songivan00"},"content":"            return new ListContactCommand();","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"            return new MarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"            return new UnmarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"angkl0":11,"parnikkapore":6,"JonLamy":3,"songivan00":12,"danzzzerl":5,"-":63}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"by/\");","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    public static final Prefix PREFIX_MODULE_LONG \u003d new Prefix(\"mod/\");","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"parnikkapore":3,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"public class DeleteContactCommandParser implements Parser\u003cDeleteContactCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"    public DeleteContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"            return new DeleteContactCommand(index);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"songivan00":5,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"parnikkapore":29}},{"path":"src/main/java/seedu/address/logic/parser/EditContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"public class EditContactCommandParser implements Parser\u003cEditContactCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"    public EditContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"                        PREFIX_MODULE);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"                    EditContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"        parseModulesForEdit(argMultimap.getAllValues(PREFIX_MODULE)).ifPresent(editPersonDescriptor::setMods);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"songivan00"},"content":"            throw new ParseException(EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"songivan00"},"content":"        return new EditContactCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"JonLamy"},"content":"     * Parses {@code Collection\u003cString\u003e modules} into a {@code Set\u003cModule\u003e} if {@code modules} is non-empty.","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"JonLamy"},"content":"     * If {@code modules} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"JonLamy"},"content":"     * {@code Set\u003cModule\u003e} containing zero modules.","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"JonLamy"},"content":"    private Optional\u003cSet\u003cModule\u003e\u003e parseModulesForEdit(Collection\u003cString\u003e modules) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"JonLamy"},"content":"        assert modules !\u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"JonLamy"},"content":"        if (modules.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"JonLamy"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"JonLamy"},"content":"        Collection\u003cString\u003e moduleSet \u003d modules.size() \u003d\u003d 1 \u0026\u0026 modules.contains(\"\") ? Collections.emptySet() : modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"JonLamy"},"content":"        return Optional.of(ParserUtil.parseModules(moduleSet));","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JonLamy":19,"songivan00":9,"-":74}},{"path":"src/main/java/seedu/address/logic/parser/FindContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.person.ModuleTakenPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":" * Parses input arguments and creates a new FindContactCommand object","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"public class FindContactCommandParser implements Parser\u003cFindContactCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"     * Parses the given {@code String} of arguments in the context of the FindContactCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"     * and returns a FindContactCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"    public FindContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"        // John Lim Jacky","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"        // n/ Johnathan Sally","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"        // m/ Jacob","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"        Scanner argScanner \u003d new Scanner(trimmedArgs);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"        Prefix prefix \u003d new Prefix(argScanner.next());","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"            String trimmedKeywords \u003d argScanner.nextLine().trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"            String[] nameKeywords \u003d trimmedKeywords.split(\"\\\\s+\");","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"            return new FindContactCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"        } else if (prefix.equals(PREFIX_MODULE)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"            String trimmedModules \u003d argScanner.nextLine().trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"            String[] modKeywords \u003d trimmedModules.split(\"\\\\s+\");","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"            ArrayList\u003cModule\u003e mods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"            for (String modName : modKeywords) {","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"JonLamy"},"content":"                mods.add(new Module(modName));","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"JonLamy"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"            return new FindContactCommand(new ModuleTakenPredicate(mods));","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"JonLamy"},"content":"        } else {","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"            String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"            return new FindContactCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"JonLamy":67}},{"path":"src/main/java/seedu/address/logic/parser/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.TaskContainsKeywordsPredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.TaskContainsModulesPredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        Scanner argScanner \u003d new Scanner(trimmedArgs);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"        Prefix prefix \u003d new Prefix(argScanner.next());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        if (prefix.equals(PREFIX_NAME) \u0026\u0026 argScanner.hasNextLine()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"            String trimmedKeywords \u003d argScanner.nextLine().trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"            String[] nameKeywords \u003d trimmedKeywords.split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"            return new FindTaskCommand(new TaskContainsKeywordsPredicate((Arrays.asList(nameKeywords))));","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        } else if (prefix.equals(PREFIX_MODULE) \u0026\u0026 argScanner.hasNextLine()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"            String trimmedModules \u003d argScanner.nextLine().trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"            String[] modKeywords \u003d trimmedModules.split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"            ArrayList\u003cModule\u003e mods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"            for (String modName : modKeywords) {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"                mods.add(new Module(modName));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"            return new FindTaskCommand(new TaskContainsModulesPredicate(mods));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"            String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"            return new FindTaskCommand(new TaskContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"danzzzerl":64}},{"path":"src/main/java/seedu/address/logic/parser/MarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":" * Parses input arguments and creates a new MarkTaskCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"public class MarkTaskCommandParser implements Parser\u003cMarkTaskCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTaskCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"     * and returns a MarkTaskCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    public MarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"            return new MarkTaskCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"JonLamy"},"content":"     * Parses a {@code String module} into a {@code Module}.","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"JonLamy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"JonLamy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"JonLamy"},"content":"     * @throws ParseException if the given {@code module} is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"JonLamy"},"content":"    public static Module parseModule(String module) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"JonLamy"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"JonLamy"},"content":"        String trimmedModule \u003d module.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"JonLamy"},"content":"        if (!Module.isValidModule(trimmedModule)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"JonLamy"},"content":"            throw new ParseException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"JonLamy"},"content":"        return new Module(trimmedModule);","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"songivan00"},"content":"     * Parses a {@code String mods} into an {@code Mods}.","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"songivan00"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"songivan00"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"songivan00"},"content":"     * @throws ParseException if the given {@code mods} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"JonLamy"},"content":"    public static Set\u003cModule\u003e parseModules(Collection\u003cString\u003e mods) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"songivan00"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"JonLamy"},"content":"        final Set\u003cModule\u003e moduleSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"JonLamy"},"content":"        for (String moduleName: mods) {","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"JonLamy"},"content":"            moduleSet.add(parseModule(moduleName));","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"JonLamy"},"content":"        return moduleSet;","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":159,"author":{"gitId":"parnikkapore"},"content":"     * Parses a {@code String name} into a {@code TaskName}.","lastModifiedDate":"2022-10-07"},{"lineNumber":160,"author":{"gitId":"parnikkapore"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-07"},{"lineNumber":161,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":162,"author":{"gitId":"parnikkapore"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-10-07"},{"lineNumber":163,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":164,"author":{"gitId":"parnikkapore"},"content":"    public static TaskName parseTaskName(String name) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":165,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-07"},{"lineNumber":166,"author":{"gitId":"parnikkapore"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2022-10-07"},{"lineNumber":167,"author":{"gitId":"parnikkapore"},"content":"        if (!TaskName.isValidName(trimmedName)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":168,"author":{"gitId":"parnikkapore"},"content":"            throw new ParseException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":169,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":170,"author":{"gitId":"parnikkapore"},"content":"        return new TaskName(trimmedName);","lastModifiedDate":"2022-10-07"},{"lineNumber":171,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":172,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":173,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":174,"author":{"gitId":"parnikkapore"},"content":"     * Parses a {@code String deadline} into a {@code Deadline}.","lastModifiedDate":"2022-10-07"},{"lineNumber":175,"author":{"gitId":"parnikkapore"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-07"},{"lineNumber":176,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":177,"author":{"gitId":"parnikkapore"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":179,"author":{"gitId":"parnikkapore"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":180,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-10-07"},{"lineNumber":181,"author":{"gitId":"parnikkapore"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2022-10-07"},{"lineNumber":182,"author":{"gitId":"parnikkapore"},"content":"        if (!Deadline.isValidDeadline(trimmedDeadline)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":183,"author":{"gitId":"parnikkapore"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":184,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":185,"author":{"gitId":"parnikkapore"},"content":"        return new Deadline(trimmedDeadline);","lastModifiedDate":"2022-10-07"},{"lineNumber":186,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"parnikkapore":32,"JonLamy":21,"songivan00":9,"danzzzerl":1,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":" * Parses input arguments and creates a new UnmarkTaskCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"public class UnmarkTaskCommandParser implements Parser\u003cUnmarkTaskCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkTaskCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"     * and returns a UnmarkTaskCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    public UnmarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"            return new UnmarkTaskCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":30}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"     * Returns the user prefs\u0027 task list file path.","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"     * Sets the user prefs\u0027 task list file path.","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    void setTaskListFilePath(Path taskListFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"     * Replaces task list data with the data in {@code addressBook}.","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    void setTaskList(ReadOnlyTaskList taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"songivan00"},"content":"    /** Returns the TaskList */","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"songivan00"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"parnikkapore"},"content":"     * Adds the given task.","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"parnikkapore"},"content":"     * {@code task} must not already exist in the task list.","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"parnikkapore"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"parnikkapore"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"parnikkapore"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"songivan00"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"songivan00"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"songivan00"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"songivan00"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"songivan00"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"parnikkapore":40,"songivan00":13,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyTaskList taskList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(addressBook, taskList, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"                + \" and task list: \" + taskList","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"                + \" and user prefs: \" + userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"        this.taskList \u003d new TaskList(taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskList.getTaskList());","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"        this(new AddressBook(), new TaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"        return userPrefs.getTaskListFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"        userPrefs.setTaskListFilePath(taskListFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"parnikkapore"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"parnikkapore"},"content":"    public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"parnikkapore"},"content":"        this.taskList.resetData(taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"parnikkapore"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"parnikkapore"},"content":"        return taskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"parnikkapore"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"parnikkapore"},"content":"        return taskList.hasTask(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"parnikkapore"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"parnikkapore"},"content":"        taskList.removeTask(target);","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"parnikkapore"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"parnikkapore"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"parnikkapore"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":179,"author":{"gitId":"parnikkapore"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-04"},{"lineNumber":180,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-04"},{"lineNumber":181,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":182,"author":{"gitId":"parnikkapore"},"content":"        taskList.setTask(target, editedTask);","lastModifiedDate":"2022-10-04"},{"lineNumber":183,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":184,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":185,"author":{"gitId":"parnikkapore"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":186,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":187,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":188,"author":{"gitId":"parnikkapore"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"parnikkapore"},"content":"     * {@code versionedTaskList}","lastModifiedDate":"2022-10-04"},{"lineNumber":190,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":191,"author":{"gitId":"songivan00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":192,"author":{"gitId":"songivan00"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":193,"author":{"gitId":"songivan00"},"content":"        return filteredTasks;","lastModifiedDate":"2022-10-04"},{"lineNumber":194,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":195,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":196,"author":{"gitId":"songivan00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":197,"author":{"gitId":"songivan00"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":198,"author":{"gitId":"songivan00"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":199,"author":{"gitId":"songivan00"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":200,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":201,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":202,"author":{"gitId":"parnikkapore"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d General operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":203,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":219,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 taskList.equals(other.taskList)","lastModifiedDate":"2022-10-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":221,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-04"},{"lineNumber":222,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2022-10-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"angkl0":3,"parnikkapore":59,"songivan00":18,"-":145}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"parnikkapore":1,"-":16}},{"path":"src/main/java/seedu/address/model/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":" * Wraps all date at the task list level","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"public class TaskList implements ReadOnlyTaskList {","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    /*","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    {","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    public TaskList() {}","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"     * Creates an AddressBook using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    public TaskList(ReadOnlyTaskList toBeCopied) {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        this();","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    //// task-level operations","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        tasks.add(p);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        tasks.remove(key);","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"    //// util methods","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 tasks.equals(((TaskList) other).tasks));","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"        return tasks.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":120}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    private Path taskListFilePath \u003d Paths.get(\"data\" , \"tasks.json\");","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        setTaskListFilePath(newUserPrefs.getTaskListFilePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        return taskListFilePath;","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"        this.taskListFilePath \u003d taskListFilePath;","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 taskListFilePath.equals(o.taskListFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, taskListFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"        sb.append(\"\\nLocal address book data file location : \" + addressBookFilePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"        sb.append(\"\\nLocal task list data file locaton : \" + taskListFilePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"angkl0":2,"parnikkapore":14,"-":84}},{"path":"src/main/java/seedu/address/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task\u0027s module code in the task list.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModule(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"public class Module {","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"            \"Module codes should contain only alphanumeric characters and should not be blank.\";","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    /*","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"    public final String moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     * Constructs a {@code Module}.","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     * @param module A valid module code.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    public Module(String module) {","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        checkArgument(isValidModule(module), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"        this.moduleName \u003d module;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if a given string is a valid module code.","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    public static boolean isValidModule(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"        return moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof Module // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"                \u0026\u0026 moduleName.equalsIgnoreCase(((Module) other).moduleName)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"        return moduleName.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":52,"JonLamy":7}},{"path":"src/main/java/seedu/address/model/person/ModuleTakenPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":" * Tests if any of a {@code Person}\u0027s {@code Module} matches any of the keywords given.","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"public class ModuleTakenPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"    private final List\u003cModule\u003e modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"    public ModuleTakenPredicate(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"        boolean flag \u003d false;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"        Set\u003cModule\u003e personMods \u003d person.getModules();","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"        for (Module mod : modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"            for (Module pmod : personMods) {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"                if (mod.equals(pmod)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"                    flag \u003d true;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"                }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"        return flag;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"                || (other instanceof ModuleTakenPredicate// instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"                \u0026\u0026 modules.equals(((ModuleTakenPredicate) other).modules)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"JonLamy":40}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"    private final Set\u003cModule\u003e modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Set\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        requireAllNonNull(name, phone, email, address, tags, modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"    public Set\u003cModule\u003e getModules() {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"JonLamy"},"content":"        return Collections.unmodifiableSet(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"JonLamy"},"content":"                \u0026\u0026 otherPerson.getModules().equals(getModules())","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"JonLamy"},"content":"        return Objects.hash(name, phone, email, address, tags, modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"JonLamy"},"content":"        Set\u003cModule\u003e modules \u003d getModules();","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"JonLamy"},"content":"        if (!modules.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"JonLamy"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"JonLamy"},"content":"            modules.forEach(builder::append);","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JonLamy":16,"-":120}},{"path":"src/main/java/seedu/address/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task\u0027s deadline.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeadline(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"public class Deadline {","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"            \"Deadlines should be entered in the format \\\"2006-01-15 15:04\\\"\";","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    //@@author parnikkapore-reused","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Date format taken from https://github.com/angkl0/ip/blob/master/src/main/java/duke/tasks/Deadline.java#L39","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // and https://github.com/angkl0/ip/blob/master/src/main/java/duke/commands/DeadlineCommand.java#L42","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter WRITE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"hh:mm a \u0027on\u0027 dd/MM/yyyy\");","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter READ_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public final LocalDateTime deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code Deadline} from a handwritten description.","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param deadlineString A valid deadline written as a string.","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Deadline(String deadlineString) {","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(deadlineString);","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(isValidDeadline(deadlineString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        LocalDateTime newDeadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            newDeadline \u003d LocalDateTime.parse(deadlineString, READ_FORMATTER);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            assert false : \"Checked deadline string should not fail to parse?\";","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            newDeadline \u003d LocalDateTime.now(); // A good enough fallback","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.deadline \u003d newDeadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code Deadline} from a LocalDateTime.","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param deadline A valid deadline.","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Deadline(LocalDateTime deadline) {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid deadline.","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            LocalDateTime.parse(test, READ_FORMATTER);","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return deadline.format(WRITE_FORMATTER);","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                || (other instanceof Deadline // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 deadline.equals(((Deadline) other).deadline)); // state check","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return deadline.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":19,"-":69}},{"path":"src/main/java/seedu/address/model/task/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":" * Represents a Task\u0027s status in the task list.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"public class Status {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"String should only be either \\\"true\\\" or \\\"false\\\".\";","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"    private static final String completedSymbol \u003d \"\\u2713\";","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    private static final String incompleteSymbol \u003d \"\\u2716\";","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"    private static final String completedString \u003d \"true\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"    private static final String incompleteString \u003d \"false\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    private boolean isComplete;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"     * Constructs a new Status with a boolean parameter. Every field must be present and not null.","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    public Status(boolean isComplete) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"        requireNonNull(isComplete);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"     * Constructs a new Status with a String parameter. Every field must be present and not null.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    public Status(String status) {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        this.isComplete \u003d status.equals(completedString);","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"     * Returns true if a given string represents a status.","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        return test.equals(completedString) || test.equals(incompleteString);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"    public boolean getIsComplete() {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"        return isComplete;","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"    public String toDisplayString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        return isComplete ? completedSymbol : incompleteSymbol;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        return isComplete ? completedString : incompleteString;","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"        } else if (other instanceof Status) { // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"            Boolean thisBoolean \u003d this.isComplete;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"            Boolean otherBoolean \u003d ((Status) other).getIsComplete();","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"            return thisBoolean.equals(otherBoolean); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"        Boolean b \u003d isComplete;","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"        return b.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":75}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task in the task list.","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"public class Task {","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    private final TaskName name;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    private final Module module;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    private final Deadline deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    private Status status;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"     * Constructs a new Task. Every field must be present and not null.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    public Task(TaskName name, Module module, Deadline deadline, Status status) {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(name, module, deadline);","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    public TaskName getName() {","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        return name;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    public Module getModule() {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        return module;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        return deadline;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    public Status getStatus() {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"        return status;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"    public void setStatus(boolean isComplete) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        this.status \u003d new Status(isComplete);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"    public void setStatus(String status) {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if the tasks have the same name and module code.","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    public boolean isSameTask(Task other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        return other !\u003d null","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 other.getName().equals(this.getName())","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 other.getModule().equals(this.getModule());","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if both tasks have equal values in all fields.","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 otherTask.getModule().equals(this.getModule())","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(this.getDeadline())","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"                \u0026\u0026 otherTask.getStatus().equals(this.getStatus());","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"        return Objects.hash(this.name, this.module, this.deadline, this.status);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"        return this.getName()","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"                + \"; Module: \" + this.getModule()","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"                + \"; Deadline: \" + this.getDeadline()","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"                + \"; Status: \" + this.getStatus();","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"angkl0":20,"parnikkapore":79,"JonLamy":3}},{"path":"src/main/java/seedu/address/model/task/TaskContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"public class TaskContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    public TaskContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().fullName, keyword));","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"                || (other instanceof TaskContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 keywords.equals(((TaskContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"danzzzerl":31}},{"path":"src/main/java/seedu/address/model/task/TaskContainsModulesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":" * Tests that a {@code Task}\u0027s {@code module} matches the module given.","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"public class TaskContainsModulesPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    private final List\u003cModule\u003e modules;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    public TaskContainsModulesPredicate(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        return modules.stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"                .anyMatch(module -\u003e StringUtil.containsWordIgnoreCase(task.getModule().moduleName, module.toString()));","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"                || (other instanceof TaskContainsModulesPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 modules.equals(((TaskContainsModulesPredicate) other).modules)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"danzzzerl":32}},{"path":"src/main/java/seedu/address/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":" * Represents a Task\u0027s name in the task list.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"public class TaskName {","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names should not be blank\";","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    /*","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S[\\\\S ]*\";","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    public final String fullName;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    public TaskName(String name) {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        return fullName;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof seedu.address.model.task.TaskName // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"                \u0026\u0026 fullName.equals(((seedu.address.model.task.TaskName) other).fullName)); // state check","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":58}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the person {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"     * The person identity of {@code editedTask} must not be the same as another existing person in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"parnikkapore"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"parnikkapore"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"parnikkapore"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"parnikkapore"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"parnikkapore"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"                    return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"parnikkapore"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"parnikkapore"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"parnikkapore"},"content":"        return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":137}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":" * identity).","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"parnikkapore":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"                    getModuleSet(\"CS1231\", \"CS101S\", \"ES2660\", \"IS1103\", \"ES2660\")),","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"                    getModuleSet(\"CS2030S\", \"CS2040S\", \"GEA1000\", \"ES2660\", \"MA2001\")),","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"neighbours\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"                    getModuleSet(\"CS2100\", \"CS2101\", \"GEN2001\", \"ST2334\", \"CS2103T\")),","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"family\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"                    getModuleSet(\"CS1101S\", \"GEA1000\", \"IS1103\", \"MA1521\", \"MA2001\")),","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"classmates\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"                    getModuleSet(\"CS2001\", \"CS2019S\", \"CS2106\", \"CS2107\", \"GEA1000\")),","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"                getTagSet(\"colleagues\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"                    getModuleSet(\"CS2103T\", \"CS2019S\", \"CS2106\", \"CS2107\", \"GEA1000\"))","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"        return new Task[] {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"            new Task(new TaskName(\"Lab2\"), new Module(\"CS2030S\"), new Deadline(\"2022-02-02 23:59\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"                    new Status(false)),","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"            new Task(new TaskName(\"Problem Set 2\"), new Module(\"CS2040S\"),","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"                    new Deadline(\"2022-02-04 23:59\"), new Status(false))","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"        };","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"JonLamy"},"content":"     * Returns a module set containing the list of strings given.","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"JonLamy"},"content":"    public static Set\u003cModule\u003e getModuleSet(String... moduleNames) {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"JonLamy"},"content":"        return Arrays.stream(moduleNames)","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"JonLamy"},"content":"                .map(Module::new)","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"JonLamy"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"    public static ReadOnlyTaskList getSampleTaskList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"        TaskList sampleTl \u003d new TaskList();","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"            sampleTl.addTask(sampleTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"        return sampleTl;","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"angkl0":22,"JonLamy":26,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":" * Jackson-friendly version of {@link Module}.","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"class JsonAdaptedModule {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"    private final String moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"    public JsonAdaptedModule(String moduleName) {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"    public JsonAdaptedModule(Module source) {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"        moduleName \u003d source.moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"    @JsonValue","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"    public String getModuleName() {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        return moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"        if (!Module.isValidModule(moduleName)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"        return new Module(moduleName);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"JonLamy":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"                             @JsonProperty(\"mods\") List\u003cJsonAdaptedModule\u003e modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"            this.tags.addAll(tagged);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"        if (modules !\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"            this.modules.addAll(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"        modules.addAll(source.getModules().stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"JonLamy"},"content":"                .map(JsonAdaptedModule::new)","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"JonLamy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"JonLamy"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"JonLamy"},"content":"        final List\u003cModule\u003e personModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"JonLamy"},"content":"        for (JsonAdaptedModule module: modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"JonLamy"},"content":"            personModules.add(module.toModelType());","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"JonLamy"},"content":"        final Set\u003cModule\u003e modelModules \u003d new HashSet\u003c\u003e(personModules);","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"JonLamy"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelModules);","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JonLamy":19,"songivan00":2,"-":103}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    private static final DateTimeFormatter DEADLINE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    public final String taskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    public final String module;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    public final String deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    public final String status;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    public JsonAdaptedTask(@JsonProperty(\"taskName\") String taskName, @JsonProperty(\"module\") String module,","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"            @JsonProperty(\"deadline\") String deadline, @JsonProperty(\"status\") String status) {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        taskName \u003d source.getName().fullName;","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"        module \u003d source.getModule().moduleName;","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        deadline \u003d source.getDeadline().deadline.format(DEADLINE_FORMATTER);","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        status \u003d source.getStatus().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"        if (taskName \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"        if (!TaskName.isValidName(taskName)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        final TaskName modelTaskName \u003d new TaskName(taskName);","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Module.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"        if (!Module.isValidModule(module)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"        final Module modelModule \u003d new Module(module);","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"        LocalDateTime parsedDeadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"        try {","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"            parsedDeadline \u003d LocalDateTime.parse(deadline, DEADLINE_FORMATTER);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"        Deadline modelDeadline \u003d new Deadline(parsedDeadline);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"        Status modelStatus \u003d new Status(status);","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"        return new Task(modelTaskName, modelModule, modelDeadline, modelStatus);","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":98,"JonLamy":2}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":" * An Immutable TaskList that is serializable to JSON format.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"@JsonRootName(value \u003d \"tasklist\")","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"class JsonSerializableTaskList {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"     * Constructs a {@code JsonSerializableTaskList} with the given tasks.","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    public JsonSerializableTaskList(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"     * Converts a given {@code ReadOnlyTaskList} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskList}.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    public JsonSerializableTaskList(ReadOnlyTaskList source) {","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"     * Converts this task list into the model\u0027s {@code TaskList} object.","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"    public TaskList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"            if (taskList.hasTask(task)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"        return taskList;","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"angkl0":61}},{"path":"src/main/java/seedu/address/storage/JsonTaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" * A class to access TaskList data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"public class JsonTaskListStorage implements TaskListStorage {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskListStorage.class);","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    public JsonTaskListStorage(Path filePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"        return filePath;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        return readTaskList(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"     * Similar to {@link #readTaskList()}.","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        Optional\u003cJsonSerializableTaskList\u003e jsonTaskList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"                filePath, JsonSerializableTaskList.class);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        if (!jsonTaskList.isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        try {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"            return Optional.of(jsonTaskList.get().toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        saveTaskList(taskList, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"     * Similar to {@link #saveTaskList(ReadOnlyTaskList)}.","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskList(taskList), filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"angkl0":80}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"public interface Storage extends AddressBookStorage, TaskListStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"angkl0":11,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    private TaskListStorage taskListStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    public StorageManager(","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"            AddressBookStorage addressBookStorage, TaskListStorage taskListStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"        this.taskListStorage \u003d taskListStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"        return taskListStorage.getTaskListFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"        return readTaskList(taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"        return taskListStorage.readTaskList(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"        saveTaskList(taskList, taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"angkl0"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"angkl0"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"angkl0"},"content":"        taskListStorage.saveTaskList(taskList, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"angkl0":34,"-":76}},{"path":"src/main/java/seedu/address/storage/TaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":" * Represents a storage for {@link seedu.address.model.TaskList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"public interface TaskListStorage {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"     * Returns TaskList data as a {@link ReadOnlyTaskList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"     * @see #getTaskListFilePath()","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"     * Saves the given {@link ReadOnlyTaskList} to the storage.","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"     * @param taskList cannot be null.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"     * @see #saveTaskList(ReadOnlyTaskList)","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":43}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"songivan00"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"songivan00"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"songivan00":7,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"    private FlowPane modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"        person.getModules().stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.moduleName))","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"JonLamy"},"content":"                .forEach(module -\u003e modules.getChildren().add(new Label(module.moduleName)));","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"JonLamy":4,"songivan00":1,"-":77}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    public final Task task;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    private Label name;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    private Label id;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    private Label module;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    private Label deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    private Label status;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        super(FXML);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        name.setText(task.getName().fullName);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"        module.setText(task.getModule().moduleName);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        status.setText(task.getStatus().toDisplayString());","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        deadline.setText(task.getDeadline().toString());","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"        // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":3,"JonLamy":1,"danzzzerl":65}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        super(FXML);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"                setText(null);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"            } else {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"danzzzerl":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":" * Interacts with Logic","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JonLamy":1,"-":88}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"        \u003cHBox fx:id\u003d\"listContainer\" styleClass\u003d\"pane-without-border\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"              HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"          \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"              HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"JonLamy"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"            \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"JonLamy":12,"-":60}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"      \u003cFlowPane fx:id\u003d\"modules\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JonLamy":1,"-":36}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"  \u003cText fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Contacts\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"      \u003cfont\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"         \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"      \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JonLamy":9,"-":4}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"                \u003cLabel fx:id\u003d\"status\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"            \u003cLabel fx:id\u003d\"module\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$module\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"            \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":1,"JonLamy":35}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"    \u003cText fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Tasks\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"        \u003cfont\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"            \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"        \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"JonLamy":15}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_DESC_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(temporaryFolder.resolve(\"taskList.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"songivan00"},"content":"        String deleteCommand \u003d \"delc 9\";","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"songivan00"},"content":"        String listCommand \u003d ListContactCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(listCommand, ListContactCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"        JsonTaskListStorage taskListStorage \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"                new JsonTaskListIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionTaskList.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"songivan00"},"content":"        String addContactCommand \u003d AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"JonLamy"},"content":"                + ADDRESS_DESC_AMY + MODULE_DESC_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(addContactCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"songivan00"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"songivan00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTaskList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"angkl0"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"angkl0"},"content":"    private static class JsonTaskListIoExceptionThrowingStub extends JsonTaskListStorage {","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"angkl0"},"content":"        private JsonTaskListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"angkl0"},"content":"            super(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"angkl0"},"content":"        public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"angkl0"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"angkl0":21,"JonLamy":2,"songivan00":13,"-":151}},{"path":"src/test/java/seedu/address/logic/commands/AddContactCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"songivan00"},"content":" * Contains integration tests (interaction with the Model) for {@code AddContactCommand}.","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"public class AddContactCommandIntegrationTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    //should use getTypicalTaskList() instead of null","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(new AddContactCommand(validPerson), model,","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"                String.format(AddContactCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(new AddContactCommand(personInList), model, AddContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"songivan00":9,"-":38}},{"path":"src/test/java/seedu/address/logic/commands/AddContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"public class AddContactCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"songivan00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddContactCommand(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"        CommandResult commandResult \u003d new AddContactCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"        assertEquals(String.format(AddContactCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"        AddContactCommand addContactCommand \u003d new AddContactCommand(validPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"songivan00"},"content":"                addContactCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addContactCommand.execute(modelStub));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"songivan00"},"content":"        AddContactCommand addAliceCommand \u003d new AddContactCommand(alice);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"songivan00"},"content":"        AddContactCommand addBobCommand \u003d new AddContactCommand(bob);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"songivan00"},"content":"        AddContactCommand addAliceCommandCopy \u003d new AddContactCommand(alice);","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"songivan00"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"songivan00"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"songivan00"},"content":"            return null;","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"songivan00"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"songivan00"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"songivan00"},"content":"            return null;","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"songivan00"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"songivan00"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"angkl0"},"content":"        public void setTask(Task task, Task editedTask) {","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"angkl0"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"songivan00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"angkl0"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"angkl0"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"angkl0"},"content":"        public void setTaskList(ReadOnlyTaskList newData) {","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"angkl0"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"angkl0"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"angkl0"},"content":"        public void deleteTask(Task task) {","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"angkl0":36,"songivan00":27,"-":185}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"songivan00"},"content":"    //should be getTypicalTaskList()","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"songivan00":4,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"    public static final String VALID_MODULE_CS1101 \u003d \"CS1101\";","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"    public static final String VALID_MODULE_CS2030S \u003d \"CS2030S\";","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"    public static final String MODULE_DESC_CS1101 \u003d \" \" + PREFIX_MODULE + VALID_MODULE_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"JonLamy"},"content":"    public static final String MODULE_DESC_CS2030S \u003d \" \" + PREFIX_MODULE + VALID_MODULE_CS2030S;","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"    public static final String INVALID_MODS_DESC \u003d \" \" + PREFIX_MODULE + \"cs****\"; // space not allowed","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"songivan00"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"songivan00"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"JonLamy"},"content":"                .withTags(VALID_TAG_FRIEND).withModules(VALID_MODULE_CS1101).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"JonLamy"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withModules(VALID_MODULE_CS2030S).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"JonLamy":8,"songivan00":2,"-":124}},{"path":"src/test/java/seedu/address/logic/commands/DeleteContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"public class DeleteContactCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"    //should be getTypicalTaskList()","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"songivan00"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"songivan00"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"songivan00"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"songivan00"},"content":"        DeleteContactCommand deleteFirstCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"        DeleteContactCommand deleteSecondCommand \u003d new DeleteContactCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"songivan00"},"content":"        DeleteContactCommand deleteFirstCommandCopy \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"songivan00":19,"-":92}},{"path":"src/test/java/seedu/address/logic/commands/EditContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"songivan00"},"content":"public class EditContactCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"    //should be getTypicalTaskList","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"songivan00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"songivan00"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"songivan00"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"songivan00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"songivan00"},"content":"                new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"songivan00"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"songivan00"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"songivan00"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"songivan00"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"songivan00"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"songivan00"},"content":"        final EditContactCommand standardCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"songivan00"},"content":"        EditContactCommand commandWithSameValues \u003d new EditContactCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"songivan00"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"songivan00"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"songivan00":38,"-":142}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"songivan00":1,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/FindContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":" * Contains integration tests (interaction with the Model) for {@code FindContactCommand}.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"public class FindContactCommandTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"    //should be getTypicalTaskList()","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"songivan00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand findFirstCommand \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand findSecondCommand \u003d new FindContactCommand(secondPredicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand findFirstCommandCopy \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"JonLamy":7,"songivan00":4,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/FindTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.testutil.TypicalTasks.LAB_2;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.TaskContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTaskCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"public class FindTaskCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    //should be getTypicalTaskList()","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"                new TaskContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"                new TaskContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand findFirstCommand \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand findSecondCommand \u003d new FindTaskCommand(secondPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand findFirstCommandCopy \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate predicate \u003d preparePredicate(\"Lab TP\");","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(Arrays.asList(FINISH_TP, LAB_2), model.getFilteredTaskList());","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"danzzzerl"},"content":"    private TaskContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"danzzzerl"},"content":"        return new TaskContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"danzzzerl":84}},{"path":"src/test/java/seedu/address/logic/commands/ListContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"public class ListContactCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"songivan00"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(new ListContactCommand(), model, ListContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"        Assertions.assertTrue(model.getAddressBook().equals(expectedModel.getAddressBook()));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"        assertCommandSuccess(new ListContactCommand(), model, ListContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"angkl0":2,"songivan00":6,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/ListTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListTaskCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"public class ListTaskCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"    private Model model;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":33}},{"path":"src/test/java/seedu/address/logic/commands/MarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":" * {@code MarkTaskCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"public class MarkTaskCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    //should be getTypicalTaskList()","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(0);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        taskToMark.setStatus(false);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        Task markedTask \u003d new Task(","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"                taskToMark.getName(), taskToMark.getModule(), taskToMark.getDeadline(), new Status(true));","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"        expectedModel.setTask(taskToMark, markedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(MarkTaskCommand.MESSAGE_MARK_TASK_SUCCESS, markedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(markTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        assertCommandFailure(markTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"    public void excecute_markUnmarkedTask_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(0);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"        taskToMark.setStatus(false);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"        Task markedTask \u003d new Task(","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"                taskToMark.getName(), taskToMark.getModule(), taskToMark.getDeadline(), new Status(true));","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"        expectedModel.setTask(taskToMark, markedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(MarkTaskCommand.MESSAGE_MARK_TASK_SUCCESS, markedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(markTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"    public void execute_markMarkedTask_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"        model.getFilteredTaskList().get(0).setStatus(true);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"        assertCommandFailure(markTaskCommand, model, MarkTaskCommand.MESSAGE_TASK_ALREADY_COMPLETED);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskFirstCommand \u003d new MarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskSecondCommand \u003d new MarkTaskCommand(Index.fromZeroBased(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"        assertTrue(markTaskFirstCommand.equals(markTaskFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"        MarkTaskCommand markTaskFirstCommandCopy \u003d new MarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"        assertTrue(markTaskFirstCommand.equals(markTaskFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"        assertFalse(markTaskFirstCommand.equals(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"        assertFalse(markTaskFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"        assertFalse(markTaskFirstCommand.equals(markTaskSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":99}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":" * {@code UnmarkTaskCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"public class UnmarkTaskCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    //should be getTypicalTaskList()","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"        Task taskToUnmark \u003d model.getFilteredTaskList().get(0);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        taskToUnmark.setStatus(true);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        Task unmarkedTask \u003d new Task(","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"                taskToUnmark.getName(), taskToUnmark.getModule(), taskToUnmark.getDeadline(), new Status(false));","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"        expectedModel.setTask(taskToUnmark, unmarkedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(UnmarkTaskCommand.MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(unmarkTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        assertCommandFailure(unmarkTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"    public void excecute_unmarkMarkedTask_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(0);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"        taskToMark.setStatus(true);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"        Task unmarkedTask \u003d new Task(","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"                taskToMark.getName(), taskToMark.getModule(), taskToMark.getDeadline(), new Status(false));","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"        expectedModel.setTask(taskToMark, unmarkedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d String.format(UnmarkTaskCommand.MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        assertCommandSuccess(unmarkTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"    public void execute_unmarkUnmarkedTask_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"        model.getFilteredTaskList().get(0).setStatus(false);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"        assertCommandFailure(unmarkTaskCommand, model, UnmarkTaskCommand.MESSAGE_TASK_ALREADY_NOT_COMPLETED);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskFirstCommand \u003d new UnmarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskSecondCommand \u003d new UnmarkTaskCommand(Index.fromZeroBased(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"        assertTrue(unmarkTaskFirstCommand.equals(unmarkTaskFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"        UnmarkTaskCommand unmarkTaskFirstCommandCopy \u003d new UnmarkTaskCommand(Index.fromZeroBased(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"        assertTrue(unmarkTaskFirstCommand.equals(unmarkTaskFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"        assertFalse(unmarkTaskFirstCommand.equals(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"        assertFalse(unmarkTaskFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"        assertFalse(unmarkTaskFirstCommand.equals(unmarkTaskSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":98}},{"path":"src/test/java/seedu/address/logic/parser/AddContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MODS_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_DESC_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_DESC_CS2030S;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CS2030S;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"public class AddContactCommandParserTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"songivan00"},"content":"    private AddContactCommandParser parser \u003d new AddContactCommandParser();","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"JonLamy"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"JonLamy"},"content":"                .withModules(VALID_MODULE_CS2030S).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"JonLamy"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"JonLamy"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"JonLamy"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MODULE_DESC_CS2030S, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":79,"author":{"gitId":"JonLamy"},"content":"                .withModules(VALID_MODULE_CS2030S).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"JonLamy"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S,","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"songivan00"},"content":"                new AddContactCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"JonLamy"},"content":"        Person expectedPersonMultipleModules \u003d new PersonBuilder(BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"JonLamy"},"content":"                .withModules(VALID_MODULE_CS2030S, VALID_MODULE_CS1101).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"JonLamy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"JonLamy"},"content":"                        + TAG_DESC_HUSBAND + MODULE_DESC_CS1101 + MODULE_DESC_CS2030S,","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"JonLamy"},"content":"                new AddContactCommand(expectedPersonMultipleModules));","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":95,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"JonLamy"},"content":"                        + MODULE_DESC_CS1101, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"songivan00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"JonLamy"},"content":"                        + MODULE_DESC_CS2030S, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"JonLamy"},"content":"                        + MODULE_DESC_CS2030S, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"JonLamy"},"content":"                        + MODULE_DESC_CS2030S, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"JonLamy"},"content":"                        + MODULE_DESC_CS2030S, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"JonLamy"},"content":"                        + VALID_MODULE_CS2030S, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"JonLamy"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"JonLamy"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"JonLamy"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"JonLamy"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"JonLamy"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND + MODULE_DESC_CS2030S, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"songivan00"},"content":"        // invalid mods","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"JonLamy"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + INVALID_MODS_DESC, Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"JonLamy"},"content":"                + MODULE_DESC_CS2030S, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"JonLamy"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MODULE_DESC_CS2030S,","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"songivan00"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"JonLamy":34,"songivan00":17,"-":108}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.TaskContainsKeywordsPredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.TaskContainsModulesPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"songivan00"},"content":"        AddContactCommand command \u003d (AddContactCommand) parser.parseCommand(PersonUtil.getAddContactCommand(person));","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"songivan00"},"content":"        assertEquals(new AddContactCommand(person), command);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"        DeleteContactCommand command \u003d (DeleteContactCommand) parser.parseCommand(","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"                DeleteContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"songivan00"},"content":"        assertEquals(new DeleteContactCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"        System.out.println(\"HELLO\");","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"        System.out.println(EditContactCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"songivan00"},"content":"        EditContactCommand command \u003d (EditContactCommand) parser.parseCommand(EditContactCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"songivan00"},"content":"        assertEquals(new EditContactCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand command \u003d (FindContactCommand) parser.parseCommand(","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"JonLamy"},"content":"                FindContactCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"JonLamy"},"content":"        assertEquals(new FindContactCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"danzzzerl"},"content":"    public void parseCommand_findTaskByName() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand command \u003d (FindTaskCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"danzzzerl"},"content":"                FindTaskCommand.COMMAND_WORD + \" n/ \"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"danzzzerl"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(new FindTaskCommand(new TaskContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"danzzzerl"},"content":"    public void parseCommand_findTaskByModule() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"danzzzerl"},"content":"        ArrayList\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"danzzzerl"},"content":"        modules.add(new Module(\"foo1231\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"danzzzerl"},"content":"        modules.add(new Module(\"bar1101s\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"danzzzerl"},"content":"        modules.add(new Module(\"baz2100\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand command \u003d (FindTaskCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"danzzzerl"},"content":"                FindTaskCommand.COMMAND_WORD + \" m/ \" + \"foo1231 bar1101s baz2100\");","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(new FindTaskCommand(new TaskContainsModulesPredicate(modules)), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"songivan00"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD) instanceof ListContactCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"songivan00"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD + \" 3\") instanceof ListContactCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JonLamy":6,"songivan00":14,"danzzzerl":21,"-":88}},{"path":"src/test/java/seedu/address/logic/parser/DeleteContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"songivan00"},"content":"public class DeleteContactCommandParserTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"songivan00"},"content":"    private DeleteContactCommandParser parser \u003d new DeleteContactCommandParser();","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"songivan00"},"content":"        assertParseSuccess(parser, \"1\", new DeleteContactCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"songivan00"},"content":"                DeleteContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"songivan00":6,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/EditContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"songivan00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MODS_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_DESC_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_DESC_CS2030S;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CS2030S;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"songivan00"},"content":"public class EditContactCommandParserTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"songivan00"},"content":"    private EditContactCommandParser parser \u003d new EditContactCommandParser();","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1\", EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"JonLamy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MODS_DESC, Module.MESSAGE_CONSTRAINTS); // invalid mods","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"songivan00"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"JonLamy"},"content":"                        + VALID_PHONE_AMY + VALID_MODULE_CS1101, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":120,"author":{"gitId":"JonLamy"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + MODULE_DESC_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"songivan00"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"JonLamy"},"content":"                .withModules(VALID_MODULE_CS1101).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"songivan00"},"content":"        // mods","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"JonLamy"},"content":"        userInput \u003d targetIndex.getOneBased() + MODULE_DESC_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"JonLamy"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withModules(VALID_MODULE_CS1101).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"JonLamy"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + MODULE_DESC_CS1101 + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"songivan00"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"JonLamy"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_CS2030S","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"songivan00"},"content":"                + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"songivan00"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"JonLamy"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"JonLamy"},"content":"                .withModules(VALID_MODULE_CS2030S, VALID_MODULE_CS1101).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"JonLamy"},"content":"                + PHONE_DESC_BOB + MODULE_DESC_CS2030S;","lastModifiedDate":"2022-10-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"JonLamy"},"content":"                .withAddress(VALID_ADDRESS_BOB).withModules(VALID_MODULE_CS2030S).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":214,"author":{"gitId":"songivan00"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"songivan00"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"JonLamy":17,"songivan00":26,"-":185}},{"path":"src/test/java/seedu/address/logic/parser/FindContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"public class FindContactCommandParserTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"    private FindContactCommandParser parser \u003d new FindContactCommandParser();","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"        FindContactCommand expectedFindContactCommand \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"                new FindContactCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindContactCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindContactCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"JonLamy":9,"-":26}},{"path":"src/test/java/seedu/address/logic/parser/FindTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.task.TaskContainsKeywordsPredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"public class FindTaskCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    private FindTaskCommandParser parser \u003d new FindTaskCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        FindTaskCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"                new FindTaskCommand(new TaskContainsKeywordsPredicate(Arrays.asList(\"Study\", \"Shower\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        assertParseSuccess(parser, \"Study Shower\", expectedFindCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        assertParseSuccess(parser, \" \\n Study \\n \\t Shower  \\t\", expectedFindCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"danzzzerl":35}},{"path":"src/test/java/seedu/address/logic/parser/MarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":" * outside of the MarkTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":" * same path through the MarkTaskCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"public class MarkTaskCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    private MarkTaskCommandParser parser \u003d new MarkTaskCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    public void parse_validArgs_returnsMarkTaskCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        assertParseSuccess(parser, \"1\", new MarkTaskCommand(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        assertParseFailure(","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"                parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":33}},{"path":"src/test/java/seedu/address/logic/parser/UnmarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":" * outside of the UnmarkTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":" * same path through the UnmarkTaskCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"public class UnmarkTaskCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    private UnmarkTaskCommandParser parser \u003d new UnmarkTaskCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    public void parse_validArgs_returnsUnmarkTaskCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        assertParseSuccess(parser, \"1\", new UnmarkTaskCommand(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        assertParseFailure(","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"                parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":33}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"songivan00"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"songivan00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"songivan00"},"content":"        TaskList differentTaskList \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"songivan00"},"content":"        modelManager \u003d new ModelManager(addressBook, differentTaskList, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"songivan00"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, differentTaskList, userPrefs);","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"songivan00"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, differentTaskList, userPrefs)));","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"songivan00"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentTaskList, userPrefs)));","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":136,"author":{"gitId":"songivan00"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentTaskList, differentUserPrefs)));","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"songivan00":11,"-":127}},{"path":"src/test/java/seedu/address/model/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.FINISH_TP_ISH;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"public class TaskListTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    private final TaskList addressBook \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(Collections.emptyList(), addressBook.getTaskList());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    public void resetData_withValidReadOnlyTaskList_replacesData() {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"        TaskList newData \u003d getTypicalTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(FINISH_TP, FINISH_TP_ISH);","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        TaskListStub newData \u003d new TaskListStub(newTasks);","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTask(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_taskNotInTaskList_returnsFalse() {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(addressBook.hasTask(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_taskInTaskList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"        addressBook.addTask(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(addressBook.hasTask(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    public void hasTask_taskWithSameIdentityFieldsInTaskList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"        addressBook.addTask(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(addressBook.hasTask(FINISH_TP_ISH));","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTaskList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"     * A stub ReadOnlyTaskList whose tasks list can violate interface constraints.","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"    private static class TaskListStub implements ReadOnlyTaskList {","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        TaskListStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"            return tasks;","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":96}},{"path":"src/test/java/seedu/address/model/person/ModuleTakenPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonLamy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"JonLamy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"JonLamy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"JonLamy"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"public class ModuleTakenPredicateTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"JonLamy"},"content":"    public void equals() {","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"JonLamy"},"content":"        List\u003cModule\u003e firstPredicateKeywordsList \u003d Collections.singletonList(new Module(\"CS1101S\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"JonLamy"},"content":"        List\u003cModule\u003e secondPredicateKeywordsList \u003d Arrays.asList(","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"JonLamy"},"content":"                new Module(\"CS1101S\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"JonLamy"},"content":"                new Module(\"MA1521\")","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"JonLamy"},"content":"        );","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"JonLamy"},"content":"        ModuleTakenPredicate firstPredicate \u003d new ModuleTakenPredicate(firstPredicateKeywordsList);","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"JonLamy"},"content":"        ModuleTakenPredicate secondPredicate \u003d new ModuleTakenPredicate(secondPredicateKeywordsList);","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"JonLamy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"JonLamy"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"JonLamy"},"content":"        ModuleTakenPredicate firstPredicateCopy \u003d new ModuleTakenPredicate(firstPredicateKeywordsList);","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"JonLamy"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"    public void test_personTakesModules_returnsTrue() {","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"JonLamy"},"content":"        // One keyword","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"        ModuleTakenPredicate predicate \u003d new ModuleTakenPredicate(","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"                Collections.singletonList(new Module(\"CS1101S\")));","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"JonLamy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModules(\"CS1101S\", \"CS1231S\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"JonLamy"},"content":"        predicate \u003d new ModuleTakenPredicate(Arrays.asList(","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"JonLamy"},"content":"                new Module(\"CS1101S\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"JonLamy"},"content":"                new Module(\"MA1521\")","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"JonLamy"},"content":"        ));","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"JonLamy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModules(\"CS1101S\", \"MA1521\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"JonLamy"},"content":"        predicate \u003d new ModuleTakenPredicate(Arrays.asList(","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"JonLamy"},"content":"                new Module(\"CS1101S\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"JonLamy"},"content":"                new Module(\"IS1103\")","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"        ));","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModules(\"CS1101S\", \"MA1521\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"JonLamy"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"JonLamy"},"content":"        predicate \u003d new ModuleTakenPredicate(Arrays.asList(","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"JonLamy"},"content":"                new Module(\"cs1101S\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"JonLamy"},"content":"                new Module(\"Is1103\")","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"JonLamy"},"content":"        ));","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"JonLamy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModules(\"CS1101S\", \"MA1521\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"JonLamy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"JonLamy"},"content":"    public void test_personNotTakingModules_returnsFalse() {","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"JonLamy"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"JonLamy"},"content":"        ModuleTakenPredicate predicate \u003d new ModuleTakenPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"JonLamy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withModules(\"CS1101S\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"JonLamy"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"JonLamy"},"content":"        predicate \u003d new ModuleTakenPredicate(Collections.singletonList(new Module(\"CS1101S\")));","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"JonLamy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withModules(\"FSC2101\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"JonLamy"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"JonLamy":85}},{"path":"src/test/java/seedu/address/model/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline((String) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline((LocalDateTime) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_invalidDeadline_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"        String invalidDeadline \u003d \"\";","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDeadline));","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    public void isValidDeadline() {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        // null deadline","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDeadline(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        // invalid deadlines","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Deadline.isValidDeadline(\"\")); // empty string","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Deadline.isValidDeadline(\"Geylang Rd\")); // not in correct format","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        // valid deadlines","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(Deadline.isValidDeadline(\"2006-01-15 15:04\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(Deadline.isValidDeadline(\"2050-02-28 05:04\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":38}},{"path":"src/test/java/seedu/address/model/task/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"public class ModuleTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_invalidModule_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"        String invalidModule \u003d \"\";","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(invalidModule));","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    public void isValidModule() {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        // null module","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e Module.isValidModule(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        // invalid modules","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Module.isValidModule(\"\")); // empty string","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Module.isValidModule(\" \")); // spaces only","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(Module.isValidModule(\"A B\")); // has spaces","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"JonLamy"},"content":"        assertFalse(Module.isValidModule(\"-\")); // one character","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"JonLamy"},"content":"        assertFalse(Module.isValidModule(\"USGCSDSA13495798735729475238945273858gf_ewt3wi4rw34\")); // long module","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        // valid modules","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(Module.isValidModule(\"CS2103T\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"JonLamy"},"content":"        assertTrue(Module.isValidModule(\"CFG1003\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    public void toString_roundtrip_works() {","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"        String sampleModuleCode \u003d \"CS2103T\";","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(new Module(sampleModuleCode).toString(), sampleModuleCode);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":42,"JonLamy":6}},{"path":"src/test/java/seedu/address/model/task/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"public class StatusTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    public void isValidStatus() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"        // null address","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        assertFalse(Status.isValidStatus(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"        assertFalse(Status.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        assertFalse(Status.isValidStatus(\"a\")); // invalid string","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        // valid addresses","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"        assertTrue(Status.isValidStatus(\"true\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        assertTrue(Status.isValidStatus(\"false\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    public void getIsComplete() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"        assertFalse(new Status(\"false\").getIsComplete());","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        assertTrue(new Status(\"true\").getIsComplete());","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"angkl0":42}},{"path":"src/test/java/seedu/address/model/task/TaskContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"public class TaskContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate firstPredicate \u003d new TaskContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate secondPredicate \u003d new TaskContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate firstPredicateCopy \u003d new TaskContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        // One keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate predicate \u003d new","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"                TaskContainsKeywordsPredicate(Collections.singletonList(\"Science\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"        predicate \u003d new TaskContainsKeywordsPredicate(Arrays.asList(\"Science\", \"Math\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"        predicate \u003d new TaskContainsKeywordsPredicate(Arrays.asList(\"Math\", \"English\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science English homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"        predicate \u003d new TaskContainsKeywordsPredicate(Arrays.asList(\"sCIeNce\", \"maTH\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsKeywordsPredicate predicate \u003d new TaskContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(predicate.test(new Task(new TaskName(\"Science homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"        predicate \u003d new TaskContainsKeywordsPredicate(Arrays.asList(\"English\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(predicate.test(new Task(new TaskName(\"Science homework\"), new Module(\"MA1521\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"danzzzerl":77}},{"path":"src/test/java/seedu/address/model/task/TaskContainsModulesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"public class TaskContainsModulesPredicateTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        List\u003cModule\u003e firstPredicateModuleList \u003d Collections.singletonList(new Module(\"MOD1\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        List\u003cModule\u003e secondPredicateModuleList \u003d Arrays.asList(new Module(\"MOD1\"), new Module(\"MOD2\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsModulesPredicate firstPredicate \u003d new TaskContainsModulesPredicate(firstPredicateModuleList);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsModulesPredicate secondPredicate \u003d new TaskContainsModulesPredicate(secondPredicateModuleList);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsModulesPredicate firstPredicateCopy \u003d new TaskContainsModulesPredicate(firstPredicateModuleList);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    public void test_moduleContainsModules_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        // One keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsModulesPredicate predicate \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"                new TaskContainsModulesPredicate(Collections.singletonList(new Module(\"Mod1\")));","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"Mod1\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"        predicate \u003d new TaskContainsModulesPredicate(Collections.singletonList(new Module(\"mOd2\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"        assertTrue(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"MOD2\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"    public void test_moduleDoesNotContainModules_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"        TaskContainsModulesPredicate predicate \u003d new TaskContainsModulesPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"Mod1\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"        predicate \u003d new TaskContainsModulesPredicate(Collections.singletonList(new Module(\"BZ1101\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"        assertFalse(predicate.test(new Task(new TaskName(\"Science Math homework\"), new Module(\"Mod1\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"                new Deadline(\"2022-05-05 15:04\"), new Status(false))));","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"danzzzerl":67}},{"path":"src/test/java/seedu/address/model/task/TaskNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"public class TaskNameTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskName(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskName(invalidName));","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"        // null name","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskName.isValidName(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"        // invalid name","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\"\")); // empty string","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\"\\t\")); // other whitespace only","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(TaskName.isValidName(\"peter\\n\")); // contains other whitespace","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"        // valid name","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(TaskName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":40}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"public class TaskTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleA \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2006-01-15 15:04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleB \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2006-01-15 15:04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleC \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2010-04-15 08:30\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleD \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Dugong\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2006-01-15 15:04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleE \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"a\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2006-01-15 15:04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    private final Task sampleF \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"A \"),","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"B\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2006-01-15 15:04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    public void isSameTask() {","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(sampleA.isSameTask(sampleA));","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(sampleA.isSameTask(sampleB));","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes except date -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(sampleA.isSameTask(sampleC));","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(sampleD));","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"        // different name casing -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(sampleE));","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"        // trailing space in name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(sampleA.isSameTask(sampleF));","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"    public void equals() {","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(sampleA, sampleA);","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, null);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"        // Same attributes except date -\u003e returns true","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleC);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleD);","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        // different name casing -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleE);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"        // trailing space in name -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"        assertNotEquals(sampleA, sampleF);","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"angkl0"},"content":"    public void setStatusWithBooleanParameter() {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"angkl0"},"content":"        sampleA.setStatus(true);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"angkl0"},"content":"        sampleB.setStatus(false);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"angkl0"},"content":"        assertTrue(sampleA.getStatus().getIsComplete());","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"angkl0"},"content":"        assertFalse(sampleB.getStatus().getIsComplete());","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"angkl0"},"content":"    public void setStatusWithValidStringParameter() {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"angkl0"},"content":"        sampleA.setStatus(\"true\");","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"angkl0"},"content":"        sampleB.setStatus(\"false\");","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"angkl0"},"content":"        assertTrue(sampleA.getStatus().getIsComplete());","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"angkl0"},"content":"        assertFalse(sampleB.getStatus().getIsComplete());","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"angkl0"},"content":"    public void setStatusWithInvalidStringParameter_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e sampleA.setStatus(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e sampleA.setStatus(\"a\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":35,"parnikkapore":76,"JonLamy":2}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.FINISH_TP_ISH;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import static seedu.address.testutil.TypicalTasks.LAB_2;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"parnikkapore"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"parnikkapore"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"        assertFalse(uniqueTaskList.contains(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(uniqueTaskList.contains(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"    public void contains_weaklyEqualTaskInList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        assertTrue(uniqueTaskList.contains(FINISH_TP_ISH));","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(FINISH_TP, null));","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(FINISH_TP, FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTask(FINISH_TP, FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTask(FINISH_TP, FINISH_TP_ISH);","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(FINISH_TP_ISH);","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTask(FINISH_TP, LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"parnikkapore"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(FINISH_TP, LAB_2));","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"parnikkapore"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"parnikkapore"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(FINISH_TP));","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"parnikkapore"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.remove(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.add(FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"parnikkapore"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"parnikkapore"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"parnikkapore"},"content":"        expectedUniqueTaskList.add(LAB_2);","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"parnikkapore"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"parnikkapore"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"parnikkapore"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(FINISH_TP, FINISH_TP);","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"parnikkapore"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"parnikkapore"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"parnikkapore"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"parnikkapore"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"parnikkapore":164}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"JonLamy"},"content":"    private static final String INVALID_MODULES \u003d \" \";","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"JonLamy"},"content":"    private static final List\u003cJsonAdaptedModule\u003e VALID_MODULES \u003d BENSON.getModules().stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"JonLamy"},"content":"            .map(JsonAdaptedModule::new)","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"JonLamy"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_MODULES);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"songivan00"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"JonLamy"},"content":"                VALID_MODULES);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_MODULES);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"songivan00"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"JonLamy"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_MODULES);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"JonLamy"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_MODULES);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"songivan00"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"JonLamy"},"content":"                VALID_TAGS, VALID_MODULES);","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"JonLamy"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_MODULES);","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"songivan00"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"JonLamy"},"content":"                VALID_MODULES);","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"JonLamy"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_MODULES);","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"songivan00"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"songivan00"},"content":"    public void toModelType_invalidMods_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"JonLamy"},"content":"        List\u003cJsonAdaptedModule\u003e invalidModules \u003d new ArrayList\u003c\u003e(VALID_MODULES);","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"JonLamy"},"content":"        invalidModules.add(new JsonAdaptedModule(INVALID_MODULES));","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"songivan00"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"JonLamy"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, invalidModules);","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"JonLamy"},"content":"        String expectedMessage \u003d Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"songivan00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JonLamy":18,"songivan00":10,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"class JsonAdaptedTaskTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"    private static final String INVALID_TASKNAME \u003d \" \";","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"    private static final String INVALID_MODULE \u003d \" \";","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"    private static final String INVALID_DEADLINE \u003d \"123456\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"    private static final String INVALID_STATUS \u003d \"a\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"    private static final String VALID_TASKNAME \u003d FINISH_TP.getName().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    private static final String VALID_MODULE \u003d FINISH_TP.getModule().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"    private static final String VALID_DEADLINE \u003d FINISH_TP.getDeadline().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    private static final String VALID_STATUS \u003d FINISH_TP.getStatus().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(FINISH_TP);","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        assertEquals(FINISH_TP, task.toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"    public void toModelType_invalidTaskName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(INVALID_TASKNAME, VALID_MODULE, VALID_DEADLINE, VALID_STATUS);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d TaskName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    public void toModelType_invalidModule_throwsIllegalValueException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASKNAME, INVALID_MODULE, VALID_DEADLINE, VALID_STATUS);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASKNAME, VALID_MODULE, INVALID_DEADLINE, VALID_STATUS);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        String expectedMessage \u003d Deadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":50,"JonLamy":1}},{"path":"src/test/java/seedu/address/storage/JsonTaskListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"angkl0"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"angkl0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.TypicalTasks.FINISH_TP;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.TypicalTasks.LAB_2;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"angkl0"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"angkl0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"angkl0"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"angkl0"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"angkl0"},"content":"public class JsonTaskListStorageTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskListStorageTest\");","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"angkl0"},"content":"    @TempDir","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"angkl0"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"angkl0"},"content":"    public void readTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaskList(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"angkl0"},"content":"    private java.util.Optional\u003cReadOnlyTaskList\u003e readTaskList(String filePath) throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"angkl0"},"content":"        return new JsonTaskListStorage(Paths.get(filePath)).readTaskList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"angkl0"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"angkl0"},"content":"                : null;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"angkl0"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"angkl0"},"content":"        assertFalse(readTaskList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"angkl0"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"angkl0"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTaskList.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"angkl0"},"content":"        TaskList original \u003d getTypicalTaskList();","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"angkl0"},"content":"        JsonTaskListStorage jsonTaskListStorage \u003d new JsonTaskListStorage(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"angkl0"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"angkl0"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"angkl0"},"content":"        ReadOnlyTaskList readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"angkl0"},"content":"        assertEquals(original, new TaskList(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"angkl0"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"angkl0"},"content":"        original.removeTask(FINISH_TP);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"angkl0"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"angkl0"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"angkl0"},"content":"        assertEquals(original, new TaskList(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"angkl0"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"angkl0"},"content":"        original.removeTask(LAB_2);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"angkl0"},"content":"        jsonTaskListStorage.saveTaskList(original); // file path not specified","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"angkl0"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList().get(); // file path not specified","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"angkl0"},"content":"        assertEquals(original, new TaskList(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList_nullTaskList_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"angkl0"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"angkl0"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"angkl0"},"content":"     * Saves {@code taskList} at the specified {@code filePath}.","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"angkl0"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"angkl0"},"content":"    private void saveTaskList(ReadOnlyTaskList taskList, String filePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"angkl0"},"content":"        try {","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"angkl0"},"content":"            new JsonTaskListStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"angkl0"},"content":"                    .saveTaskList(taskList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"angkl0"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"angkl0"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"angkl0"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"angkl0"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"angkl0"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"angkl0"},"content":"    public void saveTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"angkl0"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(new TaskList(), null));","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"angkl0"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"angkl0"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"angkl0":92}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"angkl0"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(getTempFilePath(\"tl\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, taskListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"angkl0":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"        descriptor.setMods(person.getModules());","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"songivan00"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"songivan00"},"content":"     * Sets the {@code Mods} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"songivan00"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"JonLamy"},"content":"    public EditPersonDescriptorBuilder withModules(String... mods) {","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"JonLamy"},"content":"        Set\u003cModule\u003e moduleSet \u003d Stream.of(mods).map(Module::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"JonLamy"},"content":"        descriptor.setMods(moduleSet);","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"songivan00"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"songivan00"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"songivan00"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"JonLamy":5,"songivan00":7,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"JonLamy"},"content":"    private Set\u003cModule\u003e modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"        modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"JonLamy"},"content":"        modules \u003d new HashSet\u003c\u003e(personToCopy.getModules());","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"JonLamy"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"JonLamy"},"content":"     * Parses the {@code NusModules} into a {@code Set\u003cNusModules\u003e}","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"JonLamy"},"content":"     * and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"JonLamy"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"JonLamy"},"content":"    public PersonBuilder withModules(String... moduleNames) {","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"JonLamy"},"content":"        this.modules \u003d SampleDataUtil.getModuleSet(moduleNames);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"JonLamy"},"content":"        return this;","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"JonLamy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"JonLamy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":107,"author":{"gitId":"JonLamy"},"content":"        return new Person(name, phone, email, address, tags, modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"JonLamy":15,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"songivan00"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"songivan00"},"content":"    public static String getAddContactCommand(Person person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"songivan00"},"content":"        return AddContactCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"JonLamy"},"content":"        person.getModules().stream().forEach(","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"JonLamy"},"content":"                s -\u003e sb.append(PREFIX_MODULE + s.moduleName + \" \")","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"JonLamy"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"JonLamy"},"content":"        if (descriptor.getMods().isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"JonLamy"},"content":"            Set\u003cModule\u003e modules \u003d descriptor.getMods().get();","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"JonLamy"},"content":"            if (modules.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"JonLamy"},"content":"                sb.append(PREFIX_MODULE);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"JonLamy"},"content":"            } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"JonLamy"},"content":"                modules.forEach(s -\u003e sb.append(PREFIX_MODULE).append(s.moduleName).append(\" \"));","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"JonLamy"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"JonLamy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"JonLamy":14,"songivan00":4,"-":57}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CS1101;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CS2030S;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"JonLamy"},"content":"            .withTags(\"friends\").withModules(\"CS1101\", \"CS1231S\", \"ES2660\", \"MA1521\", \"IS1103\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"JonLamy"},"content":"            .build();","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"JonLamy"},"content":"            .withModules(\"CS1101\", \"CS1231S\", \"ES2660\", \"MA1521\", \"IS1103\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"JonLamy"},"content":"            .withModules(\"CS2030S\", \"CS2040S\", \"ES2660\", \"MA2001\", \"IS1103\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"JonLamy"},"content":"            .withModules(\"CS2001\", \"CS2101\", \"CS2103T\", \"ST2334\", \"IS1103\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"JonLamy"},"content":"            .withModules(\"CS2030S\", \"CS1231S\", \"MA2001\", \"MA1521\", \"IS1103\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"JonLamy"},"content":"            .withModules(\"CS1101\", \"CS1231S\", \"GEN2001\", \"MA1521\", \"IS1103\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"songivan00"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"JonLamy"},"content":"            .withModules(\"CS1101\", \"CS1231S\", \"ES2660\", \"MA1521\", \"GC1049\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"JonLamy"},"content":"    ////////////////////////////////////////////////","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"songivan00"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"JonLamy"},"content":"            .withModules(VALID_MODULE_CS1101).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"JonLamy"},"content":"            .withModules(VALID_MODULE_CS2030S).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"JonLamy":13,"songivan00":8,"-":66}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"parnikkapore"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"parnikkapore"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"parnikkapore"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"parnikkapore"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"JonLamy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"angkl0"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"parnikkapore"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"parnikkapore"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"parnikkapore"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"parnikkapore"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"parnikkapore"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"parnikkapore"},"content":"    public static final Task FINISH_TP \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Finish TP\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"CS2103T\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2022-11-15 00:00\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"parnikkapore"},"content":"    /** Weakly but not strongly equivalent to FINISH_TP. */","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"parnikkapore"},"content":"    public static final Task FINISH_TP_ISH \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Finish TP\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"CS2103T\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2022-12-12 12:00\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"parnikkapore"},"content":"    public static final Task LAB_2 \u003d new Task(","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"parnikkapore"},"content":"            new TaskName(\"Lab 2\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"parnikkapore"},"content":"            new Module(\"CS2030S\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"angkl0"},"content":"            new Deadline(\"2022-02-02 23:59\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"angkl0"},"content":"            new Status(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"parnikkapore"},"content":"    );","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"parnikkapore"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"parnikkapore"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"parnikkapore"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FINISH_TP, LAB_2));","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"parnikkapore"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"parnikkapore"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"parnikkapore"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"parnikkapore"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"parnikkapore"},"content":"    public static TaskList getTypicalTaskList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"parnikkapore"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"parnikkapore"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"parnikkapore"},"content":"            tl.addTask(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"parnikkapore"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"parnikkapore"},"content":"        return tl;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"parnikkapore"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"parnikkapore"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"angkl0":7,"parnikkapore":48,"JonLamy":1}}]
