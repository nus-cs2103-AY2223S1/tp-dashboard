[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"# NutriGoals","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T17-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T17-2/tp/actions)","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T17-2/tp/branch/master/graph/badge.svg?token\u003d993105K3SO)](https://codecov.io/gh/AY2223S1-CS2103T-T17-2/tp)","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"* **NutriGoals** is a desktop application catered for fitness enthusiasts to manage their diet.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"* Usages:","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"    * Keep track of meals consumed","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"    * Calculate calorie consumption","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"* For the detailed documentation of this project, see the [NutriGoals Product Website](https://ay2223s1-cs2103t-t17-2.github.io/tp/).","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"ruiqi7":9,"xav168":1,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"mainClassName \u003d \u0027seedu.nutrigoals.Main\u0027","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"    archiveFileName \u003d \u0027nutrigoals.jar\u0027","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"ruiqi7"},"content":"run {","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"ruiqi7"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ruiqi7":2,"xav168":2,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"AkkFiros"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)!","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"AkkFiros"},"content":"We are developing NutriGoals - a free-to-use CLI nutritional tracker for beginners who are getting started on","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"AkkFiros"},"content":"their fitness journey!","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"AkkFiros"},"content":"### Xavier Ong","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"AkkFiros"},"content":"\u003cimg src\u003d\"images/xav168.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"AkkFiros"},"content":"[[GitHub](https://github.com/xav168)]","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"AkkFiros"},"content":"* Role: Team Lead","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"AkkFiros"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"AkkFiros"},"content":"### Nicole Lim","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"AkkFiros"},"content":"\u003cimg src\u003d\"images/nicolelim02.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"AkkFiros"},"content":"[[GitHub](http://github.com/nicolelim02)]","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"AkkFiros"},"content":"* Role: Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"AkkFiros"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"AkkFiros"},"content":"### Tin Ruiqi","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"AkkFiros"},"content":"\u003cimg src\u003d\"images/ruiqi7.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"AkkFiros"},"content":"[[GitHub](http://github.com/ruiqi7)]","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"AkkFiros"},"content":"* Responsibilities: Deliverables and deadline","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"AkkFiros"},"content":"### Tan Ping Zhi","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"AkkFiros"},"content":"\u003cimg src\u003d\"images/tanpingzhi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"AkkFiros"},"content":"[[GitHub](http://github.com/jtanpingzhi)]","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"AkkFiros"},"content":"* Responsibilities: Integration","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"AkkFiros"},"content":"### Aung Khant Kyaw","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"AkkFiros"},"content":"\u003cimg src\u003d\"images/akkfiros.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"AkkFiros"},"content":"[[GitHub](http://github.com/akkfiros)]","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"AkkFiros"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"AkkFiros":28,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"  original source as well}","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"TanPingZhi"},"content":"the [diagrams](https://github.com/AY2223S1-CS2103T-T17-2/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"TanPingZhi"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"TanPingZhi"},"content":"diagrams.","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"TanPingZhi"},"content":"**`Main`** has two classes","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"TanPingZhi"},"content":"called [`Main`](https://github.com/AY2223S1-CS2103T-T17-2/tp/blob/master/src/main/java/seedu/nutrigoals/Main.java)","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"TanPingZhi"},"content":"and [`MainApp`](https://github.com/AY2223S1-CS2103T-T17-2/tp/blob/master/src/main/java/seedu/nutrigoals/MainApp.java). It","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"TanPingZhi"},"content":"is responsible for,","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"TanPingZhi"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"TanPingZhi"},"content":"the command `delete 1`.","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"TanPingZhi"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"TanPingZhi"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"TanPingZhi"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"TanPingZhi"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"TanPingZhi"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"TanPingZhi"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"TanPingZhi"},"content":"The **API** of this component is specified","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"TanPingZhi"},"content":"in [`Ui.java`](https://github.com/AY2223S1-CS2103T-T17-2/tp/blob/master/src/main/java/seedu/nutrigoals/ui/Ui.java)","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"TanPingZhi"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `FoodListPanel`","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"TanPingZhi"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"TanPingZhi"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"TanPingZhi"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"TanPingZhi"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"TanPingZhi"},"content":"the [`MainWindow`](https://github.com/AY2223S1-CS2103T-T17-2/tp/blob/master/src/main/java/seedu/nutrigoals/ui/MainWindow.java)","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"TanPingZhi"},"content":"is specified","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"TanPingZhi"},"content":"in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-T17-2/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"nicolelim02"},"content":"* depends on some classes in the `Model` component, as it displays `Food` object residing in the `Model`.","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"nicolelim02"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-T17-2/tp/blob/master/src/main/java/seedu/nutrigoals/logic/Logic.java)","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"nicolelim02"},"content":"1. When `Logic` is called upon to execute a command, it uses the `NutriGoalsParser` class to parse the user command.","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"TanPingZhi"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"TanPingZhi"},"content":"   executed by the `LogicManager`.","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"nicolelim02"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a food).","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"nicolelim02"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"TanPingZhi"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"TanPingZhi"},"content":"call.","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"TanPingZhi"},"content":"* When called upon to parse a user command, the `NutriGoalsParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"TanPingZhi"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"TanPingZhi"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `NutriGoalsParser` returns back as","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"TanPingZhi"},"content":"  a `Command` object.","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"TanPingZhi"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"TanPingZhi"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":146,"author":{"gitId":"TanPingZhi"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-T17-2/tp/blob/master/src/main/java/seedu/nutrigoals/model/Model.java)","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"TanPingZhi"},"content":"* stores the nutrigoals data i.e., all `Food` objects (which are contained in a `FoodList` object).","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"TanPingZhi"},"content":"* stores the currently \u0027selected\u0027 `Food` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cFood\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-21"},{"lineNumber":155,"author":{"gitId":"TanPingZhi"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2022-10-21"},{"lineNumber":156,"author":{"gitId":"TanPingZhi"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2022-10-21"},{"lineNumber":157,"author":{"gitId":"TanPingZhi"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"TanPingZhi"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2022-10-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"nicolelim02"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `NutriGoals`, which `Food` references. This allows `NutriGoals` to only require one `Tag` object per unique tag, instead of each `Food` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"TanPingZhi"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-T17-2/tp/blob/master/src/main/java/seedu/nutrigoals/storage/Storage.java)","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"TanPingZhi"},"content":"* can save both nutrigoals data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"TanPingZhi"},"content":"* inherits from both `NutriGoalsStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"TanPingZhi"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"TanPingZhi"},"content":"  that belong to the `Model`)","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"nicolelim02"},"content":"Classes used by multiple components are in the `seedu.nutrigoals.commons` package.","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"TanPingZhi"},"content":"### Set Daily Calorie Target feature","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"TanPingZhi"},"content":"#### Implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"TanPingZhi"},"content":"The set target mechanism is facilitated by `TargetCommand`, which extends `Command`. It overrides the following","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"TanPingZhi"},"content":"operation:","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"TanPingZhi"},"content":"* `TargetCommand#excecute()`: Sets the calorie target for the day","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"TanPingZhi"},"content":"Given below is an example usage scenario and how set calorie target mechanism behaves at each step.","lastModifiedDate":"2022-10-21"},{"lineNumber":197,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":198,"author":{"gitId":"TanPingZhi"},"content":"Step 1. The user launches the application today.","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"TanPingZhi"},"content":"Step 2. The user executes `target 2103`, which calls `LogicManager#execute()`. ","lastModifiedDate":"2022-10-21"},{"lineNumber":201,"author":{"gitId":"TanPingZhi"},"content":"`NutriGoals#parseCommand()` is called subsequently, which then creates a `TargetCommandParser` object.","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"TanPingZhi"},"content":"`TargetCommandParser#parser()` is then called to make sense of the arguments supplied by the user.","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"TanPingZhi"},"content":"Step 3. The `TargetCommand` is created, and then executed by `TargetCommand#execute()`.","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"TanPingZhi"},"content":"Step 4. The `TargetCommand#execute()` calls the following methods from `Model`:","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"TanPingZhi"},"content":"* `setCalorieTarget(calorieTarget)`","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"TanPingZhi"},"content":"* `getCalorieTarget()`","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"TanPingZhi"},"content":"Step 5. `TargetCommand#execute()` returns a `CommandResult` with the following result displayed:","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"TanPingZhi"},"content":"Your calorie target set: 2103 calories","lastModifiedDate":"2022-10-21"},{"lineNumber":213,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":214,"author":{"gitId":"TanPingZhi"},"content":"The following diagram illustrates how the set calorie target operation works:","lastModifiedDate":"2022-10-21"},{"lineNumber":215,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":216,"author":{"gitId":"TanPingZhi"},"content":"![TargetSequenceDiagram](./images/TargetSequenceDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":217,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":218,"author":{"gitId":"nicolelim02"},"content":"### Edit feature","lastModifiedDate":"2022-10-19"},{"lineNumber":219,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":220,"author":{"gitId":"nicolelim02"},"content":"#### Implementation","lastModifiedDate":"2022-10-19"},{"lineNumber":221,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":222,"author":{"gitId":"nicolelim02"},"content":"The edit mechanism is facilitated by `EditCommand`, which extends `Command`. It overrides the following operation:","lastModifiedDate":"2022-10-19"},{"lineNumber":223,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":224,"author":{"gitId":"nicolelim02"},"content":"* `EditCommand#execute()`: Edits the food name, meal type or calories associated with the food at the specified index.","lastModifiedDate":"2022-10-19"},{"lineNumber":225,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":226,"author":{"gitId":"nicolelim02"},"content":"Given below is an example usage scenario and how the edit mechanism behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":227,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":228,"author":{"gitId":"nicolelim02"},"content":"Step 1. The user launches the application on 19 October 2022. Suppose the foods added for the day are:","lastModifiedDate":"2022-10-20"},{"lineNumber":229,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":230,"author":{"gitId":"nicolelim02"},"content":"1. bread: 100 calories, breakfast","lastModifiedDate":"2022-10-19"},{"lineNumber":231,"author":{"gitId":"nicolelim02"},"content":"2. milk tea: 300 calories, lunch","lastModifiedDate":"2022-10-19"},{"lineNumber":232,"author":{"gitId":"nicolelim02"},"content":"3. sushi: 500 calories, lunch","lastModifiedDate":"2022-10-19"},{"lineNumber":233,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":234,"author":{"gitId":"nicolelim02"},"content":"Step 2. The user executes `edit 2 n/honey milk tea c/310`, which calls `LogicManager#execute()`.","lastModifiedDate":"2022-10-19"},{"lineNumber":235,"author":{"gitId":"nicolelim02"},"content":"`NutriGoals#parseCommand()` is called subsequently, which then creates an `EditCommandParser` object.","lastModifiedDate":"2022-10-19"},{"lineNumber":236,"author":{"gitId":"nicolelim02"},"content":"`EditCommandParser#parse()` is then called to make sense of the arguments supplied by the user.","lastModifiedDate":"2022-10-19"},{"lineNumber":237,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":238,"author":{"gitId":"nicolelim02"},"content":"Step 3. The `EditCommand` is created, and then executed by `EditCommand#execute()`.","lastModifiedDate":"2022-10-19"},{"lineNumber":239,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":240,"author":{"gitId":"TanPingZhi"},"content":"Step 4. `EditCommand#execute()` calls the following methods from `Model`:","lastModifiedDate":"2022-10-21"},{"lineNumber":241,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":242,"author":{"gitId":"nicolelim02"},"content":"* `Model#setFood(foodToEdit, editedFood)` replaces `foodToEdit` to `editedFood`.","lastModifiedDate":"2022-10-20"},{"lineNumber":243,"author":{"gitId":"nicolelim02"},"content":"* `Model#updateFilteredFoodList(predicate)` filters the food list based on the given predicate","lastModifiedDate":"2022-10-20"},{"lineNumber":244,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":245,"author":{"gitId":"TanPingZhi"},"content":"Step 5. `EditCommand#execute()` returns a `CommandResult` with the following result displayed:","lastModifiedDate":"2022-10-21"},{"lineNumber":246,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":247,"author":{"gitId":"nicolelim02"},"content":"Edited Food: honey milk tea; Calories: 310 calories; Tag[lunch]","lastModifiedDate":"2022-10-19"},{"lineNumber":248,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":249,"author":{"gitId":"nicolelim02"},"content":"The following diagram illustrates how the edit operation works:","lastModifiedDate":"2022-10-19"},{"lineNumber":250,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":251,"author":{"gitId":"nicolelim02"},"content":"![EditSequenceDiagram](./images/EditSequenceDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":252,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":253,"author":{"gitId":"nicolelim02"},"content":"### Profile feature","lastModifiedDate":"2022-10-20"},{"lineNumber":254,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":255,"author":{"gitId":"nicolelim02"},"content":"#### Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":256,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":257,"author":{"gitId":"nicolelim02"},"content":"The profile mechanism is facilitated by `ProfileCommand`, which extends `Command`. It overrides the","lastModifiedDate":"2022-10-20"},{"lineNumber":258,"author":{"gitId":"nicolelim02"},"content":"following operation:","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":260,"author":{"gitId":"nicolelim02"},"content":"* `ProfileCommand#execute()`: Retrieves and displays the user\u0027s information.","lastModifiedDate":"2022-10-20"},{"lineNumber":261,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":262,"author":{"gitId":"nicolelim02"},"content":"Given below is an example usage scenario and how the profile mechanism behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":263,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":264,"author":{"gitId":"nicolelim02"},"content":"Step 1. The user launches the application on 19 October 2022.","lastModifiedDate":"2022-10-20"},{"lineNumber":265,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":266,"author":{"gitId":"nicolelim02"},"content":"Step 2. The user executes `profile`, which calls `LogicManager#execute()`. `NutriGoals#parseCommand()` is called","lastModifiedDate":"2022-10-20"},{"lineNumber":267,"author":{"gitId":"nicolelim02"},"content":"subsequently, which then creates an `ProfileCommand` object.","lastModifiedDate":"2022-10-20"},{"lineNumber":268,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":269,"author":{"gitId":"nicolelim02"},"content":"Step 3. The `ProfileCommand` created is executed by `ProfileCommand#execute()`.","lastModifiedDate":"2022-10-20"},{"lineNumber":270,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":271,"author":{"gitId":"nicolelim02"},"content":"Step 4. `ProfileCommand#execute()` calls the following methods from `Model`:","lastModifiedDate":"2022-10-20"},{"lineNumber":272,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":273,"author":{"gitId":"nicolelim02"},"content":"* `Model#isUserCreated()`","lastModifiedDate":"2022-10-20"},{"lineNumber":274,"author":{"gitId":"nicolelim02"},"content":"* `Model#getUserDetails()`","lastModifiedDate":"2022-10-20"},{"lineNumber":275,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":276,"author":{"gitId":"nicolelim02"},"content":"Step 5. `ProfileCommand#execute()` returns a `CommandResult` which displays the user\u0027s information.","lastModifiedDate":"2022-10-20"},{"lineNumber":277,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":278,"author":{"gitId":"nicolelim02"},"content":"The following activity diagram outlines the process when the user executes the `ProfileCommand`.","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":280,"author":{"gitId":"nicolelim02"},"content":"![ProfileCommandActivityDiagram](./images/ProfileCommandActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"ruiqi7"},"content":"### List feature","lastModifiedDate":"2022-10-23"},{"lineNumber":283,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":284,"author":{"gitId":"ruiqi7"},"content":"#### Implementation","lastModifiedDate":"2022-10-23"},{"lineNumber":285,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":286,"author":{"gitId":"ruiqi7"},"content":"The list mechanism is facilitated by `ListCommand`, which extends `Command`. It overrides the following operation:","lastModifiedDate":"2022-10-23"},{"lineNumber":287,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":288,"author":{"gitId":"ruiqi7"},"content":"* `ListCommand#execute()`: Shows a list of all food items and their respective calories for the specified day (if any).","lastModifiedDate":"2022-10-23"},{"lineNumber":289,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":290,"author":{"gitId":"ruiqi7"},"content":"Given below is an example usage scenario and how the list mechanism behaves at each step.","lastModifiedDate":"2022-10-23"},{"lineNumber":291,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":292,"author":{"gitId":"ruiqi7"},"content":"Step 1. The user launches the application on 19 October 2022. `NutriGoals` initially displays all foods added on the ","lastModifiedDate":"2022-10-23"},{"lineNumber":293,"author":{"gitId":"ruiqi7"},"content":"current day, 19 October 2022.","lastModifiedDate":"2022-10-23"},{"lineNumber":294,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":295,"author":{"gitId":"ruiqi7"},"content":"Step 2. The user executes `list 2022-07-29` command, which calls `LogicManager#execute()`.","lastModifiedDate":"2022-10-23"},{"lineNumber":296,"author":{"gitId":"ruiqi7"},"content":"`NutriGoals#parseCommand()` is called subsequently, which then creates a `ListCommandParser` object.","lastModifiedDate":"2022-10-23"},{"lineNumber":297,"author":{"gitId":"ruiqi7"},"content":"`ListCommandParser#parse()` is then called to make sense of the date argument supplied by the user.","lastModifiedDate":"2022-10-23"},{"lineNumber":298,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":299,"author":{"gitId":"ruiqi7"},"content":"Step 3. A `ListCommand` object is created with an `IsFoodAddedOnThisDatePredicate` object. The predicate is initialised with 29 July 2022 as the date.","lastModifiedDate":"2022-10-23"},{"lineNumber":300,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":301,"author":{"gitId":"ruiqi7"},"content":"Step 4. `ListCommand` is then executed by `ListCommand#execute()`, which calls the following methods from `Model`:","lastModifiedDate":"2022-10-23"},{"lineNumber":302,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":303,"author":{"gitId":"ruiqi7"},"content":"* `Model#updateFilteredFoodList(IsFoodAddedOnThisDatePredicate)` filters the food list for foods added on 29 July 2022","lastModifiedDate":"2022-10-23"},{"lineNumber":304,"author":{"gitId":"ruiqi7"},"content":"* `Model#isFilteredFoodListEmpty()`","lastModifiedDate":"2022-10-23"},{"lineNumber":305,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":306,"author":{"gitId":"ruiqi7"},"content":"Step 5. The filtered food list is shown to the user and `ListCommand#execute()` returns a `CommandResult` with a message ","lastModifiedDate":"2022-10-23"},{"lineNumber":307,"author":{"gitId":"ruiqi7"},"content":"indicating the successful execution of the `list` command. ","lastModifiedDate":"2022-10-23"},{"lineNumber":308,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":309,"author":{"gitId":"ruiqi7"},"content":"The following activity diagram summarizes what happens when a user executes the `list` command:","lastModifiedDate":"2022-10-23"},{"lineNumber":310,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":311,"author":{"gitId":"ruiqi7"},"content":"![ListActivityDiagram](images/ListActivityDiagram.png)","lastModifiedDate":"2022-10-23"},{"lineNumber":312,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":313,"author":{"gitId":"ruiqi7"},"content":"### Review feature","lastModifiedDate":"2022-10-19"},{"lineNumber":314,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":315,"author":{"gitId":"ruiqi7"},"content":"#### Implementation","lastModifiedDate":"2022-10-19"},{"lineNumber":316,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":317,"author":{"gitId":"ruiqi7"},"content":"The review mechanism is facilitated by `ReviewCommand`, which extends `Command`. It overrides the following operation:","lastModifiedDate":"2022-10-19"},{"lineNumber":318,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":319,"author":{"gitId":"TanPingZhi"},"content":"* `ReviewCommand#execute()`: Calculates the total calories, the calorie target and the deficient or excess amount of","lastModifiedDate":"2022-10-21"},{"lineNumber":320,"author":{"gitId":"TanPingZhi"},"content":"  calories for the day.","lastModifiedDate":"2022-10-21"},{"lineNumber":321,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":322,"author":{"gitId":"ruiqi7"},"content":"Given below is an example usage scenario and how the review mechanism behaves at each step.","lastModifiedDate":"2022-10-19"},{"lineNumber":323,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":324,"author":{"gitId":"ruiqi7"},"content":"Step 1. The user launches the application on 19 October 2022. Suppose the foods added for the day are:","lastModifiedDate":"2022-10-23"},{"lineNumber":325,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":326,"author":{"gitId":"ruiqi7"},"content":"1. bubble tea: 232 kcal","lastModifiedDate":"2022-10-19"},{"lineNumber":327,"author":{"gitId":"ruiqi7"},"content":"2. chicken rice: 702 kcal","lastModifiedDate":"2022-10-19"},{"lineNumber":328,"author":{"gitId":"ruiqi7"},"content":"3. wanton noodles: 409 kcal","lastModifiedDate":"2022-10-19"},{"lineNumber":329,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":330,"author":{"gitId":"ruiqi7"},"content":"Step 2. The user executes `review` command, which creates a `ReviewCommand` object. ","lastModifiedDate":"2022-10-23"},{"lineNumber":331,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":332,"author":{"gitId":"ruiqi7"},"content":"Step 3. The `ReviewCommand` created is executed by `ReviewCommand#execute()`. ","lastModifiedDate":"2022-10-23"},{"lineNumber":333,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":334,"author":{"gitId":"ruiqi7"},"content":"Step 4. `ReviewCommand#execute()` creates an `IsFoodAddedOnThisDatePredicate` object with 19 October 2022 as the date.","lastModifiedDate":"2022-10-23"},{"lineNumber":335,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":336,"author":{"gitId":"ruiqi7"},"content":"Step 5. `ReviewCommand#execute()` then calls the following methods from `Model`:","lastModifiedDate":"2022-10-23"},{"lineNumber":337,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":338,"author":{"gitId":"ruiqi7"},"content":"* `Model#updateFilteredFoodList(IsFoodAddedOnThisDatePredicate)` filters the food list for foods added on 19 October 2022","lastModifiedDate":"2022-10-23"},{"lineNumber":339,"author":{"gitId":"ruiqi7"},"content":"* `Model#getTotalCalorie()`","lastModifiedDate":"2022-10-23"},{"lineNumber":340,"author":{"gitId":"ruiqi7"},"content":"* `Model#getCalorieTarget()`","lastModifiedDate":"2022-10-23"},{"lineNumber":341,"author":{"gitId":"ruiqi7"},"content":"* `Model#getCalorieDifference()`","lastModifiedDate":"2022-10-23"},{"lineNumber":342,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":343,"author":{"gitId":"ruiqi7"},"content":"Step 6. `ReviewCommand#execute()` returns a `CommandResult` with the following information to be displayed to the user:","lastModifiedDate":"2022-10-23"},{"lineNumber":344,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":345,"author":{"gitId":"ruiqi7"},"content":"* total calories: 1343 kcal","lastModifiedDate":"2022-10-19"},{"lineNumber":346,"author":{"gitId":"ruiqi7"},"content":"* calorie target: 2000 kcal","lastModifiedDate":"2022-10-19"},{"lineNumber":347,"author":{"gitId":"ruiqi7"},"content":"* deficient amount of calories: 657 kcal","lastModifiedDate":"2022-10-19"},{"lineNumber":348,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":349,"author":{"gitId":"ruiqi7"},"content":"The following sequence diagram illustrates how the review operation works:","lastModifiedDate":"2022-10-19"},{"lineNumber":350,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":351,"author":{"gitId":"ruiqi7"},"content":"![ReviewSequenceDiagram](images/ReviewSequenceDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":352,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":353,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"TanPingZhi"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2022-10-21"},{"lineNumber":358,"author":{"gitId":"TanPingZhi"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2022-10-21"},{"lineNumber":359,"author":{"gitId":"TanPingZhi"},"content":"following operations:","lastModifiedDate":"2022-10-21"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"TanPingZhi"},"content":"* `VersionedAddressBook#commit()`— Saves the current address book state in its history.","lastModifiedDate":"2022-10-21"},{"lineNumber":362,"author":{"gitId":"TanPingZhi"},"content":"* `VersionedAddressBook#undo()`— Restores the previous address book state from its history.","lastModifiedDate":"2022-10-21"},{"lineNumber":363,"author":{"gitId":"TanPingZhi"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone address book state from its history.","lastModifiedDate":"2022-10-21"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"TanPingZhi"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2022-10-21"},{"lineNumber":366,"author":{"gitId":"TanPingZhi"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2022-10-21"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"TanPingZhi"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2022-10-21"},{"lineNumber":371,"author":{"gitId":"TanPingZhi"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2022-10-21"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"TanPingZhi"},"content":"Step 2. The user executes `delete 5` command to delete the 5th food in the address book. The `delete` command","lastModifiedDate":"2022-10-21"},{"lineNumber":376,"author":{"gitId":"TanPingZhi"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2022-10-21"},{"lineNumber":377,"author":{"gitId":"TanPingZhi"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2022-10-21"},{"lineNumber":378,"author":{"gitId":"TanPingZhi"},"content":"state.","lastModifiedDate":"2022-10-21"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"TanPingZhi"},"content":"Step 3. The user executes `add n/David …​` to add a new food. The `add` command also calls `Model#commitAddressBook()`,","lastModifiedDate":"2022-10-21"},{"lineNumber":383,"author":{"gitId":"TanPingZhi"},"content":"causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-10-21"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"TanPingZhi"},"content":"Step 4. The user now decides that adding the food was a mistake, and decides to undo that action by executing the `undo`","lastModifiedDate":"2022-10-21"},{"lineNumber":392,"author":{"gitId":"TanPingZhi"},"content":"command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the","lastModifiedDate":"2022-10-21"},{"lineNumber":393,"author":{"gitId":"TanPingZhi"},"content":"left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-10-21"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"TanPingZhi"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2022-10-21"},{"lineNumber":411,"author":{"gitId":"TanPingZhi"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2022-10-21"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"TanPingZhi"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2022-10-21"},{"lineNumber":418,"author":{"gitId":"TanPingZhi"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2022-10-21"},{"lineNumber":419,"author":{"gitId":"TanPingZhi"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2022-10-21"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"TanPingZhi"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2022-10-21"},{"lineNumber":424,"author":{"gitId":"TanPingZhi"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2022-10-21"},{"lineNumber":425,"author":{"gitId":"TanPingZhi"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2022-10-21"},{"lineNumber":426,"author":{"gitId":"TanPingZhi"},"content":"desktop applications follow.","lastModifiedDate":"2022-10-21"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"nicolelim02"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the food being deleted).","lastModifiedDate":"2022-10-04"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":459,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":460,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":462,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"xav168"},"content":"* wishes to track their daily calorie intake","lastModifiedDate":"2022-09-28"},{"lineNumber":473,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"xav168"},"content":"* knows how much calories are in the food they just ate","lastModifiedDate":"2022-09-28"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"xav168"},"content":"**Value proposition**: manage and calculate calorie intake quickly","lastModifiedDate":"2022-09-28"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"nicolelim02"},"content":"| Priority | As a            | I want to                                                         | So that I can…                                                        |","lastModifiedDate":"2022-10-18"},{"lineNumber":483,"author":{"gitId":"ruiqi7"},"content":"|----------|-----------------|-------------------------------------------------------------------|-----------------------------------------------------------------------|","lastModifiedDate":"2022-10-19"},{"lineNumber":484,"author":{"gitId":"xav168"},"content":"| `* * *`  | careless user   | delete a wrongly added meal                                       | fix my food records easily                                            |","lastModifiedDate":"2022-09-27"},{"lineNumber":485,"author":{"gitId":"xav168"},"content":"| `* * *`  | user            | add my daily calorie intake                                       | know how much I am eating                                             |","lastModifiedDate":"2022-09-27"},{"lineNumber":486,"author":{"gitId":"xav168"},"content":"| `* * *`  | food enthusiast | calculate my daily calorie intake                                 | know how nutrient dense my food is                                    |","lastModifiedDate":"2022-09-27"},{"lineNumber":487,"author":{"gitId":"xav168"},"content":"| `* * *`  | careless user   | edit a meal wrongly recorded                                      | change my food records easily                                         |","lastModifiedDate":"2022-09-27"},{"lineNumber":488,"author":{"gitId":"ruiqi7"},"content":"| `* * *`  | forgetful user  | find my list of foods consumed for any day                        | get a better understanding of my eating habits                        |","lastModifiedDate":"2022-10-19"},{"lineNumber":489,"author":{"gitId":"xav168"},"content":"| `* *`    | user            | key in the calorie intake for each type of food                   | know how much calories a particular food contains                     |","lastModifiedDate":"2022-09-27"},{"lineNumber":490,"author":{"gitId":"ruiqi7"},"content":"| `* *`    | user            | specify my body composition                                       | find out how much calories is should be consuming based on my profile |","lastModifiedDate":"2022-10-19"},{"lineNumber":491,"author":{"gitId":"ruiqi7"},"content":"| `* *`    | user            | calculate my BMI                                                  | know if my current weight is in a healthy range                       |","lastModifiedDate":"2022-10-19"},{"lineNumber":492,"author":{"gitId":"ruiqi7"},"content":"| `* *`    | sedentary user  | get information on healthy lifestyle habits                       | adopt a more active lifestyle                                         |","lastModifiedDate":"2022-10-19"},{"lineNumber":493,"author":{"gitId":"ruiqi7"},"content":"| `* *`    | nus student     | find the nearest gym in school based on where I am at             | know where to go if I want to exercise                                |","lastModifiedDate":"2022-10-19"},{"lineNumber":494,"author":{"gitId":"ruiqi7"},"content":"| `* *`    | user            | get a suggested daily calorie intake based on my body composition | know what would be a reasonable calorie target                        |","lastModifiedDate":"2022-10-19"},{"lineNumber":495,"author":{"gitId":"ruiqi7"},"content":"| `* *`    | user            | find the calorie content of a food item                           | know how many calories I am consuming for a particular food           |","lastModifiedDate":"2022-10-23"},{"lineNumber":496,"author":{"gitId":"xav168"},"content":"| `*`      | forgetful user  | receive reminders about my calorie deficiency / excess            | know if I should consume more / less calories                         |","lastModifiedDate":"2022-09-27"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"TanPingZhi"},"content":"(For all use cases below, the **System** is the `NutriGoals` application and the **Actor** is the `user`, unless","lastModifiedDate":"2022-10-21"},{"lineNumber":503,"author":{"gitId":"TanPingZhi"},"content":"specified otherwise)","lastModifiedDate":"2022-10-21"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"nicolelim02"},"content":"**Use case: UC-1 List food items**","lastModifiedDate":"2022-10-18"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"ruiqi7"},"content":"1. User requests to list the food items consumed on a particular date.","lastModifiedDate":"2022-10-23"},{"lineNumber":510,"author":{"gitId":"ruiqi7"},"content":"2. NutriGoals shows the list of food items consumed on the specified date.","lastModifiedDate":"2022-10-23"},{"lineNumber":511,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":512,"author":{"gitId":"nicolelim02"},"content":"   Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":513,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":514,"author":{"gitId":"nicolelim02"},"content":"**Extension**","lastModifiedDate":"2022-09-27"},{"lineNumber":515,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":516,"author":{"gitId":"ruiqi7"},"content":"* 1a. No food item recorded on the specified date.","lastModifiedDate":"2022-10-23"},{"lineNumber":517,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":518,"author":{"gitId":"ruiqi7"},"content":"    * 1a1. NutriGoals displays a default message.","lastModifiedDate":"2022-10-19"},{"lineNumber":519,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":520,"author":{"gitId":"nicolelim02"},"content":"      Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":521,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":522,"author":{"gitId":"nicolelim02"},"content":"**Use case: UC-2 Add a meal**","lastModifiedDate":"2022-09-27"},{"lineNumber":523,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":524,"author":{"gitId":"nicolelim02"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":525,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":526,"author":{"gitId":"nicolelim02"},"content":"1. User enters the command to add a food item.","lastModifiedDate":"2022-10-18"},{"lineNumber":527,"author":{"gitId":"nicolelim02"},"content":"2. NutriGoals shows the new list of food items.","lastModifiedDate":"2022-10-18"},{"lineNumber":528,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":529,"author":{"gitId":"nicolelim02"},"content":"   Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":530,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":531,"author":{"gitId":"nicolelim02"},"content":"**Extension**","lastModifiedDate":"2022-09-27"},{"lineNumber":532,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":533,"author":{"gitId":"ruiqi7"},"content":"* 1a. The information provided is invalid.","lastModifiedDate":"2022-10-19"},{"lineNumber":534,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":535,"author":{"gitId":"ruiqi7"},"content":"    * 1a1. NutriGoals shows an error message.","lastModifiedDate":"2022-10-19"},{"lineNumber":536,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":537,"author":{"gitId":"nicolelim02"},"content":"      Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":539,"author":{"gitId":"nicolelim02"},"content":"**Use case: UC-3 Delete a meal**","lastModifiedDate":"2022-09-27"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":541,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":543,"author":{"gitId":"ruiqi7"},"content":"1. User requests to \u003cins\u003elist the meals recorded (UC-1)\u003c/ins\u003e.","lastModifiedDate":"2022-10-19"},{"lineNumber":544,"author":{"gitId":"ruiqi7"},"content":"2. NutriGoals shows a list of meals.","lastModifiedDate":"2022-10-19"},{"lineNumber":545,"author":{"gitId":"ruiqi7"},"content":"3. User requests to delete a specific meal in the list.","lastModifiedDate":"2022-10-19"},{"lineNumber":546,"author":{"gitId":"ruiqi7"},"content":"4. NutriGoals deletes the meal.","lastModifiedDate":"2022-10-19"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"nicolelim02"},"content":"* 3a. The specified food item is invalid.","lastModifiedDate":"2022-10-18"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"nicolelim02"},"content":"    * 3a1. NutriGoals shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"nicolelim02"},"content":"**Use case: UC-4 Edit a meal**","lastModifiedDate":"2022-09-27"},{"lineNumber":563,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":564,"author":{"gitId":"nicolelim02"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":565,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":566,"author":{"gitId":"ruiqi7"},"content":"1. User requests to \u003cins\u003elist all the meals recorded (UC-1)\u003c/ins\u003e.","lastModifiedDate":"2022-10-19"},{"lineNumber":567,"author":{"gitId":"nicolelim02"},"content":"2. NutriGoals shows a list of meals.","lastModifiedDate":"2022-10-18"},{"lineNumber":568,"author":{"gitId":"nicolelim02"},"content":"3. User requests to edit a specific meal in the list.","lastModifiedDate":"2022-10-18"},{"lineNumber":569,"author":{"gitId":"nicolelim02"},"content":"4. NutriGoals edits the meal.","lastModifiedDate":"2022-10-18"},{"lineNumber":570,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":571,"author":{"gitId":"nicolelim02"},"content":"   Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":572,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":573,"author":{"gitId":"nicolelim02"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":574,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":575,"author":{"gitId":"nicolelim02"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-18"},{"lineNumber":576,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":577,"author":{"gitId":"nicolelim02"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":578,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":579,"author":{"gitId":"nicolelim02"},"content":"* 3a. The edited food item is invalid.","lastModifiedDate":"2022-10-18"},{"lineNumber":580,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":581,"author":{"gitId":"nicolelim02"},"content":"    * 3a1. NutriGoals shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":582,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":583,"author":{"gitId":"nicolelim02"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"nicolelim02"},"content":"**Use case: UC-5 Set up a profile**","lastModifiedDate":"2022-10-18"},{"lineNumber":586,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":587,"author":{"gitId":"nicolelim02"},"content":"**MSS**","lastModifiedDate":"2022-10-18"},{"lineNumber":588,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":589,"author":{"gitId":"nicolelim02"},"content":"1. User requests to set up his / her profile.","lastModifiedDate":"2022-10-18"},{"lineNumber":590,"author":{"gitId":"nicolelim02"},"content":"2. NutriGoals creates and saves the user\u0027s profile.","lastModifiedDate":"2022-10-18"},{"lineNumber":591,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":592,"author":{"gitId":"nicolelim02"},"content":"   Use case ends.","lastModifiedDate":"2022-10-18"},{"lineNumber":593,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":594,"author":{"gitId":"nicolelim02"},"content":"**Extensions**","lastModifiedDate":"2022-10-18"},{"lineNumber":595,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":596,"author":{"gitId":"nicolelim02"},"content":"* 1a. The information provided is invalid.","lastModifiedDate":"2022-10-18"},{"lineNumber":597,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":598,"author":{"gitId":"nicolelim02"},"content":"    * 1a1. NutriGoals shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":599,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":600,"author":{"gitId":"nicolelim02"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-18"},{"lineNumber":601,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":602,"author":{"gitId":"nicolelim02"},"content":"**Use case: UC-6 View the profile created**","lastModifiedDate":"2022-10-18"},{"lineNumber":603,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":604,"author":{"gitId":"nicolelim02"},"content":"**MSS**","lastModifiedDate":"2022-10-18"},{"lineNumber":605,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":606,"author":{"gitId":"nicolelim02"},"content":"1. User requests to view his / her profile.","lastModifiedDate":"2022-10-18"},{"lineNumber":607,"author":{"gitId":"nicolelim02"},"content":"2. NutriGoals shows the user\u0027s profile.","lastModifiedDate":"2022-10-18"},{"lineNumber":608,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":609,"author":{"gitId":"nicolelim02"},"content":"   Use case ends.","lastModifiedDate":"2022-10-18"},{"lineNumber":610,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":611,"author":{"gitId":"nicolelim02"},"content":"**Extensions**","lastModifiedDate":"2022-10-18"},{"lineNumber":612,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":613,"author":{"gitId":"nicolelim02"},"content":"* 1a. User profile is not created.","lastModifiedDate":"2022-10-18"},{"lineNumber":614,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":615,"author":{"gitId":"nicolelim02"},"content":"    * 1a1. NutriGoals requests the user to set up a profile.","lastModifiedDate":"2022-10-18"},{"lineNumber":616,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":617,"author":{"gitId":"ruiqi7"},"content":"    * 1a2. User requests to \u003cins\u003eset up his / her profile (UC-5)\u003c/ins\u003e.","lastModifiedDate":"2022-10-19"},{"lineNumber":618,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":619,"author":{"gitId":"nicolelim02"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-18"},{"lineNumber":620,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":621,"author":{"gitId":"ruiqi7"},"content":"**Use case: UC-7 View a summary of the daily calorie intake**","lastModifiedDate":"2022-10-19"},{"lineNumber":622,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":623,"author":{"gitId":"ruiqi7"},"content":"**MSS**","lastModifiedDate":"2022-10-19"},{"lineNumber":624,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":625,"author":{"gitId":"ruiqi7"},"content":"1. User requests to view a summary of the daily calorie intake.","lastModifiedDate":"2022-10-19"},{"lineNumber":626,"author":{"gitId":"TanPingZhi"},"content":"2. NutriGoals shows the user\u0027s total calories consumed, the calorie target and the deficient or excess amount of","lastModifiedDate":"2022-10-21"},{"lineNumber":627,"author":{"gitId":"TanPingZhi"},"content":"   calories for the day.","lastModifiedDate":"2022-10-21"},{"lineNumber":628,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":629,"author":{"gitId":"ruiqi7"},"content":"   Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":630,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":631,"author":{"gitId":"ruiqi7"},"content":"**Use case: UC-8 Find the calorie content of a food item**","lastModifiedDate":"2022-10-23"},{"lineNumber":632,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":633,"author":{"gitId":"ruiqi7"},"content":"**MSS**","lastModifiedDate":"2022-10-23"},{"lineNumber":634,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":635,"author":{"gitId":"ruiqi7"},"content":"1. User requests to find the calorie content of a food item.","lastModifiedDate":"2022-10-23"},{"lineNumber":636,"author":{"gitId":"ruiqi7"},"content":"2. NutriGoals shows the calorie content of the specified food item.","lastModifiedDate":"2022-10-23"},{"lineNumber":637,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":638,"author":{"gitId":"ruiqi7"},"content":"   Use case ends.","lastModifiedDate":"2022-10-23"},{"lineNumber":639,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":640,"author":{"gitId":"ruiqi7"},"content":"**Extensions**","lastModifiedDate":"2022-10-23"},{"lineNumber":641,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":642,"author":{"gitId":"ruiqi7"},"content":"* 1a. The specified food item is invalid.","lastModifiedDate":"2022-10-23"},{"lineNumber":643,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":644,"author":{"gitId":"ruiqi7"},"content":"    * 1a1. NutriGoals shows an error message.","lastModifiedDate":"2022-10-23"},{"lineNumber":645,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":646,"author":{"gitId":"ruiqi7"},"content":"      Use case ends.","lastModifiedDate":"2022-10-23"},{"lineNumber":647,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":648,"author":{"gitId":"ruiqi7"},"content":"* 1b. There is no calorie content information for the specified food item.","lastModifiedDate":"2022-10-23"},{"lineNumber":649,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":650,"author":{"gitId":"ruiqi7"},"content":"    * 1b1. NutriGoals displays a default message.","lastModifiedDate":"2022-10-23"},{"lineNumber":651,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":652,"author":{"gitId":"ruiqi7"},"content":"      Use case ends.","lastModifiedDate":"2022-10-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"nicolelim02"},"content":"2. Should be able to hold up to 1000 foods without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-10-04"},{"lineNumber":658,"author":{"gitId":"TanPingZhi"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2022-10-21"},{"lineNumber":659,"author":{"gitId":"TanPingZhi"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-10-21"},{"lineNumber":660,"author":{"gitId":"TanPingZhi"},"content":"4. The system should respond to a command within two seconds.","lastModifiedDate":"2022-09-27"},{"lineNumber":661,"author":{"gitId":"TanPingZhi"},"content":"5. Project scope:","lastModifiedDate":"2022-09-27"},{"lineNumber":662,"author":{"gitId":"nicolelim02"},"content":"    * The system only handles information regarding the calorie intake of a food and no other nutrients.","lastModifiedDate":"2022-10-04"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"AkkFiros"},"content":"* **Calorie(s)**: Unit of measurement for amount of food consumed.","lastModifiedDate":"2022-09-26"},{"lineNumber":669,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":670,"author":{"gitId":"AkkFiros"},"content":"* **Meals**: Breakfast, Lunch, Dinner e.t.c., categories for users to input their daily meals under.","lastModifiedDate":"2022-09-26"},{"lineNumber":671,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":672,"author":{"gitId":"AkkFiros"},"content":"* **Macros**: Proteins, Carbohydrates, Fats e.t.c., macronutrient groups that provide people with energy.","lastModifiedDate":"2022-09-26"},{"lineNumber":673,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":674,"author":{"gitId":"AkkFiros"},"content":"* **Daily Recommended Calorie Intake**: the amount of calories recommended by experts for an individual to consume daily","lastModifiedDate":"2022-09-26"},{"lineNumber":675,"author":{"gitId":"AkkFiros"},"content":"  (According to Health Promotion Board Singapore, adult males should consume 2200 calories, adult females","lastModifiedDate":"2022-09-26"},{"lineNumber":676,"author":{"gitId":"AkkFiros"},"content":"  should consume 1800 calories).","lastModifiedDate":"2022-09-26"},{"lineNumber":677,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":678,"author":{"gitId":"AkkFiros"},"content":"* **Deficit**: the amount of calories _not_ consumed in order to facilitate fat burning and weight loss.","lastModifiedDate":"2022-09-26"},{"lineNumber":679,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":680,"author":{"gitId":"AkkFiros"},"content":"* **Surplus**: the amount of calories consumed in excess of the recommended daily intake to facilitate mass gain.","lastModifiedDate":"2022-09-26"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":682,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"ruiqi7"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample food items. The window size may not be","lastModifiedDate":"2022-10-23"},{"lineNumber":700,"author":{"gitId":"TanPingZhi"},"content":"       optimum.","lastModifiedDate":"2022-10-21"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"nicolelim02"},"content":"### Deleting a food","lastModifiedDate":"2022-10-04"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"ruiqi7"},"content":"1. Deleting a food while all foods on a particular day are being shown","lastModifiedDate":"2022-10-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"ruiqi7"},"content":"    1. Prerequisites: List all foods on a particular day using the `list` command. Multiple foods in the list.","lastModifiedDate":"2022-10-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"ruiqi7"},"content":"       Expected: First food item is deleted from the list. Details of the deleted food shown in the status message.","lastModifiedDate":"2022-10-23"},{"lineNumber":719,"author":{"gitId":"TanPingZhi"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2022-10-21"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"nicolelim02"},"content":"       Expected: No food is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-04"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AkkFiros":13,"ruiqi7":125,"TanPingZhi":128,"xav168":9,"nicolelim02":155,"-":305}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"   1. Run the `seedu.nutrigoals.Main` and try a few commands.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"xav168":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"   e.g. `seedu.nutrigoals.commons.StringUtilTest`","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"   e.g. `seedu.nutrigoals.storage.StorageManagerTest`","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"   e.g. `seedu.nutrigoals.logic.LogicManagerTest`","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"NutriGoals is a desktop app that tracks a user’s diet and calorie consumption. Studies have shown the benefits of keeping track of your daily food consumption – the more consistent you are, the more likely you are to achieve the various fitness goals that you have set for yourself! However, without the right tools, tracking what you have consumed can be tedious and at times disorganised. With NutriGoals, you can keep track of your consumption quickly and easily, without worrying about organising your data.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"2. Download the latest `nutrigoals.jar` from [here](https://github.com/AY2223S1-CS2103T-T17-2/tp/releases).","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"3. Double-click the file to start the app.","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"4. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"* Texts in UPPER_CASE are arguments provided by the user.","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"* Arguments in square brackets are optional.","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"### Adding the calorie content of a food item : `add`","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"Adds a food item with its calorie content.","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"Format: `add n/FOOD c/CALORIE t/MEAL_TYPE`","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"* Adds a food item into the food list for the day, together with its calorie content and meal type.","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"* Each field can only be specified once.","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"* `MEAL_TYPE` can only take on three values: breakfast, lunch or dinner (case-insensitive).","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"Example:","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"* `add n/bread c/100 t/breakfast` adds bread into the food list, and tags it as a breakfast item with 100 calories.","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"* `add n/bubble tea c/300 t/lunch` adds bubble tea into the food list, and tags it as a lunch item with 300 calories.","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"* `add n/hotpot c/500 t/dinner` adds hotpot into the food list, and tags it as a dinner item with 500 calories.","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"### Deleting a food item : `delete`","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"Removes a food item from the list of consumed food.","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"* Deletes a food item at the specified index.","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"nicolelim02"},"content":"* The index **must be a positive** number.","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"Example:","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"nicolelim02"},"content":"* `delete 1` deletes the first item in the food list.","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"ruiqi7"},"content":"* `list 2022-10-23` followed by `delete 1` will delete the first food item recorded on 23 October 2022.","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"xav168"},"content":"### Editing a food item : `edit`","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"xav168"},"content":"Edits a food item from the list of consumed food for the day.","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"nicolelim02"},"content":"Format: `edit INDEX n/UPDATED_FOOD c/CALORIES t/MEAL_TYPE`","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"nicolelim02"},"content":"* Edits a food item in the list displayed at the specified index.","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"nicolelim02"},"content":"* The index refers to the index shown in the displayed food lists.","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"nicolelim02"},"content":"* The index **must be a positive** number.","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"nicolelim02"},"content":"* Either the `UPDATED_FOOD`, `CALORIES`, or `MEAL_TYPE` must be supplied.","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"nicolelim02"},"content":"Example:","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"nicolelim02"},"content":"* `edit 2 n/rice c/300 t/dinner` edits the 2nd food item for dinner to rice with 300 calories.","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"nicolelim02"},"content":"* `edit 2 n/noodles` edits the name of 2nd food item to noodles.","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"nicolelim02"},"content":"* `edit 2 c/100 n/bread` edits the name and calorie content of the first item to bread and 100 respectively.","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"nicolelim02"},"content":"* `list 2022-10-10` followed by `edit 1 n/sushi` will edit the name of the first food item recorded on 2022-10-10","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"nicolelim02"},"content":"to sushi.","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"ruiqi7"},"content":"### Listing all foods for a day: `list`","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"ruiqi7"},"content":"Shows a list of all food items and their respective calories for the specified day (if any).","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"ruiqi7"},"content":"Format: `list [DATE]`","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"ruiqi7"},"content":"* Shows the food list for the current day if no `DATE` is supplied.","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"ruiqi7"},"content":"* `DATE` must be in the format **yyyy-MM-dd** if supplied.","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"ruiqi7"},"content":"Example:","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"ruiqi7"},"content":"* `list` shows a list of all food items and their calories for the current day.","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"ruiqi7"},"content":"* `list 2022-11-27` shows a list of all food items and their calories for 27 November 2022.","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"ruiqi7"},"content":"### Finding the calorie content of a food item: `find`","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"ruiqi7"},"content":"Finds the calorie content of a food item for 1 serving in kcal.","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"ruiqi7"},"content":"Format: `find FOOD`","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"ruiqi7"},"content":"* Only the calorie contents of some common food items are included.","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"nicolelim02"},"content":"Example:","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"ruiqi7"},"content":"* `find chicken rice` finds and displays the calorie content of 1 plate of chicken rice.","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"nicolelim02"},"content":"### Setting a target daily calorie intake: `target`","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"nicolelim02"},"content":"Sets a target daily calorie intake.","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"nicolelim02"},"content":"Format: `target CALORIE`","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"nicolelim02"},"content":"* `CALORIE` can only take on integer values.","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"nicolelim02"},"content":"Example:","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"nicolelim02"},"content":"* `target 2000` targets a daily calorie intake of 2000 calories.","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"ruiqi7"},"content":"### Viewing a summary of the daily calorie intake: `review`","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"ruiqi7"},"content":"Shows the total calories consumed, the calorie target and the deficient or excess amount of calories for the day.","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"xav168"},"content":"Format: `review`","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"nicolelim02"},"content":"### Setting up a user profile: `setup`","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"nicolelim02"},"content":"Sets up a user profile.","lastModifiedDate":"2022-10-17"},{"lineNumber":139,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"nicolelim02"},"content":"Format: `setup g/GENDER w/WEIGHT h/HEIGHT i/IDEAL_WEIGHT a/AGE`","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"nicolelim02"},"content":"* Sets up the user profile using the information provided by the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"nicolelim02"},"content":"* `GENDER` can only take 2 values: M or F (case-insensitive).","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"nicolelim02"},"content":"* `WEIGHT` and `IDEAL_WEIGHT` can only take on integer values less than 200 (in kg).","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"nicolelim02"},"content":"* `HEIGHT` can only take on integer values less than 220 (in cm).","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"nicolelim02"},"content":"* `AGE` can only take on integer values (in years).","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"nicolelim02"},"content":"Example:","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"nicolelim02"},"content":"* `setup g/f w/50 h/165 i/48 a/20` sets up a user profile for a 20-year-old female who is 50kg and 165cm, ","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"nicolelim02"},"content":"with an ideal weight of 48kg.","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"nicolelim02"},"content":"* `setup g/m w/70 h/175 i/70 a/20` sets up a user profile for a 20-year-old male who is 70kg and 175cm,","lastModifiedDate":"2022-10-17"},{"lineNumber":153,"author":{"gitId":"nicolelim02"},"content":"with an ideal weight of 70kg.","lastModifiedDate":"2022-10-17"},{"lineNumber":154,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"nicolelim02"},"content":"### Viewing the user\u0027s profile: `profile`","lastModifiedDate":"2022-10-17"},{"lineNumber":156,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"nicolelim02"},"content":"Displays the user\u0027s information stored during setup.","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"nicolelim02"},"content":"Format: `profile`","lastModifiedDate":"2022-10-17"},{"lineNumber":160,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":161,"author":{"gitId":"nicolelim02"},"content":"* A user can only view his/her profile after setup. ","lastModifiedDate":"2022-10-17"},{"lineNumber":162,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"nicolelim02"},"content":"### Suggesting a daily calorie intake: `suggest`","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":165,"author":{"gitId":"nicolelim02"},"content":"Suggests an estimated daily calorie intake to allow the user to attain his/her ideal weight.","lastModifiedDate":"2022-10-17"},{"lineNumber":166,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":167,"author":{"gitId":"nicolelim02"},"content":"Format: `suggest`","lastModifiedDate":"2022-10-17"},{"lineNumber":168,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":169,"author":{"gitId":"nicolelim02"},"content":"* A user can only get an estimated suggested daily calorie intake after setup.","lastModifiedDate":"2022-10-17"},{"lineNumber":170,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"nicolelim02"},"content":"### Locating the nearest gym in NUS: `locate`","lastModifiedDate":"2022-10-17"},{"lineNumber":172,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":173,"author":{"gitId":"nicolelim02"},"content":"Locates the nearest gym in NUS based on the input location. ","lastModifiedDate":"2022-10-17"},{"lineNumber":174,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"nicolelim02"},"content":"Format: `locate LOCATION`","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":177,"author":{"gitId":"nicolelim02"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"nicolelim02"},"content":"Clears all entries from NutriGoals.","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2022-10-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":191,"author":{"gitId":"nicolelim02"},"content":"NutriGoals data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"ruiqi7"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous NutriGoals home folder.","lastModifiedDate":"2022-09-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"AkkFiros"},"content":"| Action      | Format                                                  | Example                          |","lastModifiedDate":"2022-09-29"},{"lineNumber":208,"author":{"gitId":"nicolelim02"},"content":"|-------------|---------------------------------------------------------|----------------------------------|","lastModifiedDate":"2022-10-17"},{"lineNumber":209,"author":{"gitId":"nicolelim02"},"content":"| **Help**    | `help`                                                  | `help`                           |","lastModifiedDate":"2022-10-17"},{"lineNumber":210,"author":{"gitId":"nicolelim02"},"content":"| **Add**     | `add n/FOOD c/CALORIE t/MEAL_TYPE`                      | `add n/donut c/1000 t/breakfast` |","lastModifiedDate":"2022-10-17"},{"lineNumber":211,"author":{"gitId":"nicolelim02"},"content":"| **Delete**  | `delete INDEX`                                          | `delete 1`                       |","lastModifiedDate":"2022-10-17"},{"lineNumber":212,"author":{"gitId":"nicolelim02"},"content":"| **Edit**    | `edit INDEX n/UPDATED_FOOD c/CALORIES t/MEAL_TYPE`      | `edit 2 n/rice c/300 t/dinner`   |","lastModifiedDate":"2022-10-17"},{"lineNumber":213,"author":{"gitId":"ruiqi7"},"content":"| **Find**    | `find FOOD`                                             | `find chicken rice`              |","lastModifiedDate":"2022-10-18"},{"lineNumber":214,"author":{"gitId":"nicolelim02"},"content":"| **Target**  | `target`                                                | `target 2000`                    |","lastModifiedDate":"2022-10-17"},{"lineNumber":215,"author":{"gitId":"AkkFiros"},"content":"| **Review**  | `review`                                                | `review`                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":216,"author":{"gitId":"nicolelim02"},"content":"| **List**    | `list [DATE]`                                           | `list`                           |","lastModifiedDate":"2022-10-17"},{"lineNumber":217,"author":{"gitId":"nicolelim02"},"content":"| **Setup**   | `setup g/GENDER w/WEIGHT h/HEIGHT i/IDEAL_WEIGHT a/AGE` | `setup g/m w/70 h/175 i/70 a/20` |","lastModifiedDate":"2022-10-17"},{"lineNumber":218,"author":{"gitId":"nicolelim02"},"content":"| **Profile** | `profile`                                               | `profile`                        |","lastModifiedDate":"2022-10-17"},{"lineNumber":219,"author":{"gitId":"nicolelim02"},"content":"| **Suggest** | `suggest`                                               | `suggest`                        |","lastModifiedDate":"2022-10-17"},{"lineNumber":220,"author":{"gitId":"nicolelim02"},"content":"| **Clear**   | `clear`                                                 | `clear`                          |","lastModifiedDate":"2022-10-17"},{"lineNumber":221,"author":{"gitId":"AkkFiros"},"content":"| **Exit**    | `exit`                                                  | `exit`                           |","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"AkkFiros":3,"ruiqi7":22,"xav168":10,"nicolelim02":89,"-":97}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ruiqi7"},"content":"    content: \"NutriGoals\";","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ruiqi7":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteFood(f)","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveNutriGoals(nutriGoals)","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicolelim02":2,"-":36}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"!include style.puml","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"participant \":NutriGoalsParser\" as NutriGoalsParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"[-\u003e LogicManager : execute(\"edit 1 n/Sushi\")","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"activate LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"LogicManager -\u003e NutriGoalsParser : parseCommand(\"edit 1 n/Sushi\")","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"activate NutriGoalsParser","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"create EditCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"NutriGoalsParser -\u003e EditCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"activate EditCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"EditCommandParser --\u003e NutriGoalsParser","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"deactivate EditCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"NutriGoalsParser -\u003e EditCommandParser : parse(\"1 n/Sushi\")","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"activate EditCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"create EditCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"activate EditCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"EditCommand --\u003e EditCommandParser : e","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"deactivate EditCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"EditCommandParser --\u003e NutriGoalsParser : e","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"deactivate EditCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"EditCommandParser -[hidden]-\u003e NutriGoalsParser","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"destroy EditCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"NutriGoalsParser --\u003e LogicManager : e","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"deactivate NutriGoalsParser","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"nicolelim02"},"content":"activate EditCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"EditCommand -\u003e Model : setFood(foodToEdit, editedFood)","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"deactivate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"EditCommand -\u003e Model : getDatePredicate()","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"Model --\u003e EditCommand : predicate","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"EditCommand -\u003e Model : updateFilteredFoodList(predicate)","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"nicolelim02"},"content":"deactivate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"create CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"nicolelim02"},"content":"activate CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"nicolelim02"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"nicolelim02"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"nicolelim02"},"content":"deactivate EditCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"nicolelim02"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"nicolelim02"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"nicolelim02"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"nicolelim02":81}},{"path":"docs/diagrams/ListActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"@startuml","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"start","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":":User executes list command;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":": NutriGoalsParser parses the input;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"if () then ([isInputValid])","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"    if () then ([isDateSupplied])","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"        : Creates a ListCommand with the given date;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"    else ([else])","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"        : Creates a ListCommand with the current date;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"    endif","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"    : ListCommand is executed;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"    if () then ([isFilteredFoodListEmpty])","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"        : Display the filtered food list;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"    else ([else])","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"        : Display message indicating empty food list;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"    endif","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"else ([else])","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"    : Display error message;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"endif","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"stop","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"@enduml","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"ruiqi7":25}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":"Class NutriGoalsParser","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"LogicManager -right-\u003e\"1\" NutriGoalsParser","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"NutriGoalsParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicolelim02":3,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyNutriGoals\" as ReadOnlyNutriGoals","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"Class NutriGoals","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"Class FoodList","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"Class Food","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"Class DateTime","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"Class Calorie","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"NutriGoals .up.|\u003e ReadOnlyNutriGoals","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"Model .left.\u003e ReadOnlyNutriGoals","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"ModelManager -left-\u003e \"1\" NutriGoals","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"NutriGoals *--\u003e \"1\" FoodList","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"FoodList -right-\u003e \"~* all\" Food","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"Food *--\u003e Name","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"Food *--\u003e Calorie","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"Food *--\u003e DateTime","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"Food *--\u003e \"*\" Tag","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"Name -[hidden]right-\u003e Calorie","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"Calorie -[hidden]right-\u003e DateTime","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"DateTime -[hidden]right-\u003e Tag","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"ModelManager --\u003e\"~* filtered\" Food","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicolelim02":19,"-":29}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"Class NutriGoalsParser","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"HiddenOutside ..\u003e NutriGoalsParser","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"NutriGoalsParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"NutriGoalsParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"nicolelim02":4,"-":34}},{"path":"docs/diagrams/ProfileCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":":User executes ProfileCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":": NutriGoalsParser parses the input;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"if () then ([isInputValid])","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":"    : Creates a ProfileCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"    : ProfileCommand is executed;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"    if () then ([isUserCreated])","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"        : Extract user\u0027s details;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"        : Display success message and user\u0027s details;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"    else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"        : Display error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"    endif","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"    : Display error message;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"endif","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"nicolelim02":22}},{"path":"docs/diagrams/ReviewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"!include style.puml","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"participant \":ReviewCommand\" as ReviewCommand LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"participant \"p:IsFoodAddedOnThisDatePredicate\" as IsFoodAddedOnThisDatePredicate MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"[-\u003e ReviewCommand : execute()","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"activate ReviewCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"create IsFoodAddedOnThisDatePredicate","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"ReviewCommand -\u003e IsFoodAddedOnThisDatePredicate : IsFoodAddedOnThisDatePredicate(today)","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"activate IsFoodAddedOnThisDatePredicate","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"IsFoodAddedOnThisDatePredicate --\u003e ReviewCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"deactivate IsFoodAddedOnThisDatePredicate","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"ReviewCommand -\u003e Model : updateFilteredFoodList(p)","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"Model --\u003e ReviewCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"deactivate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"ReviewCommand -\u003e Model : getTotalCalorie()","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"Model --\u003e ReviewCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"deactivate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"ReviewCommand -\u003e Model : getCalorieDifference()","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"Model --\u003e ReviewCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"ruiqi7"},"content":"deactivate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"ruiqi7"},"content":"ReviewCommand -\u003e Model : getCalorieTarget()","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"Model --\u003e ReviewCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"deactivate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"create CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"ReviewCommand -\u003e CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"activate CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"CommandResult --\u003e ReviewCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"ruiqi7"},"content":"[\u003c--ReviewCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"ruiqi7"},"content":"deactivate ReviewCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"ruiqi7"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ruiqi7":58}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"package \"NutriGoals Storage\" #F4F6F6{","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nNutriGoalsStorage\" as NutriGoalsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"Class JsonNutriGoalsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"Class JsonSerializableNutriGoals","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"Class JsonAdaptedFood","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"StorageManager -up-\u003e \"1\" NutriGoalsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"Storage -right-|\u003e NutriGoalsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"JsonNutriGoalsStorage .up.|\u003e NutriGoalsStorage","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"JsonNutriGoalsStorage ..\u003e JsonSerializableNutriGoals","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"JsonSerializableNutriGoals --\u003e \"*\" JsonAdaptedFood","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicolelim02":10,"-":31}},{"path":"docs/diagrams/TargetSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TanPingZhi"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"!$userInput \u003d (\"target 2103\")","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"TanPingZhi"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"TanPingZhi"},"content":"participant \":NutriGoalsParser\" as NutriGoalsParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"TanPingZhi"},"content":"participant \":TargetCommandParser\" as TargetCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"participant \"t:TargetCommand\" as TargetCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"TanPingZhi"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"TanPingZhi"},"content":"[-\u003e LogicManager : execute(\"$userInput\")","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"TanPingZhi"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"LogicManager -\u003e NutriGoalsParser : parseCommand(\"$userInput\")","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"TanPingZhi"},"content":"activate NutriGoalsParser","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"TanPingZhi"},"content":"create TargetCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"TanPingZhi"},"content":"NutriGoalsParser -\u003e TargetCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"TanPingZhi"},"content":"activate TargetCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"TargetCommandParser --\u003e NutriGoalsParser","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"TanPingZhi"},"content":"deactivate TargetCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"TanPingZhi"},"content":"NutriGoalsParser -\u003e TargetCommandParser : parse(\"$userInput\")","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"TanPingZhi"},"content":"activate TargetCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"TanPingZhi"},"content":"create TargetCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"TanPingZhi"},"content":"TargetCommandParser -\u003e TargetCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"TanPingZhi"},"content":"activate TargetCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"TanPingZhi"},"content":"TargetCommand --\u003e TargetCommandParser : t","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"TanPingZhi"},"content":"deactivate TargetCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"TanPingZhi"},"content":"TargetCommandParser --\u003e NutriGoalsParser : t","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"TanPingZhi"},"content":"deactivate TargetCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"TanPingZhi"},"content":"TargetCommandParser -[hidden]-\u003e NutriGoalsParser","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"TanPingZhi"},"content":"destroy TargetCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"TanPingZhi"},"content":"NutriGoalsParser --\u003e LogicManager : t","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"TanPingZhi"},"content":"deactivate NutriGoalsParser","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"TanPingZhi"},"content":"LogicManager -\u003e TargetCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"TanPingZhi"},"content":"activate TargetCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"TanPingZhi"},"content":"TargetCommand -\u003e Model : setCalorieTarget(calorieTarget)","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"TanPingZhi"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"TanPingZhi"},"content":"Model --\u003e TargetCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"TanPingZhi"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"TanPingZhi"},"content":"TargetCommand -\u003e Model : getCalorieTarget()","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"TanPingZhi"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"TanPingZhi"},"content":"Model --\u003e TargetCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"TanPingZhi"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"TanPingZhi"},"content":"create CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"TanPingZhi"},"content":"TargetCommand -\u003e CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"TanPingZhi"},"content":"activate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"TanPingZhi"},"content":"CommandResult --\u003e TargetCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"TanPingZhi"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"TanPingZhi"},"content":"TargetCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"TanPingZhi"},"content":"deactivate TargetCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"TanPingZhi"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"TanPingZhi"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"TanPingZhi"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"TanPingZhi":75}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"Class FoodListPanel","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"Class FoodCard","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"MainWindow *-down-\u003e \"1\" FoodListPanel","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"FoodListPanel -down-\u003e \"*\" FoodCard","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"FoodListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"FoodCard --|\u003e UiPart","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"FoodCard ..\u003e Model","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"FoodListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicolelim02":8,"-":52}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicolelim02":1,"-":19}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicolelim02":1,"-":21}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicolelim02":1,"-":19}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicolelim02":1,"-":19}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicolelim02":1,"-":19}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab3:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicolelim02":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"title: NutriGoals","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"# NutriGoals","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T17-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T17-2/tp/actions)","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T17-2/tp/branch/master/graph/badge.svg?token\u003d993105K3SO)](https://codecov.io/gh/AY2223S1-CS2103T-T17-2/tp)","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"![Ui](./images/Ui.png)","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"* **NutriGoals** is a desktop application catered for fitness enthusiasts to manage their diet.\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"* Usages:","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"    * Keep track of meals consumed","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"    * Calculate calorie consumption","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"* For the detailed documentation of this project, see the [NutriGoals Product Website](https://ay2223s1-cs2103t-t17-2.github.io/tp/).","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"* If you are interested in using NutriGoals, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"* If you are interested about developing NutriGoals, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ruiqi7":1,"xav168":12,"-":11}},{"path":"docs/team/akkfiros.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AkkFiros"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"AkkFiros"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"AkkFiros"},"content":"title: AkkFiros\u0027 Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"AkkFiros"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"AkkFiros"},"content":"### Project: NutriGoals","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"AkkFiros"},"content":"NutriGoals is a desktop app that tracks a user’s diet and calorie consumption. Studies have shown the benefits of keeping track of your daily food consumption – the more consistent you are, the more likely you are to achieve the various fitness goals that you have set for yourself! However, without the right tools, tracking what you have consumed can be tedious and at times disorganised. With NutriGoals, you can keep track of your consumption quickly and easily, without worrying about organising your data.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"AkkFiros"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"AkkFiros"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"AkkFiros"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"AkkFiros"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"AkkFiros"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"AkkFiros"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"AkkFiros"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"AkkFiros"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"AkkFiros"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"AkkFiros"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"AkkFiros":27}},{"path":"docs/team/nicolelim02.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"title: Nicole\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"### Project: NutriGoals","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"NutriGoals is a desktop app that tracks a user’s diet and calorie consumption. Studies have shown the benefits of keeping track of your daily food consumption – the more consistent you are, the more likely you are to achieve the various fitness goals that you have set for yourself! However, without the right tools, tracking what you have consumed can be tedious and at times disorganised. With NutriGoals, you can keep track of your consumption quickly and easily, without worrying about organising your data.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"    * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"nicolelim02":27}},{"path":"docs/team/ruiqi7.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"title: Ruiqi\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"### Project: NutriGoals","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"NutriGoals is a desktop app that tracks a user’s diet and calorie consumption. Studies have shown the benefits of keeping track of your daily food consumption – the more consistent you are, the more likely you are to achieve the various fitness goals that you have set for yourself! However, without the right tools, tracking what you have consumed can be tedious and at times disorganised. With NutriGoals, you can keep track of your consumption quickly and easily, without worrying about organising your data.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"  * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"ruiqi7":26}},{"path":"docs/team/tanpingzhi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TanPingZhi"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"title: Ping Zhi\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"TanPingZhi"},"content":"### Project: NutriGoals","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"NutriGoals is a desktop app that tracks a user’s diet and calorie consumption. Studies have shown the benefits of keeping track of your daily food consumption – the more consistent you are, the more likely you are to achieve the various fitness goals that you have set for yourself! However, without the right tools, tracking what you have consumed can be tedious and at times disorganised. With NutriGoals, you can keep track of your consumption quickly and easily, without worrying about organising your data.","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"* **Project management**:","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"TanPingZhi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"TanPingZhi"},"content":"    * User Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"TanPingZhi"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"TanPingZhi"},"content":"* **Community**:","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"* **Tools**:","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"TanPingZhi":26}},{"path":"docs/team/xav168.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"title: Xavier\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"### Project: NutriGoals","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"NutriGoals is a desktop app that tracks a user’s diet and calorie consumption. Studies have shown the benefits of keeping track of your daily food consumption – the more consistent you are, the more likely you are to achieve the various fitness goals that you have set for yourself! However, without the right tools, tracking what you have consumed can be tedious and at times disorganised. With NutriGoals, you can keep track of your consumption quickly and easily, without worrying about organising your data.","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"* New Feature:","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"* Code contributed:","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"* Project management:","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"* Enhancements to existing features:","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"* Documentation:","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"    * User Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"* Community:","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"* Tools:","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"xav168":26}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":" * Changes the remark of an existing food in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"            + \": Edits the remark of the food identified \"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"            + \"by the index number used in the last food listing. \"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"nicolelim02"},"content":"     * @param index of the food in the filtered food list to edit the remark","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"nicolelim02"},"content":"     * @param remark of the food to be updated to","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"xav168"},"content":"Create a `RemarkCommandParser` class in the `seedu.nutrigoals.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"nicolelim02"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of food data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the food’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a food.","lastModifiedDate":"2022-10-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"xav168"},"content":"Create a new `Remark` in `seedu.nutrigoals.model.food`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"nicolelim02"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each food.","lastModifiedDate":"2022-10-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"xav168"},"content":"Simply add the following to [`seedu.nutrigoals.ui.FoodCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-10"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"nicolelim02"},"content":"public PersonCard(Person food, int displayedIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"nicolelim02"},"content":"    remark.setText(food.getRemark().value);","lastModifiedDate":"2022-10-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"nicolelim02"},"content":"        Person foodToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":347,"author":{"gitId":"nicolelim02"},"content":"        Person editedFood \u003d new Person(","lastModifiedDate":"2022-10-04"},{"lineNumber":348,"author":{"gitId":"nicolelim02"},"content":"                foodToEdit.getName(), foodToEdit.getPhone(), foodToEdit.getEmail(),","lastModifiedDate":"2022-10-04"},{"lineNumber":349,"author":{"gitId":"nicolelim02"},"content":"                foodToEdit.getAddress(), remark, foodToEdit.getTags());","lastModifiedDate":"2022-10-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"nicolelim02"},"content":"        model.setPerson(foodToEdit, editedFood);","lastModifiedDate":"2022-10-04"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"nicolelim02"},"content":"        return new CommandResult(generateSuccessMessage(editedFood));","lastModifiedDate":"2022-10-04"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"nicolelim02"},"content":"     * {@code foodToEdit}.","lastModifiedDate":"2022-10-04"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"nicolelim02"},"content":"    private String generateSuccessMessage(Person foodToEdit) {","lastModifiedDate":"2022-10-04"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"nicolelim02"},"content":"        return String.format(message, foodToEdit);","lastModifiedDate":"2022-10-04"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"xav168":6,"nicolelim02":18,"-":377}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"The `address` field in `Person` is actually an instance of the `seedu.nutrigoals.model.food.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"nicolelim02"},"content":"\u003cLabel fx:id\u003d\"mealType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$mealType\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"nicolelim02"},"content":"  \"foods\": [ {","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"nicolelim02"},"content":"    \"mealType\": \"9482424\",","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xav168":1,"nicolelim02":3,"-":108}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.nutrigoals.logic.Logic`.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"A quick look at the `seedu.nutrigoals.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"nicolelim02"},"content":"       Person foodToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":193,"author":{"gitId":"nicolelim02"},"content":"       Person editedFood \u003d createEditedPerson(foodToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":194,"author":{"gitId":"nicolelim02"},"content":"       if (!foodToEdit.isSamePerson(editedFood) \u0026\u0026 model.hasPerson(editedFood)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"nicolelim02"},"content":"       model.setPerson(foodToEdit, editedFood);","lastModifiedDate":"2022-10-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"nicolelim02"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedFood));","lastModifiedDate":"2022-10-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"nicolelim02"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the food data.","lastModifiedDate":"2022-10-04"},{"lineNumber":205,"author":{"gitId":"nicolelim02"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ foods.\u003cbr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":206,"author":{"gitId":"nicolelim02"},"content":"     FYI, The \u0027filtered list\u0027 is the list of foods resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the foods so that the user can see the edited food along with all other foods. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":207,"author":{"gitId":"nicolelim02"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of foods is being tracked.","lastModifiedDate":"2022-10-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"nicolelim02"},"content":"        foods.addAll(","lastModifiedDate":"2022-10-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xav168":2,"nicolelim02":10,"-":289}},{"path":"src/main/java/seedu/nutrigoals/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.util.FileUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"xav168":3,"-":61}},{"path":"src/main/java/seedu/nutrigoals/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"xav168":1,"-":24}},{"path":"src/main/java/seedu/nutrigoals/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.Config;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.Version;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.Logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.LogicManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.storage.JsonNutriGoalsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.storage.NutriGoalsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.storage.Storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.storage.StorageManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.ui.Ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.ui.UiManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing NutriGoals ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"        NutriGoalsStorage nutriGoalsStorage \u003d new JsonNutriGoalsStorage(userPrefs.getNutriGoalsFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"        storage \u003d new StorageManager(nutriGoalsStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"xav168"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s nutrigoals and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"xav168"},"content":"     * The data from the sample nutrigoals will be used instead if {@code storage}\u0027s nutrigoals is not found,","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"     * or an empty nutrigoals will be used instead if errors occur when reading {@code storage}\u0027s nutrigoals.","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"        Optional\u003cReadOnlyNutriGoals\u003e nutriGoalsOptional;","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"xav168"},"content":"        ReadOnlyNutriGoals initialData;","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"            nutriGoalsOptional \u003d storage.readNutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"xav168"},"content":"            if (!nutriGoalsOptional.isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"xav168"},"content":"                logger.info(\"Data file not found. Will be starting with a sample NutriGoals\");","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"xav168"},"content":"            initialData \u003d nutriGoalsOptional.orElseGet(SampleDataUtil::getSampleNutriGoals);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"xav168"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty NutriGoals\");","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"xav168"},"content":"            initialData \u003d new NutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"xav168"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty NutriGoals\");","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"xav168"},"content":"            initialData \u003d new NutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"xav168"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty NutriGoals\");","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"xav168"},"content":"        logger.info(\"Starting NutriGoals \" + MainApp.VERSION);","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"xav168"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping NutriGoals ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruiqi7":1,"xav168":43,"-":139}},{"path":"src/main/java/seedu/nutrigoals/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":1,"-":62}},{"path":"src/main/java/seedu/nutrigoals/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":1,"-":78}},{"path":"src/main/java/seedu/nutrigoals/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    private static final String LOG_FILE \u003d \"nutrigoals.log\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":2,"-":110}},{"path":"src/main/java/seedu/nutrigoals/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"    public static final String MESSAGE_INVALID_MEAL_DISPLAYED_INDEX \u003d \"The meal index provided is invalid\";","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"    public static final String MESSAGE_MEALS_LISTED_OVERVIEW \u003d \"%1$d meals listed!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"    public static final String MESSAGE_MULTIPLE_TAGS_ERROR \u003d \"Each prefix should only be used once!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xav168":4,"-":10}},{"path":"src/main/java/seedu/nutrigoals/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":1,"-":115}},{"path":"src/main/java/seedu/nutrigoals/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.core.index;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"xav168":1,"-":53}},{"path":"src/main/java/seedu/nutrigoals/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":1,"-":10}},{"path":"src/main/java/seedu/nutrigoals/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xav168":1,"-":20}},{"path":"src/main/java/seedu/nutrigoals/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xav168":2,"-":40}},{"path":"src/main/java/seedu/nutrigoals/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xav168":1,"-":34}},{"path":"src/main/java/seedu/nutrigoals/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.Config;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xav168":3,"-":20}},{"path":"src/main/java/seedu/nutrigoals/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":1,"-":82}},{"path":"src/main/java/seedu/nutrigoals/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":3,"-":140}},{"path":"src/main/java/seedu/nutrigoals/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":2,"-":66}},{"path":"src/main/java/seedu/nutrigoals/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"     * Returns the NutriGoals.","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"     * @see seedu.nutrigoals.model.Model#getNutriGoals()","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"    ReadOnlyNutriGoals getNutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"    ObservableList\u003cFood\u003e getFilteredFoodList();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"     * Returns the user prefs\u0027 nutrigoals file path.","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"    Path getNutriGoalsFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xav168":13,"-":37}},{"path":"src/main/java/seedu/nutrigoals/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.NutriGoalsParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.storage.Storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    private final NutriGoalsParser nutriGoalsParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"        nutriGoalsParser \u003d new NutriGoalsParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        Command command \u003d nutriGoalsParser.parseCommand(commandText);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"            storage.saveNutriGoals(model.getNutriGoals());","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"    public ReadOnlyNutriGoals getNutriGoals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"        return model.getNutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"    public ObservableList\u003cFood\u003e getFilteredFoodList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"AkkFiros"},"content":"        return model.getFilteredFoodList();","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"    public Path getNutriGoalsFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"        return model.getNutriGoalsFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"AkkFiros":1,"xav168":21,"-":59}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":" * Adds a Meal to NutriGoals.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"AkkFiros"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a food to the tracker. \"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"AkkFiros"},"content":"            + PREFIX_CALORIE + \"CALORIES \"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"            + PREFIX_TAG + \"TAG...\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"AkkFiros"},"content":"            + PREFIX_NAME + \"Banana \"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"AkkFiros"},"content":"            + PREFIX_CALORIE + \"50 \"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"AkkFiros"},"content":"            + PREFIX_TAG + \"breakfast\";","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New food item added!\\n\\n%1$s\";","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"    private final Food toAdd;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"     * Creates an AddCommand to add the specified {@code Food}","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"    public AddCommand(Food food) {","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"        requireNonNull(food);","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"        toAdd \u003d food;","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"AkkFiros"},"content":"        model.addFood(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AkkFiros":6,"xav168":9,"nicolelim02":6,"-":34}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Nutrigoals has been cleared!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"        model.setNutriGoals(new NutriGoals());","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xav168":5,"-":18}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xav168":3,"-":17}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xav168":1,"-":70}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":" * Deletes a meal identified using it\u0027s displayed index from the food list.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"            + \": Deletes the meal identified by the index number used in the displayed meal list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"    public static final String MESSAGE_DELETE_MEAL_SUCCESS \u003d \"Food item deleted!\\n\\n%1$s\";","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"AkkFiros"},"content":"        List\u003cFood\u003e lastShownList \u003d model.getFilteredFoodList();","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEAL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"        Food foodToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"AkkFiros"},"content":"        model.deleteFood(foodToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEAL_SUCCESS, foodToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AkkFiros":2,"xav168":10,"nicolelim02":2,"-":39}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.DateTime;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":" * Edits the details of an existing meal in the food list.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the food identified \"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"            + \"by the index number used in the displayed food list. \"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"            + \"[\" + PREFIX_CALORIE + \"CALORIE] \"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"            + PREFIX_NAME + \"Bread \"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"            + PREFIX_CALORIE + \"150\";","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"    public static final String MESSAGE_EDIT_FOOD_SUCCESS \u003d \"Food item edited!\\n\\n%1$s\";","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"    private final EditFoodDescriptor editFoodDescriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"     * @param index of the meal in the filtered meal list to edit","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"     * @param editFoodDescriptor details to edit the meal with","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"    public EditCommand(Index index, EditFoodDescriptor editFoodDescriptor) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"        requireNonNull(editFoodDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"        this.editFoodDescriptor \u003d new EditFoodDescriptor(editFoodDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"AkkFiros"},"content":"        List\u003cFood\u003e lastShownList \u003d model.getFilteredFoodList();","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEAL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"        Food foodToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"        Food editedFood \u003d createEditedFood(foodToEdit, editFoodDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"AkkFiros"},"content":"        model.setFood(foodToEdit, editedFood);","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"ruiqi7"},"content":"        model.updateFilteredFoodList(model.getDatePredicate());","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"nicolelim02"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_FOOD_SUCCESS, editedFood));","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"     * Creates and returns a {@code Food} with the details of {@code foodToEdit}","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"     * edited with {@code editFoodDescriptor}.","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"nicolelim02"},"content":"    private static Food createEditedFood(Food foodToEdit, EditFoodDescriptor editFoodDescriptor) {","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"nicolelim02"},"content":"        assert foodToEdit !\u003d null;","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"nicolelim02"},"content":"        Name updatedName \u003d editFoodDescriptor.getName().orElse(foodToEdit.getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"nicolelim02"},"content":"        Calorie updatedCalorie \u003d editFoodDescriptor.getCalorie().orElse(foodToEdit.getCalorie());","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"nicolelim02"},"content":"        Tag updatedTag \u003d editFoodDescriptor.getTag().orElse(foodToEdit.getTag());","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"nicolelim02"},"content":"        return new Food(updatedName, updatedCalorie, updatedTag, foodToEdit.getDateTime());","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":104,"author":{"gitId":"nicolelim02"},"content":"                \u0026\u0026 editFoodDescriptor.equals(e.editFoodDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"xav168"},"content":"     * Stores the details to edit the food with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"xav168"},"content":"     * corresponding field value of the food.","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"nicolelim02"},"content":"    public static class EditFoodDescriptor {","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"nicolelim02"},"content":"        private Calorie calorie;","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"nicolelim02"},"content":"        private Tag tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"ruiqi7"},"content":"        private DateTime dateTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"nicolelim02"},"content":"        public EditFoodDescriptor() {}","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"nicolelim02"},"content":"        /**","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"nicolelim02"},"content":"         * Constructor for unit tests","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"nicolelim02"},"content":"         *","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"nicolelim02"},"content":"         * @param name    Food name","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"nicolelim02"},"content":"         * @param calorie Calorie content","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"nicolelim02"},"content":"         * @param tagName     Food tags","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"nicolelim02"},"content":"         */","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"nicolelim02"},"content":"        public EditFoodDescriptor(String name, String calorie, String tagName) {","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"nicolelim02"},"content":"            this.name \u003d new Name(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"nicolelim02"},"content":"            this.calorie \u003d new Calorie(calorie);","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"nicolelim02"},"content":"            this.tag \u003d new Tag(tagName);","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":136,"author":{"gitId":"nicolelim02"},"content":"        public EditFoodDescriptor(EditFoodDescriptor toCopy) {","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":138,"author":{"gitId":"nicolelim02"},"content":"            setCalorie(toCopy.calorie);","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"nicolelim02"},"content":"            setTag(toCopy.tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"ruiqi7"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"nicolelim02"},"content":"            return CollectionUtil.isAnyNonNull(name, calorie, tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"nicolelim02"},"content":"        public void setCalorie(Calorie calorie) {","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"nicolelim02"},"content":"            this.calorie \u003d calorie;","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"nicolelim02"},"content":"        public Optional\u003cCalorie\u003e getCalorie() {","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"nicolelim02"},"content":"            return Optional.ofNullable(calorie);","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"nicolelim02"},"content":"        public void setTag(Tag tag) {","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"nicolelim02"},"content":"            this.tag \u003d tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"nicolelim02"},"content":"        public Optional\u003cTag\u003e getTag() {","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"nicolelim02"},"content":"            // return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"nicolelim02"},"content":"            return Optional.ofNullable(tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"ruiqi7"},"content":"        public void setDateTime(DateTime dateTime) {","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"ruiqi7"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"nicolelim02"},"content":"            if (!(other instanceof EditFoodDescriptor)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"nicolelim02"},"content":"            EditFoodDescriptor e \u003d (EditFoodDescriptor) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"nicolelim02"},"content":"                    \u0026\u0026 getTag().equals(e.getTag())","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"nicolelim02"},"content":"                    \u0026\u0026 getCalorie().equals(e.getCalorie());","lastModifiedDate":"2022-10-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"AkkFiros":2,"ruiqi7":8,"xav168":21,"nicolelim02":58,"-":120}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting NutriGoals as requested ...\";","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"xav168":3,"-":16}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":" * Finds and displays the calorie content of the specified food (if any).","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":" * Food name matching is case insensitive.","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds and displays the calorie content of the \"","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"            + \"specified food\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"            + \"Parameters: FOOD\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"            + \"Example: \" + COMMAND_WORD + \" rice\";","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"    public static final String MESSAGE_FIND_FOOD_CALORIE_SUCCESS \u003d \"Calorie content of %1$s: %2$s\";","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"    public static final String MESSAGE_FOOD_CALORIES_NOT_FOUND \u003d \"No calorie content information for %1$s\";","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"    private final Name foodName;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"     * Creates a FindCommand to find the calorie content of the given food.","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"     * @param foodName The {@code Name} of the food to find the calorie content of.","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"    public FindCommand(Name foodName) {","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"        Map\u003cName, Calorie\u003e foodCalorieList \u003d model.getFoodCalorieList();","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"ruiqi7"},"content":"        if (!foodCalorieList.containsKey(foodName)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"            throw new CommandException(String.format(MESSAGE_FOOD_CALORIES_NOT_FOUND, foodName));","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"        Calorie calorie \u003d foodCalorieList.get(foodName);","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"        return new CommandResult(String.format(MESSAGE_FIND_FOOD_CALORIE_SUCCESS, foodName, calorie));","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"                \u0026\u0026 foodName.equals(((FindCommand) other).foodName)); // state check","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ruiqi7":29,"xav168":2,"-":24}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xav168":2,"-":19}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.IsFoodAddedOnThisDatePredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":" * Lists all foods saved in NutriGoals, sorted by meal type and time added.","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"            + \": Lists all the foods added on a specific date.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"            + \"Parameters: [DATE (must be in this format: yyyy-MM-dd)]\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2022-10-11\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all foods on %s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"    public static final String MESSAGE_EMPTY_FOOD_LIST \u003d \"No food recorded on %s\";","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"    private final IsFoodAddedOnThisDatePredicate predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"     * Creates a ListCommand to list all food items on a particular day.","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"     * @param predicate The predicate containing the date to filter the list of foods for.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"    public ListCommand(IsFoodAddedOnThisDatePredicate predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"        model.updateFilteredFoodList(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"        if (model.isFilteredFoodListEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"            return new CommandResult(String.format(MESSAGE_EMPTY_FOOD_LIST, predicate.getDate()));","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"ruiqi7"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, predicate.getDate()));","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruiqi7":23,"xav168":2,"-":17}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/LocateGymCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanPingZhi"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"TanPingZhi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.model.Location;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"TanPingZhi"},"content":" * Finds the closest 3 gyms to a faculty in NUS.","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"public class LocateGymCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"    public static final String COMMAND_WORD \u003d \"locate\";","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"AkkFiros"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"TanPingZhi"},"content":"        + \": Finds the nearest gym to your stated location\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"        + \"Parameters: [COM2 | S13 | S17 | CLB | USC | LT1 | AS6]\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"        + \"Example: \" + COMMAND_WORD + \" CLB\";","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"TanPingZhi"},"content":"    public static final String MESSAGE_LOCATE_SUCCESS \u003d \"Gyms (closest to furthest): \\n%s\";","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"    public final Location currentLocation;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"TanPingZhi"},"content":"    public LocateGymCommand(Location currentLocation) {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"TanPingZhi"},"content":"        this.currentLocation \u003d currentLocation;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"TanPingZhi"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"TanPingZhi"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"TanPingZhi"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"TanPingZhi"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"TanPingZhi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"TanPingZhi"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"TanPingZhi"},"content":"        List\u003cLocation\u003e nusGymLocations \u003d model.getNusGymLocations();","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"TanPingZhi"},"content":"        nusGymLocations.sort((l1, l2) -\u003e l1.distTo(currentLocation).compareTo(l2.distTo(currentLocation)));","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"TanPingZhi"},"content":"        StringBuilder sortedGyms \u003d new StringBuilder();","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TanPingZhi"},"content":"        for (int i \u003d 0; i \u003c Math.min(nusGymLocations.size(), 10); i++) {","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"TanPingZhi"},"content":"            sortedGyms.append(i + 1).append(\": \").append(nusGymLocations.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"TanPingZhi"},"content":"        return new CommandResult(String.format(MESSAGE_LOCATE_SUCCESS, sortedGyms));","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"TanPingZhi"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"AkkFiros":1,"TanPingZhi":43}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/ProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":" * Displays the user\u0027s details","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"public class ProfileCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"    public static final String COMMAND_WORD \u003d \"profile\";","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are your details: \\n%s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"    public static final String MESSAGE_NO_PROFILE_CREATED \u003d \"No profile created.\\nPlease create one before proceeding!\";","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"        if (!model.isUserCreated()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"            throw new CommandException(MESSAGE_NO_PROFILE_CREATED);","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, model.getUserDetails()));","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"nicolelim02":33}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/ReviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.DateTime;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.IsFoodAddedOnThisDatePredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":" * Provides a summary of the user\u0027s daily calorie intake, target calorie and the calorie deficiency or excess.","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"public class ReviewCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"    public static final String COMMAND_WORD \u003d \"review\";","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"    public static final String MESSAGE_REVIEW_DETAILS \u003d \"Your calorie intake for today: %1$d\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"            + \"Your calorie target for today: %2$d\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"            + \"%3$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"    public static final String MESSAGE_CALORIE_DEFICIENCY \u003d \"You should consume %1$d more calorie(s) to reach your \"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"            + \"calorie target for today!\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"    public static final String MESSAGE_CALORIE_EXCESS \u003d \"You have consumed %1$d more calorie(s) than your calorie \"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"            + \"target for today!\";","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"    public static final String MESSAGE_CALORIE_SUFFICIENCY \u003d \"You have reached your calorie target for today!\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"        DateTime today \u003d new DateTime();","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"        model.updateFilteredFoodList(new IsFoodAddedOnThisDatePredicate(today));","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"        int calorieCount \u003d model.getTotalCalorie().getCalorieValue();","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"        int difference \u003d model.getCalorieDifference();","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"        int calorieTarget \u003d model.getCalorieTarget().getCalorieValue();","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"        String calorieStatus;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"        if (difference \u003e 0) {","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"            calorieStatus \u003d String.format(MESSAGE_CALORIE_DEFICIENCY, difference);","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"        } else if (difference \u003c 0) {","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"            calorieStatus \u003d String.format(MESSAGE_CALORIE_EXCESS, -difference);","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"ruiqi7"},"content":"            calorieStatus \u003d MESSAGE_CALORIE_SUFFICIENCY;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"        return new CommandResult(String.format(MESSAGE_REVIEW_DETAILS, calorieCount, calorieTarget, calorieStatus));","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ruiqi7":39,"nicolelim02":6}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/SetupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_IDEAL_WEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":" * Sets up user profile in NutriGoals","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"public class SetupCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"    public static final String COMMAND_WORD \u003d \"setup\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets up the users profile for the tracker. \\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"            + PREFIX_GENDER + \"Gender \"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"            + PREFIX_HEIGHT + \"Height \"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"            + PREFIX_WEIGHT + \"Weight \"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"            + PREFIX_IDEAL_WEIGHT + \"Ideal Weight \"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"            + PREFIX_AGE + \"Age\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"            + PREFIX_HEIGHT + \"170 \"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"            + PREFIX_WEIGHT + \"70 \"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"            + PREFIX_IDEAL_WEIGHT + \"65 \"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"            + PREFIX_AGE + \"20\";","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully set up user profile\\n %s\";","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"    private final User user;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"     * Creates a SetupCommand for the user","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"     * @param user","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"    public SetupCommand(User user) {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        requireNonNull(user);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"        this.user \u003d user;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"        model.setUserDetails(user);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"                String.format(MESSAGE_SUCCESS, model.getUserDetails())","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"                || (other instanceof SetupCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"                \u0026\u0026 this.user.equals(((SetupCommand) other).user));","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":58,"nicolelim02":6}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/SuggestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":" * Suggests a recommended daily calorie intake based on the user\u0027s profile","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"public class SuggestCommand extends Command {","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"    public static final String COMMAND_WORD \u003d \"suggest\";","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"    public static final String MESSAGE_SUGGEST_DETAILS \u003d \"Your suggested daily calorie intake to achieve \"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"            + \"your ideal weight is: %1$s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"    public static final String MESSAGE_NO_PROFILE_CREATED \u003d \"Please set up your profile before proceeding!\";","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"        if (!model.isUserCreated()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"            throw new CommandException(MESSAGE_NO_PROFILE_CREATED);","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"        Calorie suggestedCalorieIntake \u003d model.calculateSuggestedCalorie();","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"        return new CommandResult(String.format(MESSAGE_SUGGEST_DETAILS, suggestedCalorieIntake));","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"nicolelim02":27}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/TargetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":" * Adds a calorie target for the user in the application","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"TanPingZhi"},"content":"public class TargetCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"    public static final String COMMAND_WORD \u003d \"target\";","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"Sets a daily calorie target intake\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"TanPingZhi"},"content":"        + \"Parameters: [Integer]\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"TanPingZhi"},"content":"        + \"Example: \" + COMMAND_WORD + \" 5000\";","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"    public static final String MESSAGE_TARGET_SET_SUCCESS \u003d \"Your calorie target set: %1$s\";","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"TanPingZhi"},"content":"    private final Calorie calorieTarget;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"    public TargetCommand(Calorie calorie) {","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"TanPingZhi"},"content":"        this.calorieTarget \u003d calorie;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"TanPingZhi"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"TanPingZhi"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"TanPingZhi"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"TanPingZhi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"TanPingZhi"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"TanPingZhi"},"content":"        model.setCalorieTarget(this.calorieTarget);","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"TanPingZhi"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"TanPingZhi"},"content":"            String.format(MESSAGE_TARGET_SET_SUCCESS, model.getCalorieTarget())","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"TanPingZhi"},"content":"        );","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"TanPingZhi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"TanPingZhi"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"TanPingZhi"},"content":"            || (other instanceof TargetCommand","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"TanPingZhi"},"content":"            \u0026\u0026 this.calorieTarget.equals(((TargetCommand) other).calorieTarget));","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"TanPingZhi"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"xav168":4,"TanPingZhi":43}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/TipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AkkFiros"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"AkkFiros"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"AkkFiros"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"AkkFiros"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Tip;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"AkkFiros"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"AkkFiros"},"content":" * Returns a fitness/dieting tip to the user.","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"AkkFiros"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"AkkFiros"},"content":"public class TipCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"AkkFiros"},"content":"    public static final String COMMAND_WORD \u003d \"tip\";","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"AkkFiros"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"AkkFiros"},"content":"            + \": displays a healthy-living tip\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"AkkFiros"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"AkkFiros"},"content":"    public static final String TIP_GENERATED_SUCCESS \u003d \"Here\u0027s your tip:\\n%1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"AkkFiros"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"AkkFiros"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"AkkFiros"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"        Tip randomTip \u003d model.getTip();","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"AkkFiros"},"content":"        return new CommandResult(String.format(TIP_GENERATED_SUCCESS, randomTip));","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"AkkFiros"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"AkkFiros"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"AkkFiros":25,"nicolelim02":2}},{"path":"src/main/java/seedu/nutrigoals/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"xav168":1,"-":16}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"AkkFiros"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CALORIE, PREFIX_TAG);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_CALORIE, PREFIX_TAG)","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"AkkFiros"},"content":"        Calorie calorie \u003d ParserUtil.parseCalorie(argMultimap.getValue(PREFIX_CALORIE).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"        Tag tag \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"        Food food \u003d new Food(name, calorie, tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"        return new AddCommand(food);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"AkkFiros":2,"xav168":11,"nicolelim02":4,"-":36}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_MULTIPLE_TAGS_ERROR;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"    public void put(Prefix prefix, String argValue) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"        if (argValues.size() \u003e 0) {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"            throw new ParseException(MESSAGE_MULTIPLE_TAGS_ERROR);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"xav168":11,"-":60}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_MULTIPLE_TAGS_ERROR;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"xav168"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions)","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"xav168"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"xav168"},"content":"            try {","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"xav168"},"content":"            } catch (ParseException p) {","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"xav168"},"content":"                throw new ParseException(MESSAGE_MULTIPLE_TAGS_ERROR);","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"xav168"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"xav168":14,"-":146}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"AkkFiros"},"content":"    public static final Prefix PREFIX_CALORIE \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"    public static final Prefix PREFIX_HEIGHT \u003d new Prefix(\"h/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"    public static final Prefix PREFIX_WEIGHT \u003d new Prefix(\"w/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"    public static final Prefix PREFIX_IDEAL_WEIGHT \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"a/\");","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"AkkFiros":1,"xav168":5,"nicolelim02":1,"-":10}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"xav168":5,"-":24}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"    private static final Prefix PREFIX_CALORIE \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CALORIE, PREFIX_TAG);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"        EditFoodDescriptor editFoodDescriptor \u003d new EditFoodDescriptor();","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"            editFoodDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"        if (argMultimap.getValue(PREFIX_CALORIE).isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"            editFoodDescriptor.setCalorie(ParserUtil.parseCalorie(argMultimap.getValue(PREFIX_CALORIE).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"            parseTagForEdit(argMultimap.getValue(PREFIX_TAG).get()).ifPresent(editFoodDescriptor::setTag);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"        if (!editFoodDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"        return new EditCommand(index, editFoodDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"nicolelim02"},"content":"    private Optional\u003cTag\u003e parseTagForEdit(String tag) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"        return Optional.ofNullable(ParserUtil.parseTag(tag));","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"xav168":9,"nicolelim02":17,"-":44}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.FindCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"        Name name \u003d ParserUtil.parseName(args.toLowerCase());","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"        return new FindCommand(name);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ruiqi7":6,"xav168":3,"-":16}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.logic.commands.ListCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.DateTime;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.IsFoodAddedOnThisDatePredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"            DateTime dateToday \u003d new DateTime();","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"            return new ListCommand(new IsFoodAddedOnThisDatePredicate(dateToday));","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"            DateTime date \u003d ParserUtil.parseDate(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"            return new ListCommand(new IsFoodAddedOnThisDatePredicate(date));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ruiqi7":32}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/LocateGymCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanPingZhi"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.logic.commands.LocateGymCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.model.Location;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":" *","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"TanPingZhi"},"content":"public class LocateGymCommandParser implements Parser\u003cLocateGymCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"     * Parses the given {@code String} of arguments in the context of the LocateGymCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"     * and returns an LocateGymCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"TanPingZhi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"    public LocateGymCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"TanPingZhi"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"            Location location \u003d ParserUtil.parseLocation(args);","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"TanPingZhi"},"content":"            return new LocateGymCommand(location);","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"TanPingZhi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"TanPingZhi"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"AkkFiros"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, LocateGymCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"TanPingZhi"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"AkkFiros":1,"TanPingZhi":28}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/NutriGoalsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.FindCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.ListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.logic.commands.LocateGymCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.logic.commands.ProfileCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.logic.commands.ReviewCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.SetupCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.logic.commands.SuggestCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.TargetCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"AkkFiros"},"content":"import seedu.nutrigoals.logic.commands.TipCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"public class NutriGoalsParser {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"ruiqi7"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"TanPingZhi"},"content":"        case TargetCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"TanPingZhi"},"content":"            return new TargetCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"        case SetupCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"xav168"},"content":"            return new SetupCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"ruiqi7"},"content":"        case ReviewCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"ruiqi7"},"content":"            return new ReviewCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"nicolelim02"},"content":"        case SuggestCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"nicolelim02"},"content":"            return new SuggestCommand();","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"TanPingZhi"},"content":"        case LocateGymCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"TanPingZhi"},"content":"            return new LocateGymCommandParser().parse(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"nicolelim02"},"content":"        case ProfileCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"nicolelim02"},"content":"            return new ProfileCommand();","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"AkkFiros"},"content":"        case TipCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"AkkFiros"},"content":"            return new TipCommand();","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AkkFiros":4,"ruiqi7":5,"xav168":21,"TanPingZhi":5,"nicolelim02":9,"-":59}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"xav168":3,"-":13}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"TanPingZhi"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.model.Location;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.DateTime;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.user.Age;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Height;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Weight;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"    public static final String DEFAULT_TIME \u003d \"T00:00:00\";","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":86,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"xav168"},"content":"     * Parses {@code String calorie} into a {@code Calorie}","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"TanPingZhi"},"content":"     * @param calorie Calorie","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"TanPingZhi"},"content":"     * @return Calorie","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"TanPingZhi"},"content":"     * @throws ParseException if the given {@code calorie} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"TanPingZhi"},"content":"    public static Calorie parseCalorie(String calorie) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"TanPingZhi"},"content":"        requireNonNull(calorie);","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"TanPingZhi"},"content":"        String trimmedCalorie \u003d calorie.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"TanPingZhi"},"content":"        if (!Calorie.isValidCalorie(trimmedCalorie)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"TanPingZhi"},"content":"            throw new ParseException(Calorie.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"TanPingZhi"},"content":"        return new Calorie(trimmedCalorie);","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"TanPingZhi"},"content":"     * Parses {@code String locationName} into a {@code Location}","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"TanPingZhi"},"content":"     * @param locationName name of location","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"TanPingZhi"},"content":"     * @return Location","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"TanPingZhi"},"content":"     * @throws ParseException if the given {@code locationName} is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"TanPingZhi"},"content":"    public static Location parseLocation(String locationName) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"TanPingZhi"},"content":"        requireNonNull(locationName);","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"TanPingZhi"},"content":"        String trimmedLocationName \u003d locationName.trim().toUpperCase();","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"TanPingZhi"},"content":"        Map\u003cString, Location\u003e out \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"TanPingZhi"},"content":"        // ANY UPDATES HERE SHOULD UPDATE LOCATE\u0027S MESSAGE_USAGE SORRY FOR COUPLING","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"TanPingZhi"},"content":"        // https://goo.gl/maps/8a2h8ciNGcc2DUxs8","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"TanPingZhi"},"content":"        out.put(\"COM2\", new Location(\"COM2\", \"1.2942815638814327, 103.77410024788284\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"TanPingZhi"},"content":"        // https://goo.gl/maps/TJQd8dfRYovJe8Va7","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"TanPingZhi"},"content":"        out.put(\"S13\", new Location(\"S13\", \"1.2968733957422691, 103.7790094606027\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"TanPingZhi"},"content":"        // https://goo.gl/maps/MgTnNAnMCVqokPqx9","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"TanPingZhi"},"content":"        out.put(\"S17\", new Location(\"S17\", \"1.2976996370988612, 103.78060787462833\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"TanPingZhi"},"content":"        // https://goo.gl/maps/2Zxpi6xsmfUNzU2h7","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"TanPingZhi"},"content":"        out.put(\"CLB\", new Location(\"CLB\", \"1.296642317024345, 103.77322870790687\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"TanPingZhi"},"content":"        // https://goo.gl/maps/TBxRtewZLVCgkEdF6","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"TanPingZhi"},"content":"        out.put(\"USC\", new Location(\"UHC\", \"1.2991034341416665, 103.77639982958577\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"TanPingZhi"},"content":"        // https://goo.gl/maps/bURCv14zruYzxxNV9","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"TanPingZhi"},"content":"        out.put(\"LT1\", new Location(\"LT1\", \"1.299463315530677, 103.77114712647649\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"TanPingZhi"},"content":"        // https://goo.gl/maps/e8vnmt5FzS19NbNk8","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"TanPingZhi"},"content":"        out.put(\"LT9\", new Location(\"LT9\", \"1.2952456082872508, 103.77221840699619\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"TanPingZhi"},"content":"        // https://goo.gl/maps/EEWy1fTuFcBkqxT97","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"TanPingZhi"},"content":"        out.put(\"AS6\", new Location(\"AS6\", \"1.2955038493756006, 103.77324977312634\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":129,"author":{"gitId":"TanPingZhi"},"content":"        if (!out.containsKey(trimmedLocationName)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"TanPingZhi"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"TanPingZhi"},"content":"        return out.get(trimmedLocationName);","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"xav168"},"content":"     * Parses a {@code String gender} into a {@code Gender}","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"xav168"},"content":"     * @param gender gender of the user","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"xav168"},"content":"     * @return Gender","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"xav168"},"content":"     * @throws ParseException if the given {@code gender} is invalid","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"xav168"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"xav168"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"xav168"},"content":"        String trimmedGender \u003d gender.trim().toUpperCase();","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"xav168"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"xav168"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"xav168"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"xav168"},"content":"     * Parses a {@code String height} into a {@code Height}","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"xav168"},"content":"     * @param height height of the user","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"xav168"},"content":"     * @return Height","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"xav168"},"content":"     * @throws ParseException if the given {@code height} is invalid","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"xav168"},"content":"    public static Height parseHeight(String height) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"xav168"},"content":"        requireNonNull(height);","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"xav168"},"content":"        String trimmedHeight \u003d height.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"xav168"},"content":"        if (!Height.isValidHeight(trimmedHeight)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"xav168"},"content":"            throw new ParseException(Height.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"xav168"},"content":"        return new Height(trimmedHeight);","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"xav168"},"content":"     * Parses a {@code String weight} into a {@code Weight}","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"xav168"},"content":"     * @param weight weight of the user","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"xav168"},"content":"     * @return Weight","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"xav168"},"content":"     * @throws ParseException if the given {@code weight} is invalid","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"xav168"},"content":"    public static Weight parseWeight(String weight) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"xav168"},"content":"        requireNonNull(weight);","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"xav168"},"content":"        String trimmedWeight \u003d weight.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"xav168"},"content":"        if (!Weight.isValidWeight(trimmedWeight)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"xav168"},"content":"            throw new ParseException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"xav168"},"content":"        return new Weight(trimmedWeight);","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"ruiqi7"},"content":"     * Parses a {@code String date} into a {@code DateTime}.","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"ruiqi7"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"ruiqi7"},"content":"     * @param date The string representing the date to parse.","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"ruiqi7"},"content":"     * @return A {@code DateTime} representing the given {@code String date}.","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"ruiqi7"},"content":"     * @throws ParseException if the given {@code date} is not in the format: YYYY-MM-DD.","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"ruiqi7"},"content":"    public static DateTime parseDate(String date) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"ruiqi7"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"ruiqi7"},"content":"        String trimmedDateTime \u003d date.trim() + DEFAULT_TIME;","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"ruiqi7"},"content":"        if (!DateTime.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"ruiqi7"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"ruiqi7"},"content":"        return new DateTime(trimmedDateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"nicolelim02"},"content":"     * Parses a {@code String age} into a {@code Age}.","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"nicolelim02"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"nicolelim02"},"content":"     * @param age The string representing the age to parse.","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"nicolelim02"},"content":"     * @return A {@code Age} representing the given {@code String age}.","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"nicolelim02"},"content":"     * @throws ParseException if the given {@code age} is invalid","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":203,"author":{"gitId":"nicolelim02"},"content":"    public static Age parseAge(String age) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"nicolelim02"},"content":"        requireNonNull(age);","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"nicolelim02"},"content":"        String trimmedAge \u003d age.trim();","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"nicolelim02"},"content":"        if (!Age.isValidAge(trimmedAge)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":207,"author":{"gitId":"nicolelim02"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"nicolelim02"},"content":"        return new Age(trimmedAge);","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ruiqi7":17,"xav168":57,"TanPingZhi":50,"nicolelim02":17,"-":70}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"xav168":1,"-":38}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/SetupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_IDEAL_WEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.SetupCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.user.Age;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Height;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Weight;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":" * Parses input arguments and creates new SetupCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"public class SetupCommandParser implements Parser\u003cSetupCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"     * Parsers the given arguments and returns a {@code SetupCommand} object for execution","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"     * @param args arguments specified by the user","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"     * @return a SetupCommand for execution","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"     * @throws ParseException if the user input does not conform to the given format","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    public SetupCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_GENDER,","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"                PREFIX_HEIGHT, PREFIX_WEIGHT, PREFIX_IDEAL_WEIGHT, PREFIX_AGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_GENDER, PREFIX_HEIGHT, PREFIX_WEIGHT,","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"                PREFIX_IDEAL_WEIGHT, PREFIX_AGE)","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"                || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetupCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"        Gender gender \u003d ParserUtil.parseGender(argumentMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"        Weight weight \u003d ParserUtil.parseWeight(argumentMultimap.getValue(PREFIX_WEIGHT).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"        Weight idealWeight \u003d ParserUtil.parseWeight(argumentMultimap.getValue(PREFIX_IDEAL_WEIGHT).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"        Height height \u003d ParserUtil.parseHeight(argumentMultimap.getValue(PREFIX_HEIGHT).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"        Age age \u003d ParserUtil.parseAge(argumentMultimap.getValue(PREFIX_AGE).get());","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"        User user \u003d new User(gender, height, weight, idealWeight, age);","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"        return new SetupCommand(user);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":51,"nicolelim02":7}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/TargetCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.TargetCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":" * Parses input arguments and creates a new TargetCommand object","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"TanPingZhi"},"content":"public class TargetCommandParser implements Parser\u003cTargetCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"     * Parses the given {@code String} of arguments in the context of the TargetCommand","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"TanPingZhi"},"content":"     * and returns an TargetCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"TanPingZhi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"TanPingZhi"},"content":"    public TargetCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"TanPingZhi"},"content":"            Calorie calorie \u003d ParserUtil.parseCalorie(args);","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"TanPingZhi"},"content":"            return new TargetCommand(calorie);","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"TanPingZhi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"TanPingZhi"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, TargetCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"TanPingZhi"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"xav168":5,"TanPingZhi":24}},{"path":"src/main/java/seedu/nutrigoals/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"xav168":2,"-":15}},{"path":"src/main/java/seedu/nutrigoals/model/Calorie.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"TanPingZhi"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":" * Represents a calorie object","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"TanPingZhi"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"public class Calorie {","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":"        \"Calorie must take on a non negative number that is not too large.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"    public final String value;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"     * Initialises a Calorie object.","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"TanPingZhi"},"content":"    public Calorie() {","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"        this.value \u003d \"2000\";","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"TanPingZhi"},"content":"     * @param calorie","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"TanPingZhi"},"content":"    public Calorie(String calorie) {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"TanPingZhi"},"content":"        requireNonNull(calorie);","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"        checkArgument(isValidCalorie(calorie), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"TanPingZhi"},"content":"        value \u003d calorie;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"TanPingZhi"},"content":"     * Returns true if a given string is a valid calorie value.","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"TanPingZhi"},"content":"    public static boolean isValidCalorie(String calorie) {","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"TanPingZhi"},"content":"        if (!calorie.isEmpty() \u0026\u0026 calorie.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"TanPingZhi"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"                int calorieValue \u003d Integer.parseInt(calorie);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"TanPingZhi"},"content":"                return calorieValue \u003e\u003d 0;","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"TanPingZhi"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"TanPingZhi"},"content":"                return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"TanPingZhi"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"TanPingZhi"},"content":"        return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"     * Returns the calorie value as an integer.","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"     * @return the calorie value.","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"    public int getCalorieValue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"        return Integer.parseInt(value);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"     * Calculates the caloric difference","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"     * @param other Calorie to subtract","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"     * @return Caloric difference","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"    public int calculateDifference(Calorie other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"        int operand1 \u003d this.getCalorieValue();","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"        int operand2 \u003d other.getCalorieValue();","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"        int diff \u003d operand1 - operand2;","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"        return diff;","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"     * Adds up two calorie","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"     * @param other Calorie to add","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"     * @return Sum of two calorie","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"nicolelim02"},"content":"    public Calorie addCalorie(Calorie other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"nicolelim02"},"content":"        int operand1 \u003d this.getCalorieValue();","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"nicolelim02"},"content":"        int operand2 \u003d other.getCalorieValue();","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"nicolelim02"},"content":"        int sum \u003d operand1 + operand2;","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"nicolelim02"},"content":"        return new Calorie(Integer.toString(sum));","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"TanPingZhi"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"TanPingZhi"},"content":"        return value + \" calories\";","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"TanPingZhi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"TanPingZhi"},"content":"        if (other instanceof Calorie) {","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"TanPingZhi"},"content":"            return this.value.equals(((Calorie) other).value);","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"TanPingZhi"},"content":"        return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"TanPingZhi"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"ruiqi7":9,"xav168":3,"TanPingZhi":52,"nicolelim02":27}},{"path":"src/main/java/seedu/nutrigoals/model/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TanPingZhi"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"import static seedu.nutrigoals.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"TanPingZhi"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":" * Represents a Location object","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":"public class Location {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"TanPingZhi"},"content":"    // REGEX credit:","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"    // https://stackoverflow.com/questions/3518504/regular-expression-for-matching-latitude-longitude-coordinates","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"        \"^[-+]?([1-8]?\\\\d(\\\\.\\\\d+)?|90(\\\\.0+)?),\\\\s*[-+]?(180(\\\\.0+)?|((1[0-7]\\\\d)|([1-9]?\\\\d))(\\\\.\\\\d+)?)$\";","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"TanPingZhi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"TanPingZhi"},"content":"        \"Latitude and Longitude must take on a value in range [-90, 90] and [-180, 180] respectively\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"            + \"Values are separated by a comma\";","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"    public final String name;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"TanPingZhi"},"content":"    public final double latitude;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"    public final double longitude;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"TanPingZhi"},"content":"    Location() { // just for the purpose of serializing","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"TanPingZhi"},"content":"        this.name \u003d \"\";","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"TanPingZhi"},"content":"        this.latitude \u003d 0;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"        this.longitude \u003d 0;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"TanPingZhi"},"content":"     * @param value Latitude and Longitude","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"TanPingZhi"},"content":"    // Right now this is for developer\u0027s use and not for the user. so the parsing is not a big issue","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"TanPingZhi"},"content":"    public Location(String name, String value) {","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"TanPingZhi"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"TanPingZhi"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"TanPingZhi"},"content":"        checkArgument(isValidLocation(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"TanPingZhi"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"TanPingZhi"},"content":"        latitude \u003d Double.parseDouble(value.split(\", \")[0]);","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"TanPingZhi"},"content":"        longitude \u003d Double.parseDouble(value.split(\", \")[1]);","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"TanPingZhi"},"content":"     * @param other","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"TanPingZhi"},"content":"     * @return","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"TanPingZhi"},"content":"    public Double distTo(Location other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"TanPingZhi"},"content":"        var radius \u003d 6371; // Radius of the earth in km","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"TanPingZhi"},"content":"        var dLat \u003d deg2rad(other.latitude - this.latitude);","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"TanPingZhi"},"content":"        var dLon \u003d deg2rad(other.longitude - this.longitude);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"TanPingZhi"},"content":"        var a \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"TanPingZhi"},"content":"            Math.sin(dLat / 2.) * Math.sin(dLat / 2.0)","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"TanPingZhi"},"content":"                + Math.cos(deg2rad(this.latitude)) * Math.cos(deg2rad(other.latitude))","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"TanPingZhi"},"content":"                * Math.sin(dLon / 2.) * Math.sin(dLon / 2.0);","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"TanPingZhi"},"content":"        var c \u003d 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"TanPingZhi"},"content":"        var d \u003d radius * c; // Distance in km","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"TanPingZhi"},"content":"        return d;","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"TanPingZhi"},"content":"    private static double deg2rad(double degree) {","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"TanPingZhi"},"content":"        return degree * (Math.PI / 180);","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"TanPingZhi"},"content":"    private static boolean isValidLocation(String latAndLong) {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"TanPingZhi"},"content":"        return Optional.of(latAndLong)","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"TanPingZhi"},"content":"            .map(v -\u003e v.matches(VALIDATION_REGEX))","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"TanPingZhi"},"content":"            .orElse(false);","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"TanPingZhi"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"TanPingZhi"},"content":"        return name;","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"TanPingZhi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"TanPingZhi"},"content":"        if (other instanceof Location) {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"TanPingZhi"},"content":"            return this.latitude \u003d\u003d ((Location) other).latitude","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"TanPingZhi"},"content":"                \u0026\u0026 this.longitude \u003d\u003d ((Location) other).longitude;","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"TanPingZhi"},"content":"        return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"TanPingZhi"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"TanPingZhi":79}},{"path":"src/main/java/seedu/nutrigoals/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.IsFoodAddedOnThisDatePredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"    Predicate\u003cFood\u003e PREDICATE_SHOW_ALL_FOODS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"     * Returns the user prefs\u0027 food list","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"     * file path.","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"    Path getNutriGoalsFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"     * Sets the user prefs\u0027 food list","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"     * file path.","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"    void setNutriGoalsFilePath(Path nutriGoalsFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"     * Replaces food list","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"     * data with the data in {@code nutriGoals}.","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"    void setNutriGoals(ReadOnlyNutriGoals nutriGoals);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"    /** Returns the NutriGoals */","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"    ReadOnlyNutriGoals getNutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"TanPingZhi"},"content":"     * @param calorieTarget Sets the user\u0027s calorie target","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"TanPingZhi"},"content":"    void setCalorieTarget(Calorie calorieTarget);","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"TanPingZhi"},"content":"     * @return Calorie User\u0027s calorie target","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"TanPingZhi"},"content":"    Calorie getCalorieTarget();","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"ruiqi7"},"content":"     * Returns true if a food with the same identity as {@code food} exists in the food list.","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"AkkFiros"},"content":"    boolean hasFood(Food food);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"xav168"},"content":"     * Deletes the given food.","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"ruiqi7"},"content":"     * The food must exist in the food list.","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"AkkFiros"},"content":"    void deleteFood(Food target);","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"xav168"},"content":"     * Adds the given food.","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"ruiqi7"},"content":"     * {@code food} food to be added.","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"AkkFiros"},"content":"    void addFood(Food food);","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"xav168"},"content":"     * Replaces the given food {@code target} with {@code editedfood}.","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"ruiqi7"},"content":"     * {@code target} must exist in the food list.","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"ruiqi7"},"content":"     * The food identity of {@code editedfood} must not be the same as another existing food in the food list.","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"AkkFiros"},"content":"    void setFood(Food target, Food editedFood);","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"xav168"},"content":"    /** Returns an unmodifiable view of the filtered food list */","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"AkkFiros"},"content":"    ObservableList\u003cFood\u003e getFilteredFoodList();","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"xav168"},"content":"     * Updates the filter of the filtered food list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"AkkFiros"},"content":"    void updateFilteredFoodList(Predicate\u003cFood\u003e predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"xav168"},"content":"    void setUserDetails(User user);","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"xav168"},"content":"    User getUserDetails();","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"ruiqi7"},"content":"    /** Returns the most recent {@code IsFoodAddedOnThisDatePredicate} applied on the filtered food list */","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"ruiqi7"},"content":"    IsFoodAddedOnThisDatePredicate getDatePredicate();","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"ruiqi7"},"content":"    /** Returns true if the filtered food list has no food items */","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"ruiqi7"},"content":"    boolean isFilteredFoodListEmpty();","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"nicolelim02"},"content":"    Calorie calculateSuggestedCalorie();","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"TanPingZhi"},"content":"    List\u003cLocation\u003e getNusGymLocations();","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"nicolelim02"},"content":"    boolean isUserCreated();","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"nicolelim02"},"content":"    int getCalorieDifference();","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"nicolelim02"},"content":"    Calorie getTotalCalorie();","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"ruiqi7"},"content":"    /** Returns the {@code Map} of food items and their calorie content */","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"ruiqi7"},"content":"    Map\u003cName, Calorie\u003e getFoodCalorieList();","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"AkkFiros"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"AkkFiros"},"content":"     * Retrieves and returns a random tip from TIpList","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"AkkFiros"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"nicolelim02"},"content":"    Tip getTip();","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"AkkFiros":10,"ruiqi7":17,"xav168":25,"TanPingZhi":13,"nicolelim02":9,"-":59}},{"path":"src/main/java/seedu/nutrigoals/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"TanPingZhi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.DateTime;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.IsFoodAddedOnThisDatePredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":" * Represents the in-memory model of the nutrigoals data.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"    private final NutriGoals nutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"    private final FilteredList\u003cFood\u003e filteredFoods;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"    private IsFoodAddedOnThisDatePredicate currentDatePredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"     * Initializes a ModelManager with the given nutriGoals and userPrefs.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"    public ModelManager(ReadOnlyNutriGoals nutriGoals, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"        requireAllNonNull(nutriGoals, userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"        logger.fine(\"Initializing with NutriGoals: \" + nutriGoals + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"        this.nutriGoals \u003d new NutriGoals(nutriGoals);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"        filteredFoods \u003d new FilteredList\u003c\u003e(this.nutriGoals.getFoodList());","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"        currentDatePredicate \u003d new IsFoodAddedOnThisDatePredicate(new DateTime());","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"        updateFilteredFoodList(currentDatePredicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"        this(new NutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"    public Path getNutriGoalsFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"xav168"},"content":"        return userPrefs.getNutriGoalsFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"xav168"},"content":"    public void setNutriGoalsFilePath(Path nutriGoalsFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"xav168"},"content":"        requireNonNull(nutriGoalsFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"xav168"},"content":"        userPrefs.setNutriGoalsFilePath(nutriGoalsFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"xav168"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d NutriGoals \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"xav168"},"content":"    public void setNutriGoals(ReadOnlyNutriGoals nutriGoals) {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"xav168"},"content":"        this.nutriGoals.resetData(nutriGoals);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"xav168"},"content":"    public ReadOnlyNutriGoals getNutriGoals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"xav168"},"content":"        return nutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"TanPingZhi"},"content":"     * @param calorieTarget Sets the user\u0027s calorie target","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"TanPingZhi"},"content":"    public void setCalorieTarget(Calorie calorieTarget) {","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"TanPingZhi"},"content":"        requireNonNull(calorieTarget);","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"xav168"},"content":"        nutriGoals.setCalorieTarget(calorieTarget);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"TanPingZhi"},"content":"     * @return Calorie User\u0027s calorie target","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"TanPingZhi"},"content":"    public Calorie getCalorieTarget() {","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"xav168"},"content":"        return this.nutriGoals.getCalorieTarget();","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"AkkFiros"},"content":"    public boolean hasFood(Food food) {","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"nicolelim02"},"content":"        requireNonNull(food);","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"xav168"},"content":"        return nutriGoals.hasFood(food);","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"AkkFiros"},"content":"    public void deleteFood(Food target) {","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"xav168"},"content":"        nutriGoals.removeFood(target);","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"AkkFiros"},"content":"    public void addFood(Food food) {","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"xav168"},"content":"        nutriGoals.addFood(food);","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate predicate \u003d new IsFoodAddedOnThisDatePredicate(new DateTime());","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"ruiqi7"},"content":"        updateFilteredFoodList(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"AkkFiros"},"content":"    public void setFood(Food target, Food editedFood) {","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"nicolelim02"},"content":"        requireAllNonNull(target, editedFood);","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"xav168"},"content":"        nutriGoals.setFood(target, editedFood);","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"TanPingZhi"},"content":"    public List\u003cLocation\u003e getNusGymLocations() {","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"TanPingZhi"},"content":"        return this.nutriGoals.getGymLocations();","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"xav168"},"content":"     * {@code versionedNutriGoals}","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"AkkFiros"},"content":"    public ObservableList\u003cFood\u003e getFilteredFoodList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"nicolelim02"},"content":"        return filteredFoods;","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"AkkFiros"},"content":"    public void updateFilteredFoodList(Predicate\u003cFood\u003e predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":158,"author":{"gitId":"nicolelim02"},"content":"        filteredFoods.setPredicate(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"ruiqi7"},"content":"        if (predicate instanceof IsFoodAddedOnThisDatePredicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"ruiqi7"},"content":"            currentDatePredicate \u003d (IsFoodAddedOnThisDatePredicate) predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"ruiqi7"},"content":"     * Returns the most recent {@code IsFoodAddedOnThisDatePredicate} applied on the filtered food list.","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"ruiqi7"},"content":"     * @return The {@code IsFoodAddedOnThisDatePredicate} that was last applied on the filtered food list.","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"ruiqi7"},"content":"    public IsFoodAddedOnThisDatePredicate getDatePredicate() {","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"ruiqi7"},"content":"        return currentDatePredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":175,"author":{"gitId":"ruiqi7"},"content":"     * Checks if the filtered food list contains any food items.","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"ruiqi7"},"content":"     * @return True if the filtered food list contains no food items.","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"ruiqi7"},"content":"    public boolean isFilteredFoodListEmpty() {","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"ruiqi7"},"content":"        return filteredFoods.isEmpty();","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":183,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"xav168"},"content":"    public void setUserDetails(User user) {","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"xav168"},"content":"        requireNonNull(user);","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"xav168"},"content":"        nutriGoals.setUser(user);","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"xav168"},"content":"    public User getUserDetails() {","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"nicolelim02"},"content":"        return nutriGoals.getUser();","lastModifiedDate":"2022-10-15"},{"lineNumber":192,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":195,"author":{"gitId":"nicolelim02"},"content":"    public Calorie calculateSuggestedCalorie() {","lastModifiedDate":"2022-10-17"},{"lineNumber":196,"author":{"gitId":"nicolelim02"},"content":"        return nutriGoals.calculateSuggestedCalorie();","lastModifiedDate":"2022-10-17"},{"lineNumber":197,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"nicolelim02"},"content":"     * Checks if a profile has been created","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"nicolelim02"},"content":"     * @return True if a profile has been created, false otherwise","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":203,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"nicolelim02"},"content":"    public boolean isUserCreated() {","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"nicolelim02"},"content":"        return getUserDetails().isUserCreated();","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":207,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":209,"author":{"gitId":"nicolelim02"},"content":"    public int getCalorieDifference() {","lastModifiedDate":"2022-10-19"},{"lineNumber":210,"author":{"gitId":"nicolelim02"},"content":"        Calorie target \u003d nutriGoals.getCalorieTarget();","lastModifiedDate":"2022-10-19"},{"lineNumber":211,"author":{"gitId":"nicolelim02"},"content":"        Calorie actual \u003d filteredFoods.stream()","lastModifiedDate":"2022-10-19"},{"lineNumber":212,"author":{"gitId":"ruiqi7"},"content":"                .map(Food::getCalorie)","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"ruiqi7"},"content":"                .reduce(new Calorie(\"0\"), Calorie::addCalorie);","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"nicolelim02"},"content":"        return target.calculateDifference(actual);","lastModifiedDate":"2022-10-19"},{"lineNumber":215,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":216,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":217,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":218,"author":{"gitId":"nicolelim02"},"content":"    public Calorie getTotalCalorie() {","lastModifiedDate":"2022-10-19"},{"lineNumber":219,"author":{"gitId":"ruiqi7"},"content":"        return filteredFoods.stream()","lastModifiedDate":"2022-10-20"},{"lineNumber":220,"author":{"gitId":"ruiqi7"},"content":"                .map(Food::getCalorie)","lastModifiedDate":"2022-10-20"},{"lineNumber":221,"author":{"gitId":"ruiqi7"},"content":"                .reduce(new Calorie(\"0\"), Calorie::addCalorie);","lastModifiedDate":"2022-10-20"},{"lineNumber":222,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":223,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":224,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":225,"author":{"gitId":"ruiqi7"},"content":"    public Map\u003cName, Calorie\u003e getFoodCalorieList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":226,"author":{"gitId":"ruiqi7"},"content":"        return nutriGoals.getFoodCalorieList();","lastModifiedDate":"2022-10-20"},{"lineNumber":227,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":228,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"ruiqi7"},"content":"        return nutriGoals.equals(other.nutriGoals)","lastModifiedDate":"2022-10-20"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":245,"author":{"gitId":"ruiqi7"},"content":"            \u0026\u0026 filteredFoods.equals(other.filteredFoods)","lastModifiedDate":"2022-10-11"},{"lineNumber":246,"author":{"gitId":"ruiqi7"},"content":"            \u0026\u0026 currentDatePredicate.equals(other.currentDatePredicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":249,"author":{"gitId":"AkkFiros"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":250,"author":{"gitId":"nicolelim02"},"content":"    public Tip getTip() {","lastModifiedDate":"2022-10-24"},{"lineNumber":251,"author":{"gitId":"AkkFiros"},"content":"        return nutriGoals.getTip();","lastModifiedDate":"2022-10-21"},{"lineNumber":252,"author":{"gitId":"AkkFiros"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AkkFiros":10,"ruiqi7":44,"xav168":43,"TanPingZhi":20,"nicolelim02":30,"-":106}},{"path":"src/main/java/seedu/nutrigoals/model/NutriGoals.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"TanPingZhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.FoodCalorieList;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.FoodList;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":" * Wraps all data at the Nutrigoals level","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"public class NutriGoals implements ReadOnlyNutriGoals {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"    private final FoodList foods;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"    private final FoodCalorieList foodCalorieList;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"AkkFiros"},"content":"    private final TipList tipList;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"    private User user \u003d new User();","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"TanPingZhi"},"content":"    private Calorie calorieTarget \u003d new Calorie(); // defaults calorie to 2000 on the first edit to the book","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"TanPingZhi"},"content":"    private final List\u003cLocation\u003e nusGymsLocations;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"TanPingZhi"},"content":"    {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"        foods \u003d new FoodList();","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"TanPingZhi"},"content":"        nusGymsLocations \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"TanPingZhi"},"content":"            new Location(\"MPSH\", \"1.3007599674153045, 103.77578206094384\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"TanPingZhi"},"content":"            new Location(\"STEPHEN RIADY CENTRE\", \"1.304511666901411, 103.77205745840185\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"TanPingZhi"},"content":"            new Location(\"USC\", \"1.2998680145010344, 103.77528575803385\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"TanPingZhi"},"content":"            // https://goo.gl/maps/yHdjhHzPWx6eoRAAA","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"TanPingZhi"},"content":"            new Location(\"EUSOFF HALL\", \"1.2937696692719094, 103.77043696074193\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"TanPingZhi"},"content":"            // https://goo.gl/maps/5xx4jyh87QDcd83M8","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"TanPingZhi"},"content":"            new Location(\"TEMASEK HALL\", \"1.2930639982706684, 103.77084097639103\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"TanPingZhi"},"content":"            // https://goo.gl/maps/h4oQXbtMLyQeuPwM7","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"            new Location(\"KENT RIDGE HALL\", \"1.2918512226940035, 103.77477995285786\"))","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"TanPingZhi"},"content":"        );","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"        foodCalorieList \u003d new FoodCalorieList();","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"AkkFiros"},"content":"        tipList \u003d new TipList();","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"    public NutriGoals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"     * Creates NutriGoals using the Foods in the {@code toBeCopied}","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"    public NutriGoals(ReadOnlyNutriGoals toBeCopied) {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"xav168"},"content":"     * Replaces the contents of the food list with {@code foods}.","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"AkkFiros"},"content":"    public void setFoods(List\u003cFood\u003e foods) {","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"        this.foods.setFood(foods);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"     * Resets the existing data of this {@code NutriGoals} with {@code newData}.","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"    public void resetData(ReadOnlyNutriGoals newData) {","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"TanPingZhi"},"content":"        setCalorieTarget(newData.getCalorieTarget());","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"AkkFiros"},"content":"        setFoods(newData.getFoodList());","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"        setUser(newData.getUser());","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"TanPingZhi"},"content":"        setNusGymsLocations(newData.getGymLocations());","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"ruiqi7"},"content":"        setFoodCaloriesList(newData.getFoodCalorieList());","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"xav168"},"content":"    //// food-level operations","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"xav168"},"content":"     * Returns true if a food with the same name as {@code food} exists in the food list.","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"xav168"},"content":"    public boolean hasFood(Food food) {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"nicolelim02"},"content":"        requireNonNull(food);","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"AkkFiros"},"content":"        return foods.contains(food);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"xav168"},"content":"     * Adds a food item to the nutrigoals.","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"xav168"},"content":"    public void addFood(Food p) {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"AkkFiros"},"content":"        foods.add(p);","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"xav168"},"content":"     * Replaces the given food {@code target} in the list with {@code editedFood}.","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"xav168"},"content":"     * {@code target} must exist in the food list.","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"xav168"},"content":"    public void setFood(Food target, Food editedFood) {","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"nicolelim02"},"content":"        requireNonNull(editedFood);","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"xav168"},"content":"        foods.setFood(target, editedFood);","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"xav168"},"content":"     * Removes {@code key} from this {@code NutriGoal}.","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"xav168"},"content":"     * {@code key} must exist in the food list.","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"AkkFiros"},"content":"    public void removeFood(Food key) {","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"AkkFiros"},"content":"        foods.remove(key);","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"TanPingZhi"},"content":"    public void setCalorieTarget(Calorie calorie) {","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"TanPingZhi"},"content":"        requireNonNull(calorie);","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"TanPingZhi"},"content":"        this.calorieTarget \u003d calorie;","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"xav168"},"content":"    public void setUser(User user) {","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"xav168"},"content":"        requireNonNull(user);","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"xav168"},"content":"        this.user \u003d user;","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"ruiqi7"},"content":"    public void setFoodCaloriesList(Map\u003cName, Calorie\u003e foodCaloriesList) {","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"ruiqi7"},"content":"        requireNonNull(foodCaloriesList);","lastModifiedDate":"2022-10-18"},{"lineNumber":131,"author":{"gitId":"ruiqi7"},"content":"        this.foodCalorieList.setFoodCalorieMapping(foodCaloriesList);","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":133,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"ruiqi7"},"content":"    public ObservableList\u003cFood\u003e getFoodList() {","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"ruiqi7"},"content":"        return foods.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-18"},{"lineNumber":137,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"nicolelim02"},"content":"    public Calorie calculateSuggestedCalorie() {","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"nicolelim02"},"content":"        return user.calculateSuggestedCalorieIntake();","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"TanPingZhi"},"content":"    public void setNusGymsLocations(List\u003cLocation\u003e nusGymsLocations) {","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"TanPingZhi"},"content":"        requireNonNull(nusGymsLocations);","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"TanPingZhi"},"content":"        this.nusGymsLocations.clear();","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"TanPingZhi"},"content":"        this.nusGymsLocations.addAll(nusGymsLocations);","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"TanPingZhi"},"content":"    public List\u003cLocation\u003e getGymLocations() {","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"TanPingZhi"},"content":"        return new ArrayList\u003c\u003e(this.nusGymsLocations); // #defensive-programming","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"TanPingZhi"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"TanPingZhi"},"content":"     * @return Calorie","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"TanPingZhi"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"TanPingZhi"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"TanPingZhi"},"content":"    public Calorie getCalorieTarget() {","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"TanPingZhi"},"content":"        return this.calorieTarget;","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"ruiqi7"},"content":"    public User getUser() {","lastModifiedDate":"2022-10-18"},{"lineNumber":164,"author":{"gitId":"ruiqi7"},"content":"        return user;","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"ruiqi7"},"content":"    public Map\u003cName, Calorie\u003e getFoodCalorieList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"ruiqi7"},"content":"        return foodCalorieList.asUnmodifiableMap();","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":171,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":172,"author":{"gitId":"AkkFiros"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"nicolelim02"},"content":"    public Tip getTip() {","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"AkkFiros"},"content":"        return tipList.generateTip();","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"AkkFiros"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"xav168"},"content":"        return foods.asUnmodifiableObservableList().size() + \" foods\";","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"xav168"},"content":"            || (other instanceof NutriGoals // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"xav168"},"content":"            \u0026\u0026 foods.equals(((NutriGoals) other).foods)","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"xav168"},"content":"            \u0026\u0026 this.calorieTarget.equals(((NutriGoals) other).calorieTarget)","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"ruiqi7"},"content":"            \u0026\u0026 this.user.equals(((NutriGoals) other).user)","lastModifiedDate":"2022-10-18"},{"lineNumber":192,"author":{"gitId":"ruiqi7"},"content":"            \u0026\u0026 this.foodCalorieList.equals(((NutriGoals) other).foodCalorieList));","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"AkkFiros"},"content":"        return foods.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AkkFiros":13,"ruiqi7":30,"xav168":36,"TanPingZhi":44,"nicolelim02":7,"-":69}},{"path":"src/main/java/seedu/nutrigoals/model/ReadOnlyNutriGoals.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":" * Unmodifiable view of NutriGoals","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"public interface ReadOnlyNutriGoals {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"     * Returns an unmodifiable view of the food list.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"    ObservableList\u003cFood\u003e getFoodList();","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    Calorie getCalorieTarget();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    User getUser();","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"TanPingZhi"},"content":"    List\u003cLocation\u003e getGymLocations();","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"    Map\u003cName, Calorie\u003e getFoodCalorieList();","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"AkkFiros"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"AkkFiros"},"content":"     * Returns a random tip from a list of tips.","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"AkkFiros"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"    Tip getTip();","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"AkkFiros":4,"ruiqi7":6,"xav168":20,"TanPingZhi":2,"nicolelim02":1}},{"path":"src/main/java/seedu/nutrigoals/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"    Path getNutriGoalsFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"xav168":3,"-":13}},{"path":"src/main/java/seedu/nutrigoals/model/Tip.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":" * Represents a tip","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"public class Tip {","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"    private final String tip;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":"    public Tip(String tip) {","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"        this.tip \u003d tip;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"    public String toString() {","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"        return tip;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"nicolelim02":17}},{"path":"src/main/java/seedu/nutrigoals/model/TipList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AkkFiros"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"AkkFiros"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"AkkFiros"},"content":"import java.util.Random;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"AkkFiros"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"AkkFiros"},"content":" * TipList class to store all tips and the random tip generator.","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"AkkFiros"},"content":" * Meant for developer use as a built-in repository of healthy-lifestyle","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"AkkFiros"},"content":" * tips.","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"AkkFiros"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"AkkFiros"},"content":"public class TipList {","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"    private final ArrayList\u003cTip\u003e listOfTips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"AkkFiros"},"content":"    private final Random r \u003d new Random();","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"AkkFiros"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"AkkFiros"},"content":"     * Constructs a {@code TipList} with a default list of tips.","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"AkkFiros"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"AkkFiros"},"content":"    public TipList() {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"        Tip tip1 \u003d new Tip(\"Opt for unsweetened versions of your favourite beverages!\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"AkkFiros"},"content":"                + \"Drink stalls in canteens around NUS will readily provide \u0027siew dai\u0027\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"AkkFiros"},"content":"                + \"(less sugar) versions of your go-to drinks!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"        Tip tip2 \u003d new Tip(\"NUS offers a total of 44 sport CCAs! Join one (or more) to get your\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"AkkFiros"},"content":"                + \"weekly fix of exercise and make new friends!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"        Tip tip3 \u003d new Tip(\"NUS boasts a host of sports facilities - from a swimming pool\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"AkkFiros"},"content":"                + \"to badminton courts! Use the REBOKS system to book a sports facility\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"AkkFiros"},"content":"                + \"and get active!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"        Tip tip4 \u003d new Tip(\"Occupying an area of 1.7 square kilometers, NUS\u0027 Kent Ridge Campus\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"AkkFiros"},"content":"                + \"is rather small... Opt to walk to your destinations to beat the traffic\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"AkkFiros"},"content":"                + \"and get your steps in!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"        Tip tip5 \u003d new Tip(\"Don\u0027t like to run on a track? Fret not - NUS\u0027 Kent Ridge campus\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"AkkFiros"},"content":"                + \"has a perimeter that is approximately 4.5km long! Add in the hilly terrain\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"AkkFiros"},"content":"                + \"and you\u0027ve got a route for your weekly run!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"        Tip tip6 \u003d new Tip(\"Tummy growling for some food? Look out for the healthier choice logo\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"AkkFiros"},"content":"                + \"at stalls across NUS canteens for a healthier diet!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"        Tip tip7 \u003d new Tip(\"Want to add on a few pounds of muscle? NUS has a total of 4 gyms\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"AkkFiros"},"content":"                + \"that are free-to-use for NUS students and staff!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"        Tip tip8 \u003d new Tip(\"More than sports, NUS offers a wide variety of services from\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"AkkFiros"},"content":"                + \"health check-ups to mental wellness events. Make use of these services\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"AkkFiros"},"content":"                + \"for a better you!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"        Tip tip9 \u003d new Tip(\"Like how NUS is partially situated on a hill, your classes might\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"AkkFiros"},"content":"                + \"be at the upper floors of your faculties. Take the stairs instead of the\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"AkkFiros"},"content":"                + \"elevator for a short workout before your next lesson!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"        Tip tip10 \u003d new Tip(\"Did you know that there are 159 water coolers on NUS\u0027 Kent Ridge\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"AkkFiros"},"content":"                + \"campus (and counting!)? Use these to stay hydrated throughout the day!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"        listOfTips.add(tip1);","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"        listOfTips.add(tip2);","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"        listOfTips.add(tip3);","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"nicolelim02"},"content":"        listOfTips.add(tip4);","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"        listOfTips.add(tip5);","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"        listOfTips.add(tip6);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"        listOfTips.add(tip7);","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"        listOfTips.add(tip8);","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"        listOfTips.add(tip9);","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"        listOfTips.add(tip10);","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"AkkFiros"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"AkkFiros"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"AkkFiros"},"content":"     * Generates a random index number and retrieves the tip at that index number from","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"AkkFiros"},"content":"     * listOfTips.","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"AkkFiros"},"content":"     * @return a randomly generated tip","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"AkkFiros"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"    public Tip generateTip() {","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"AkkFiros"},"content":"        int randomIndex \u003d r.nextInt(listOfTips.size());","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"AkkFiros"},"content":"        return listOfTips.get(randomIndex);","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"AkkFiros"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"AkkFiros"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"AkkFiros":44,"nicolelim02":23}},{"path":"src/main/java/seedu/nutrigoals/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"    private Path nutriGoalsFilePath \u003d Paths.get(\"data\" , \"nutrigoals.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"        setNutriGoalsFilePath(newUserPrefs.getNutriGoalsFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"    public Path getNutriGoalsFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"        return nutriGoalsFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"    public void setNutriGoalsFilePath(Path nutriGoalsFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"        requireNonNull(nutriGoalsFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"        this.nutriGoalsFilePath \u003d nutriGoalsFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"                \u0026\u0026 nutriGoalsFilePath.equals(o.nutriGoalsFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"        return Objects.hash(guiSettings, nutriGoalsFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"xav168"},"content":"        sb.append(\"\\nLocal data file location : \" + nutriGoalsFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":12,"-":75}},{"path":"src/main/java/seedu/nutrigoals/model/meal/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":" * Represents the date and time a Food was recorded.","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"public class DateTime {","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should be in the format: yyyy-MM-dd\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"     * Constructs a {@code DateTime} at the current date and time.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"    public DateTime() {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"        dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"     * Constructs a {@code DateTime} at the given date and time.","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"     * @param dateTime A string representing the date and time.","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTime);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"     * Returns true if this {@code DateTime} represents a later time than the given {@code DateTime}.","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"     * @param otherDateTime The other {@code DateTime} to compare to.","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"ruiqi7"},"content":"     * @return True if this {@code DateTime} represents a later time than the given {@code DateTime}.","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"ruiqi7"},"content":"    public boolean isAfter(DateTime otherDateTime) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"        return dateTime.isAfter(otherDateTime.dateTime);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"     * Checks if this {@code DateTime} was recorded on the same day as the given {@code DateTime}.","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"     * @param otherDateTime The other {@code DateTime} to compare to.","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"     * @return True if this {@code DateTime} was recorded on the same day as the given {@code DateTime}.","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"ruiqi7"},"content":"    public boolean isOnSameDay(DateTime otherDateTime) {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"        return dateTime.toLocalDate().isEqual(otherDateTime.dateTime.toLocalDate());","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"ruiqi7"},"content":"     * Returns true if a given string represents a valid date and time.","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"ruiqi7"},"content":"     * @return True if the given string represents a valid date and time.","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"ruiqi7"},"content":"    public static boolean isValidDateTime(String dateTime) {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"ruiqi7"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"ruiqi7"},"content":"            LocalDateTime.parse(dateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"ruiqi7"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"ruiqi7"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"ruiqi7"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"ruiqi7"},"content":"     * Returns the date of this {@code DateTime}.","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"ruiqi7"},"content":"     * @return A string representing the date of this {@code DateTime}.","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"ruiqi7"},"content":"    public String getDate() {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"ruiqi7"},"content":"        return dateTime.format(DATE_FORMATTER);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"ruiqi7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"ruiqi7"},"content":"        if (!(other instanceof DateTime)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"ruiqi7"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"ruiqi7"},"content":"        return dateTime.isEqual(((DateTime) other).dateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"ruiqi7"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"ruiqi7"},"content":"        return dateTime.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"ruiqi7"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"ruiqi7"},"content":"        return dateTime.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"ruiqi7":92,"xav168":1}},{"path":"src/main/java/seedu/nutrigoals/model/meal/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":" * Represents a Food in the food list.","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"public class Food {","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"    private final Calorie calorie;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"    private final Tag tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"    public Food(Name name, Calorie calorie, Tag tag) {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"        requireAllNonNull(name, calorie, tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"        this.calorie \u003d calorie;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"        this.dateTime \u003d new DateTime();","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"     * Constructor for an edited Food.","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"    public Food(Name name, Calorie calorie, Tag tag, DateTime dateTime) {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"        requireAllNonNull(name, calorie, tag, dateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"        this.calorie \u003d calorie;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"nicolelim02"},"content":"    public Calorie getCalorie() {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"        return calorie;","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"    public Tag getTag() {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"        return tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"ruiqi7"},"content":"    public DateTime getDateTime() {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"ruiqi7"},"content":"        return dateTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"     * Returns true if both Foods have the same name.","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"     * This defines a weaker notion of equality between two Foods.","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"    public boolean isSameFood(Food otherFood) {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"        if (otherFood \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"nicolelim02"},"content":"        return otherFood !\u003d null","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"nicolelim02"},"content":"                \u0026\u0026 otherFood.getName().equals(getName());","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"ruiqi7"},"content":"     * Returns true if this {@code Food} was recorded after the given {@code Food}.","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"ruiqi7"},"content":"     * @param otherFood The other {@code Food} to compare to.","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"ruiqi7"},"content":"     * @return True if this {@code Food} was recorded after the given {@code Food}.","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"ruiqi7"},"content":"    public boolean isAfter(Food otherFood) {","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"ruiqi7"},"content":"        return dateTime.isAfter(otherFood.getDateTime());","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"xav168"},"content":"     * Returns true if both Foods have the same identity and data fields.","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"xav168"},"content":"     * This defines a stronger notion of equality between two Foods.","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"nicolelim02"},"content":"        if (!(other instanceof Food)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"nicolelim02"},"content":"        Food otherFood \u003d (Food) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"nicolelim02"},"content":"        return otherFood.getName().equals(getName())","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"nicolelim02"},"content":"                \u0026\u0026 otherFood.getTag().equals(getTag())","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"nicolelim02"},"content":"                \u0026\u0026 otherFood.getCalorie().equals(getCalorie());","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"nicolelim02"},"content":"        return Objects.hash(name, calorie, tag, dateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"nicolelim02"},"content":"        builder.append(\"Food name: \")","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"nicolelim02"},"content":"                .append(getName())","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"nicolelim02"},"content":"                .append(\"\\nCalorie content: \")","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"nicolelim02"},"content":"                .append(getCalorie())","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"nicolelim02"},"content":"                .append(\"\\nMeal type: \")","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"nicolelim02"},"content":"                .append(getTag());","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruiqi7":23,"xav168":10,"nicolelim02":31,"-":61}},{"path":"src/main/java/seedu/nutrigoals/model/meal/FoodCalorieList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":" * Represents a list of common food items and their respective calorie contents for 1 serving.","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"public class FoodCalorieList {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"    private final HashMap\u003cName, Calorie\u003e foodToCalorieMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"    private final Map\u003cName, Calorie\u003e internalUnmodifiableMap \u003d Collections.unmodifiableMap(foodToCalorieMap);","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"     * Constructs a {@code FoodCalorieList} with a default list of food items and their calories.","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"    public FoodCalorieList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"        // https://healthscreening.com.sg/food-calories-chart/","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.put(new Name(\"ban mian\"), new Calorie(\"475\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.put(new Name(\"bubble tea\"), new Calorie(\"232\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.put(new Name(\"chicken rice\"), new Calorie(\"702\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.put(new Name(\"fried rice\"), new Calorie(\"508\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.put(new Name(\"laksa\"), new Calorie(\"589\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.put(new Name(\"nasi lemak\"), new Calorie(\"600\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.put(new Name(\"potato chips\"), new Calorie(\"184\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.put(new Name(\"rice\"), new Calorie(\"260\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.put(new Name(\"wanton noodles\"), new Calorie(\"409\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.put(new Name(\"white bread\"), new Calorie(\"77\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"     * Replaces the {@code HashMap} with the given {@code Map}.","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"     * @param replacement The {@code Map} to replace the current {@code HashMap} with.","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"    public void setFoodCalorieMapping(Map\u003cName, Calorie\u003e replacement) {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"ruiqi7"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.clear();","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"ruiqi7"},"content":"        foodToCalorieMap.putAll(replacement);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"     * Returns the {@code HashMap} as an unmodifiable {@code Map}.","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"     * @returns The {@code HashMap} as an unmodifiable {@code Map}.","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"    public Map\u003cName, Calorie\u003e asUnmodifiableMap() {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"        return internalUnmodifiableMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"ruiqi7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"ruiqi7"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"ruiqi7"},"content":"                || (other instanceof FoodCalorieList // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"ruiqi7"},"content":"                \u0026\u0026 foodToCalorieMap.equals(((FoodCalorieList) other).foodToCalorieMap));","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"ruiqi7":59}},{"path":"src/main/java/seedu/nutrigoals/model/meal/FoodComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":" * A comparator class to sort the {@code Food} in the order of breakfast, lunch then dinner","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":" * and in the order in which the user input the {@code Food}.","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"public class FoodComparator implements Comparator\u003cFood\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"    public int compare(Food food1, Food food2) {","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"        Tag.TagName tagName1 \u003d food1.getTag().tagName;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"        Tag.TagName tagName2 \u003d food2.getTag().tagName;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"        if (tagName1 \u003d\u003d tagName2) {","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"            return food1.isAfter(food2) ? 1 : -1;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"            return tagName1.compareTo(tagName2);","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"ruiqi7":22,"xav168":1}},{"path":"src/main/java/seedu/nutrigoals/model/meal/FoodList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.exceptions.MealNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":" * Represents the user\u0027s list of {@code Food}.","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"public class FoodList implements Iterable\u003cFood\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"    private final ObservableList\u003cFood\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"    private final SortedList\u003cFood\u003e sortedList \u003d new SortedList\u003c\u003e(internalList, new FoodComparator());","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"    private final ObservableList\u003cFood\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"            FXCollections.unmodifiableObservableList(sortedList);","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"     * Returns true if the list contains an equivalent food as the given argument.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"    public boolean contains(Food toCheck) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"        return internalList.stream().anyMatch(toCheck::isSameFood);","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"     * Adds a Food to the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"    public void add(Food toAdd) {","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"     * Removes the equivalent Food from the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"     * The Food must exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"    public void remove(Food toRemove) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"            throw new MealNotFoundException();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"     * Replaces the food {@code target} in the list with {@code editedFood}.","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"    public void setFood(Food target, Food editedFood) {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"        requireAllNonNull(target, editedFood);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"            throw new MealNotFoundException();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"        internalList.set(index, editedFood);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"ruiqi7"},"content":"    public void setFood(FoodList replacement) {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":73,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"xav168"},"content":"     * Replaces the contents of this list with {@code Food}.","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"    public void setFood(List\u003cFood\u003e foods) {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"nicolelim02"},"content":"        requireAllNonNull(foods);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"nicolelim02"},"content":"        internalList.setAll(foods);","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"nicolelim02"},"content":"    public ObservableList\u003cFood\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"nicolelim02"},"content":"    public Iterator\u003cFood\u003e iterator() {","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"nicolelim02"},"content":"        return sortedList.iterator();","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"ruiqi7"},"content":"                || (other instanceof FoodList // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"ruiqi7"},"content":"                        \u0026\u0026 sortedList.equals(((FoodList) other).sortedList));","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"nicolelim02"},"content":"        return sortedList.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruiqi7":8,"xav168":23,"nicolelim02":12,"-":63}},{"path":"src/main/java/seedu/nutrigoals/model/meal/IsFoodAddedOnThisDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":" * Tests if a {@code Food} was added on a specific date.","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"public class IsFoodAddedOnThisDatePredicate implements Predicate\u003cFood\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"     * Constructs a {@code IsFoodAddedOnThisDatePredicate}.","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"    public IsFoodAddedOnThisDatePredicate(DateTime dateTime) {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"     * Returns the date that the predicate is testing for.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"     * @return A string representing the date that the predicate is testing for.","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"    public String getDate() {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"        return dateTime.getDate();","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"    public boolean test(Food food) {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"        return dateTime.isOnSameDay(food.getDateTime());","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"                || (other instanceof IsFoodAddedOnThisDatePredicate // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"                \u0026\u0026 getDate().equals(((IsFoodAddedOnThisDatePredicate) other).getDate())); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ruiqi7":37}},{"path":"src/main/java/seedu/nutrigoals/model/meal/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":" * Represents a Food\u0027s name in the Food list.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"            \"Food names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"     * The first character of the Name must not be a whitespace,","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruiqi7":1,"xav168":4,"-":54}},{"path":"src/main/java/seedu/nutrigoals/model/meal/exceptions/MealNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.meal.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":" * Signals that the operation is unable to find the specified meal.","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"public class MealNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":6}},{"path":"src/main/java/seedu/nutrigoals/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":" * Represents a Tag in the food list.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be either breakfast, lunch or dinner\";","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"    public static final String BREAKFAST_REGEX \u003d \"^\\\\s*(?i)breakfast\\\\s*$\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"    public static final String LUNCH_REGEX \u003d \"^\\\\s*(?i)lunch\\\\s*$\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"    public static final String DINNER_REGEX \u003d \"^\\\\s*(?i)dinner\\\\s*$\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"     * Represents the different meal types a tag name can have.","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"    public enum TagName {","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"        BREAKFAST, LUNCH, DINNER","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"    public final TagName tagName;","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"        this.tagName \u003d TagName.valueOf(tagName.toUpperCase());","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"        boolean isValidTag \u003d test.matches(BREAKFAST_REGEX)","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"                || test.matches(LUNCH_REGEX)","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"                || test.matches(DINNER_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"        return isValidTag;","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"     * Returns the name of the tag in lower case.","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"     * @return The tag name in lower case.","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"    public String getTagName() {","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"        return tagName.toString().toLowerCase();","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"nicolelim02"},"content":"        return getTagName();","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"nicolelim02"},"content":"     * Test if the tag name can be edited","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"nicolelim02"},"content":"     * Since a new tag is created if the user wants to edit a tag, the tag name should","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"nicolelim02"},"content":"     * be final and the user should not be able to modify it","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"nicolelim02"},"content":"     * @param editedName New tag name","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"nicolelim02"},"content":"     * @throws UnsupportedOperationException as the tag name is not modifiable","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"nicolelim02"},"content":"    public void edit(String editedName) throws UnsupportedOperationException {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"nicolelim02"},"content":"        throw new UnsupportedOperationException();","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruiqi7":17,"xav168":3,"nicolelim02":21,"-":45}},{"path":"src/main/java/seedu/nutrigoals/model/user/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":" * Represents the user\u0027s age","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":"public class Age {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-9]\\\\d*$\";","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Age must be a number greater than 0\";","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"    public static final String DEFAULT_VALUE \u003d \"0\";","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"    public final String value;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"     * Initialises an age object with the given parameters, and checks if it\u0027s a valid age","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"     * @param age","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"    public Age(String age) {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"        requireNonNull(age);","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"        value \u003d age;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"    public Age() {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"        value \u003d DEFAULT_VALUE;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"    public static boolean isValidAge(String age) {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"        return age.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"    public int getAge() {","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"        return Integer.parseInt(value);","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"        if (!(obj instanceof Age)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"        Age other \u003d (Age) obj;","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"nicolelim02"},"content":"        return value.equals(other.value);","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"        return value;","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"nicolelim02":55}},{"path":"src/main/java/seedu/nutrigoals/model/user/Bmi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":" * Represents the user\u0027s body-mass-index","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"public class Bmi {","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"    public static final Height DEFAULT_HEIGHT \u003d new Height(\"170\");","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":"    public static final Weight DEFAULT_WEIGHT \u003d new Weight(\"70\");","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"    public final String value;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"    private final Height height;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"    private final Weight weight;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"     * Initialises a Bmi object using the {@code height} and {@code weight} provided by the user","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"     * @param height User\u0027s height","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"     * @param weight User\u0027s weight","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"    public Bmi(Height height, Weight weight) {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"        this.height \u003d height;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"        value \u003d calculateBmi() + \"\"; // converts the bmi value into a string","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"     * Initialises a Bmi object using a default height and weight","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"    public Bmi() {","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"        height \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"        weight \u003d DEFAULT_WEIGHT;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"        value \u003d calculateBmi() + \"\";","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"        double bmi \u003d Double.parseDouble(value);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"        String roundedOff \u003d String.format(\"%.1f\", bmi);","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"        return roundedOff;","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"            return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"        if (!(obj instanceof Bmi)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"nicolelim02"},"content":"            return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"        Bmi other \u003d (Bmi) obj;","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"        return value.equals(other.value);","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"     * Calculates the user\u0027s {@code Bmi}","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"     * @return User\u0027s bmi as a double","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"    public double calculateBmi() {","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"        double h \u003d height.getHeight();","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"        int w \u003d weight.getWeight();","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"        return w / (h * h);","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"nicolelim02":65}},{"path":"src/main/java/seedu/nutrigoals/model/user/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":" * Represents a Gender object","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"public class Gender {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[m,M,f,F]$\";","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender must be a single char, either M or F\";","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"    public static final String DEFAULT_VALUE \u003d \"M\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"    public static final String MALE \u003d \"Male\";","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"    public static final String FEMALE \u003d \"Female\";","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"    public final String value;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"     * Initialises a gender object with the given parameters, and checks if its a valid gender","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"     * @param gender User\u0027s gender","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    public Gender(String gender) {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"        value \u003d gender.toUpperCase();","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"    public Gender() {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"        value \u003d DEFAULT_VALUE;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"     * Checks if specified gender is valid","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"     * @param gender User\u0027s gender","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"     * @return true if specified string is either M, m, F or f","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"    public static boolean isValidGender(String gender) {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"        return (gender.matches(VALIDATION_REGEX));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"     * Checks if the specified gender corresponds to male","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"     * @return True if it\u0027s male, false otherwise","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"    public boolean isMale() {","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"        return value.equals(\"M\");","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"        if (obj instanceof Gender) {","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"            Gender other \u003d (Gender) obj;","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"            return this.value.equals(other.value);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"        if (value.equals(\"M\")) {","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"            return MALE;","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"        } else {","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"            return FEMALE;","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":47,"nicolelim02":21}},{"path":"src/main/java/seedu/nutrigoals/model/user/Height.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":" * Represents a Height object","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"public class Height {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"    public static final int MAX_HEIGHT \u003d 220;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"    public static final int MIN_HEIGHT \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"    public static final String DEFAULT_VALUE \u003d \"0\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"    public static final String UNIT \u003d \"m\";","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Height must take on a positive number that is not too large.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"    public final String value;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"     * Initialises a Height object and checks if the specified input is a valid height","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"     * @param height User\u0027s height","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    public Height(String height) {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"        requireNonNull(height);","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"        checkArgument(isValidHeight(height), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"        value \u003d height;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"    public Height() {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"        value \u003d DEFAULT_VALUE;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"     * Checks if input height is valid","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"     * @param height Input height","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"     * @return height is a number and height is \u003c 220","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"    public static boolean isValidHeight(String height) {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"        if (!height.isEmpty() \u0026\u0026 height.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"            try {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"                Integer heightValue \u003d Integer.parseInt(height);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"                return heightValue \u003e MIN_HEIGHT \u0026\u0026 heightValue \u003c MAX_HEIGHT;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"                return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"     * Returns the height recorded as an integer","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"     * @return User\u0027s height in meters","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"    public double getHeight() {","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"        return Integer.parseInt(value) / 100.0;","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"    public boolean isZero() {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"        return value.equals(DEFAULT_VALUE);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"        if (obj instanceof Height) {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"xav168"},"content":"            Height other \u003d (Height) obj;","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"            return this.value.equals(other.value);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"nicolelim02"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"        return getHeight() + UNIT;","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":56,"nicolelim02":21}},{"path":"src/main/java/seedu/nutrigoals/model/user/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":" * Represents the user of NutriGoals","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"public class User {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"    private static final double MALE_CONSTANT \u003d 66.47;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"    private static final double FEMALE_CONSTANT \u003d 655.1;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"    private static final double MALE_WEIGHT_COEFFICIENT \u003d 13.75;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"    private static final double FEMALE_WEIGHT_COEFFICIENT \u003d 9.563;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"    private static final double MALE_HEIGHT_COEFFICIENT \u003d 5.003;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"    private static final double FEMALE_HEIGHT_COEFFICIENT \u003d 1.850;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"    private static final double MALE_AGE_COEFFICIENT \u003d 6.755;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"    private static final double FEMALE_AGE_COEFFICIENT \u003d 4.676;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"    private static final double SEDENTARY \u003d 1.2;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    private final Height height;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    private final Weight weight;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    private final Weight idealWeight;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"    private final Gender gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"    private final Age age;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"    private final Bmi bmi;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"     * Initialises a user object with given parameters","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"     * @param gender      gender of the user","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"     * @param height      height of the user","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"     * @param weight      current weight of the user","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"     * @param idealWeight ideal weight that the user wishes to achieve","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"     * @param age         user\u0027s age","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"    public User(Gender gender, Height height, Weight weight, Weight idealWeight, Age age) {","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"        requireAllNonNull(gender, height, weight, idealWeight, age);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"        this.height \u003d height;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"        this.idealWeight \u003d idealWeight;","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"        bmi \u003d new Bmi(height, weight);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"     * Default constructor of user sets height, weight, ideal weight to 0 and gender to M","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"    public User() {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"        this.height \u003d new Height();","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"        this.weight \u003d new Weight();","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"        this.idealWeight \u003d new Weight();","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"        this.gender \u003d new Gender();","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"        this.age \u003d new Age();","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"        bmi \u003d new Bmi(height, weight);","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"    public Weight getWeight() {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"        return weight;","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"    public Weight getIdealWeight() {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"        return idealWeight;","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"xav168"},"content":"    public Gender getGender() {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"        return gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"    public Height getHeight() {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"xav168"},"content":"        return height;","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"    public Age getAge() {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"nicolelim02"},"content":"        return age;","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"nicolelim02"},"content":"     * Calculates the suggested calorie intake based on the user\u0027s height, weight and age","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"nicolelim02"},"content":"     * @return Suggested daily calorie intake","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"nicolelim02"},"content":"    public Calorie calculateSuggestedCalorieIntake() {","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"nicolelim02"},"content":"        double bmr \u003d calculateBmr();","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"nicolelim02"},"content":"        int suggestedCalorie \u003d (int) (bmr * SEDENTARY);","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"nicolelim02"},"content":"        String calorie \u003d Integer.toString(suggestedCalorie);","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"nicolelim02"},"content":"        return new Calorie(calorie);","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"nicolelim02"},"content":"    public Bmi getBmi() {","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"nicolelim02"},"content":"        return bmi;","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"nicolelim02"},"content":"    public boolean isUserCreated() {","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"nicolelim02"},"content":"        return !height.isZero() \u0026\u0026 !weight.isZero();","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"xav168"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"xav168"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"xav168"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"nicolelim02"},"content":"        if (!(other instanceof User)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"nicolelim02"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"xav168"},"content":"        User u \u003d (User) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"xav168"},"content":"        return (this.weight.equals(u.weight) \u0026\u0026 this.height.equals(u.height)","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"nicolelim02"},"content":"                \u0026\u0026 this.idealWeight.equals(u.idealWeight) \u0026\u0026 this.gender.equals(u.gender))","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"nicolelim02"},"content":"                \u0026\u0026 this.age.equals(u.age) \u0026\u0026 this.bmi.equals(u.bmi);","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"nicolelim02"},"content":"    private double calculateBmr() {","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"nicolelim02"},"content":"        // formula used: https://www.verywellfit.com/how-many-calories-do-i-need-each-day-2506873","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"nicolelim02"},"content":"        double h \u003d height.getHeight() * 100; // height in cm","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"nicolelim02"},"content":"        int w \u003d idealWeight.getWeight(); // weight in kg","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"nicolelim02"},"content":"        int a \u003d age.getAge(); // age in years","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"nicolelim02"},"content":"        if (gender.isMale()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"nicolelim02"},"content":"            return MALE_CONSTANT + (MALE_WEIGHT_COEFFICIENT * w)","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"nicolelim02"},"content":"                    + (MALE_HEIGHT_COEFFICIENT * h)","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"nicolelim02"},"content":"                    - (MALE_AGE_COEFFICIENT * a);","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"nicolelim02"},"content":"        } else { // female","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"nicolelim02"},"content":"            return FEMALE_CONSTANT + (FEMALE_WEIGHT_COEFFICIENT * w)","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"nicolelim02"},"content":"                    + (FEMALE_HEIGHT_COEFFICIENT * h)","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"nicolelim02"},"content":"                    - (FEMALE_AGE_COEFFICIENT * a);","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"nicolelim02"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"nicolelim02"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(\"\\n\");","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"nicolelim02"},"content":"        stringBuilder.append(\"Gender: \")","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"nicolelim02"},"content":"                .append(getGender())","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"nicolelim02"},"content":"                .append(\"\\nCurrent Height: \")","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"nicolelim02"},"content":"                .append(getHeight())","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"nicolelim02"},"content":"                .append(\"\\nCurrent Weight: \")","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"nicolelim02"},"content":"                .append(getWeight())","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"nicolelim02"},"content":"                .append(\"\\nIdeal Weight: \")","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"nicolelim02"},"content":"                .append(getIdealWeight())","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"nicolelim02"},"content":"                .append(\"\\nBMI: \")","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"nicolelim02"},"content":"                .append(getBmi())","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"nicolelim02"},"content":"                .append(\"\\nAge: \")","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"nicolelim02"},"content":"                .append(getAge());","lastModifiedDate":"2022-10-19"},{"lineNumber":144,"author":{"gitId":"nicolelim02"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":60,"nicolelim02":86}},{"path":"src/main/java/seedu/nutrigoals/model/user/Weight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":" * Represents a Weight object","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"public class Weight {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"    public static final int MAX_WEIGHT \u003d 200;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"    public static final int MIN_WEIGHT \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"    public static final String DEFAULT_VALUE \u003d \"0\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"    public static final String UNIT \u003d \"kg\";","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Weight must take on a positive number that is not too large.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"    public final String value;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"     * Initialises a weight object and checks if specified weight is valid.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"     * @param weight User\u0027s weight","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    public Weight(String weight) {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"        requireNonNull(weight);","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"        checkArgument(isValidWeight(weight), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"        value \u003d weight;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"    public Weight() {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"        value \u003d DEFAULT_VALUE;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"    public boolean isZero() {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"        return value.equals(DEFAULT_VALUE);","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"     * Checks if input is valid weight","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"     * @param weight Input weight","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"     * @return true if weight is a positive integer and weight \u003c 200","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"    public static boolean isValidWeight(String weight) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"        if (!weight.isEmpty() \u0026\u0026 weight.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"            try {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"                int weightValue \u003d Integer.parseInt(weight);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"                return weightValue \u003e MIN_WEIGHT \u0026\u0026 weightValue \u003c MAX_WEIGHT;","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"                return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"     * Returns the weight recorded as an integer","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"     * @return The user\u0027s weight in kilogram","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"    public int getWeight() {","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"        return Integer.parseInt(value);","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"        if (obj instanceof Weight) {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"xav168"},"content":"            Weight other \u003d (Weight) obj;","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"            return this.value.equals(other.value);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"        return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"nicolelim02"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"nicolelim02"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"        return getWeight() + UNIT;","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":56,"nicolelim02":22}},{"path":"src/main/java/seedu/nutrigoals/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":" * Contains utility methods for populating {@code NutriGoals} with sample data.","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"public class SampleDataUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"    public static Food[] getSampleFoods() {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"        return new Food[] {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"            new Food(new Name(\"Bread\"), new Calorie(), getTag(\"breakfast\")),","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"            new Food(new Name(\"Croissant\"), new Calorie(), getTag(\"breakfast\")),","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"            new Food(new Name(\"Porridge\"), new Calorie(), getTag(\"lunch\")),","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"            new Food(new Name(\"KBBQ\"), new Calorie(), getTag(\"dinner\")),","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"            new Food(new Name(\"Sushi\"), new Calorie(), getTag(\"dinner\")),","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"            new Food(new Name(\"Milo\"), new Calorie(), getTag(\"lunch\"))","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"        };","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"    public static ReadOnlyNutriGoals getSampleNutriGoals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"        NutriGoals sampleAb \u003d new NutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        for (Food sampleFood : getSampleFoods()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"            sampleAb.addFood(sampleFood);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"        return sampleAb;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"    public static Tag getTag(String string) {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"        return new Tag(string);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":31,"nicolelim02":8}},{"path":"src/main/java/seedu/nutrigoals/storage/JsonAdaptedFood.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.DateTime;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":" * Jackson-friendly version of {@link Food}.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"class JsonAdaptedFood {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Meal\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"    private final String calorie;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"    private final String tagged;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"    private final String dateTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"     * Constructs a {@code JsonAdaptedFood} with the given food details.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"    public JsonAdaptedFood(@JsonProperty(\"foodName\") String foodName, @JsonProperty(\"calorie\") String calorie,","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"                           @JsonProperty(\"tagged\") String tagged,","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"                           @JsonProperty(\"dateTime\") String dateTime) {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"        this.name \u003d foodName;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"        this.calorie \u003d calorie;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"        this.tagged \u003d tagged;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"     * Converts a given {@code Food} into this class for Jackson use.","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"    public JsonAdaptedFood(Food source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"        calorie \u003d source.getCalorie().value;","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"        tagged \u003d source.getTag().getTagName();","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"        dateTime \u003d source.getDateTime().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"     * Converts this Jackson-friendly adapted food object into the model\u0027s {@code Food} object.","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted food.","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"    public Food toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"        if (tagged \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Tag.class.getSimpleName()));","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"        if (!Tag.isValidTagName(tagged)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"        final Tag modelTag \u003d new Tag(tagged);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"nicolelim02"},"content":"        if (!Calorie.isValidCalorie(calorie)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"nicolelim02"},"content":"            throw new IllegalValueException(Calorie.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"nicolelim02"},"content":"        final Calorie modelCalorie \u003d new Calorie(calorie);","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"ruiqi7"},"content":"        final DateTime modelDateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"nicolelim02"},"content":"        return new Food(modelName, modelCalorie, modelTag, modelDateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ruiqi7":6,"xav168":12,"nicolelim02":23,"-":38}},{"path":"src/main/java/seedu/nutrigoals/storage/JsonNutriGoalsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.util.FileUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.util.JsonUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":" * A class to access NutriGoals data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"public class JsonNutriGoalsStorage implements NutriGoalsStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonNutriGoalsStorage.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    public JsonNutriGoalsStorage(Path filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"    public Path getNutriGoalsFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"        return filePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"    public Optional\u003cReadOnlyNutriGoals\u003e readNutriGoals() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"        return readNutriGoals(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"     * Similar to {@link #readNutriGoals()}.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"    public Optional\u003cReadOnlyNutriGoals\u003e readNutriGoals(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"        Optional\u003cJsonSerializableNutriGoals\u003e jsonNutriGoals \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"                filePath, JsonSerializableNutriGoals.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"        if (!jsonNutriGoals.isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"            Optional\u003cReadOnlyNutriGoals\u003e output \u003d Optional.of(jsonNutriGoals.get().toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"            return output;","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"    public void saveNutriGoals(ReadOnlyNutriGoals nutriGoals) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"        saveNutriGoals(nutriGoals, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"     * Similar to {@link #saveNutriGoals(ReadOnlyNutriGoals)}.","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"xav168"},"content":"    public void saveNutriGoals(ReadOnlyNutriGoals nutriGoals, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"        requireNonNull(nutriGoals);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"xav168"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableNutriGoals(nutriGoals), filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":80}},{"path":"src/main/java/seedu/nutrigoals/storage/JsonSerializableNutriGoals.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.model.Location;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":" * An Immutable NutriGoals that is serializable to JSON format.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"@JsonRootName(value \u003d \"nutrigoals\")","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"class JsonSerializableNutriGoals {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"    private final List\u003cJsonAdaptedFood\u003e foods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    private final Calorie calorieTarget;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"    private final User user;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"    private final List\u003cLocation\u003e nusGymsLocations;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"     * Constructs a {@code JsonSerializableNutriGoals} with the given foods.","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    // This constructor is for unit tests","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"TanPingZhi"},"content":"    public JsonSerializableNutriGoals(@JsonProperty(\"foods\") List\u003cJsonAdaptedFood\u003e foods,","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"TanPingZhi"},"content":"                                      @JsonProperty(\"nusGymsLocations\") List\u003cLocation\u003e nusGymsLocations) {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"        this.foods.addAll(foods);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"        this.calorieTarget \u003d new Calorie();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"        this.user \u003d new User();","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"TanPingZhi"},"content":"        this.nusGymsLocations \u003d nusGymsLocations;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"     * Converts a given {@code ReadOnlyNutriGoals} into this class for Jackson use.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableNutriGoals}.","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"    public JsonSerializableNutriGoals(ReadOnlyNutriGoals source) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"        foods.addAll(source.getFoodList().stream().map(JsonAdaptedFood::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"        calorieTarget \u003d source.getCalorieTarget();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"        user \u003d source.getUser();","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"TanPingZhi"},"content":"        nusGymsLocations \u003d source.getGymLocations();","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"     * Converts this food list into the model\u0027s {@code NutriGoals} object.","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"    public NutriGoals toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"        NutriGoals nutriGoals \u003d new NutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"        for (JsonAdaptedFood jsonAdaptedFood : foods) {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"            Food food \u003d jsonAdaptedFood.toModelType();","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"            nutriGoals.addFood(food);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"        nutriGoals.setCalorieTarget(this.calorieTarget);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"        nutriGoals.setUser(user);","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"TanPingZhi"},"content":"        nutriGoals.setNusGymsLocations(this.nusGymsLocations);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"        return nutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":64,"TanPingZhi":7}},{"path":"src/main/java/seedu/nutrigoals/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.util.JsonUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xav168":5,"-":42}},{"path":"src/main/java/seedu/nutrigoals/storage/NutriGoalsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":" * Represents a storage for {@link NutriGoals}.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"public interface NutriGoalsStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"    Path getNutriGoalsFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"     * Returns NutriGoals data as a {@link ReadOnlyNutriGoals}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"    Optional\u003cReadOnlyNutriGoals\u003e readNutriGoals() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"     * @see #getNutriGoalsFilePath()","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    Optional\u003cReadOnlyNutriGoals\u003e readNutriGoals(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"     * Saves the given {@link ReadOnlyNutriGoals} to the storage.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"     * @param nutriGoals cannot be null.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"    void saveNutriGoals(ReadOnlyNutriGoals nutriGoals) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"     * @see #saveNutriGoals(ReadOnlyNutriGoals)","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"    void saveNutriGoals(ReadOnlyNutriGoals nutriGoals, Path filePath) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":46}},{"path":"src/main/java/seedu/nutrigoals/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":" * API of the Storage component","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"public interface Storage extends NutriGoalsStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"    Path getNutriGoalsFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"    Optional\u003cReadOnlyNutriGoals\u003e readNutriGoals() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"    void saveNutriGoals(ReadOnlyNutriGoals nutriGoals) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":32}},{"path":"src/main/java/seedu/nutrigoals/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":" * Manages storage of NutriGoals data in local storage.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"    private NutriGoalsStorage nutriGoalsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"     * Creates a {@code StorageManager} with the given {@code NutriGoalsStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    public StorageManager(NutriGoalsStorage nutriGoalsStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        this.nutriGoalsStorage \u003d nutriGoalsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d NutriGoals methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"    public Path getNutriGoalsFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"        return nutriGoalsStorage.getNutriGoalsFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"    public Optional\u003cReadOnlyNutriGoals\u003e readNutriGoals() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"        return readNutriGoals(nutriGoalsStorage.getNutriGoalsFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"    public Optional\u003cReadOnlyNutriGoals\u003e readNutriGoals(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"        Optional\u003cReadOnlyNutriGoals\u003e output \u003d nutriGoalsStorage.readNutriGoals(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"        return output;","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"    public void saveNutriGoals(ReadOnlyNutriGoals nutriGoals) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"        saveNutriGoals(nutriGoals, nutriGoalsStorage.getNutriGoalsFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"xav168"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"    public void saveNutriGoals(ReadOnlyNutriGoals nutriGoals, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"xav168"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"        nutriGoalsStorage.saveNutriGoals(nutriGoals, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":79}},{"path":"src/main/java/seedu/nutrigoals/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":" * Represents a storage for {@link seedu.nutrigoals.model.UserPrefs}.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"     * Saves the given {@link seedu.nutrigoals.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xav168":6,"-":30}},{"path":"src/main/java/seedu/nutrigoals/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"         * @see seedu.nutrigoals.logic.Logic#execute(String)","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"xav168":5,"-":80}},{"path":"src/main/java/seedu/nutrigoals/ui/FoodCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":" * An UI component that displays information of a {@code Food}.","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"public class FoodCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"    private static final String FXML \u003d \"FoodListCard.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"    public final Food food;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"    private Label calorie;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"     * Creates a {@code FoodCard} with the given {@code Food} and index to display.","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"    public FoodCard(Food food, int displayedIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"        this.food \u003d food;","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"        name.setText(food.getName().fullName);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"        calorie.setText(food.getCalorie().value);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"        tags.getChildren().add(new Label(food.getTag().getTagName()));","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"        if (!(other instanceof FoodCard)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"        FoodCard card \u003d (FoodCard) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"                \u0026\u0026 food.equals(card.food);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ruiqi7":1,"xav168":9,"nicolelim02":6,"-":51}},{"path":"src/main/java/seedu/nutrigoals/ui/FoodListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":" * Panel containing the list of foods.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"public class FoodListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"    private static final String FXML \u003d \"FoodListPanel.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FoodListPanel.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    private ListView\u003cFood\u003e foodListView;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"     * Creates a {@code FoodListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    public FoodListPanel(ObservableList\u003cFood\u003e foodList) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        super(FXML);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"        foodListView.setItems(foodList);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"        foodListView.setCellFactory(listView -\u003e new FoodListViewCell());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Food} using a {@code FoodCard}.","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"    class FoodListViewCell extends ListCell\u003cFood\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"        protected void updateItem(Food food, boolean empty) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"            super.updateItem(food, empty);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"            if (empty || food \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"                setText(null);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"            } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"                setGraphic(new FoodCard(food, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":49}},{"path":"src/main/java/seedu/nutrigoals/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-t17-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xav168":2,"nicolelim02":1,"-":99}},{"path":"src/main/java/seedu/nutrigoals/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.Logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"    private FoodListPanel foodListPanel;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"    private StackPane foodListPanelPlaceholder;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"xav168"},"content":"        foodListPanel \u003d new FoodListPanel(logic.getFilteredFoodList());","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"xav168"},"content":"        foodListPanelPlaceholder.getChildren().add(foodListPanel.getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"xav168"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getNutriGoalsFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"xav168"},"content":"    public FoodListPanel getFoodListPanel() {","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"xav168"},"content":"        return foodListPanel;","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"xav168"},"content":"     * @see seedu.nutrigoals.logic.Logic#execute(String)","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xav168":15,"-":181}},{"path":"src/main/java/seedu/nutrigoals/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xav168":1,"-":27}},{"path":"src/main/java/seedu/nutrigoals/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":1,"-":27}},{"path":"src/main/java/seedu/nutrigoals/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xav168":1,"-":12}},{"path":"src/main/java/seedu/nutrigoals/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.Logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/nutrigoals_32.png\";","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xav168":5,"nicolelim02":1,"-":82}},{"path":"src/main/java/seedu/nutrigoals/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xav168":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"xav168"},"content":"#filterField, #foodListPanel, #foodWebpage {","lastModifiedDate":"2022-10-10"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"xav168":1,"-":351}},{"path":"src/main/resources/view/FoodListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"      \u003cLabel fx:id\u003d\"calorie\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$calorie\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicolelim02":1,"-":33}},{"path":"src/main/resources/view/FoodListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"  \u003cListView fx:id\u003d\"foodListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"         title\u003d\"NutriGoals\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"    \u003cImage url\u003d\"@/images/nutrigoals_32.png\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"        \u003cVBox fx:id\u003d\"foodList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"          \u003cStackPane fx:id\u003d\"foodListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"xav168":1,"nicolelim02":3,"-":56}},{"path":"src/test/java/seedu/nutrigoals/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"xav168":1,"-":57}},{"path":"src/test/java/seedu/nutrigoals/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"xav168":1,"-":26}},{"path":"src/test/java/seedu/nutrigoals/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":2,"-":133}},{"path":"src/test/java/seedu/nutrigoals/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.core.index;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"        final Index fifthFoodIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        assertTrue(fifthFoodIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"        assertTrue(fifthFoodIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"        assertTrue(fifthFoodIndex.equals(fifthFoodIndex));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"        assertFalse(fifthFoodIndex.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"        assertFalse(fifthFoodIndex.equals(5.0f));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"        assertFalse(fifthFoodIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"xav168":9,"-":51}},{"path":"src/test/java/seedu/nutrigoals/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"        assertNotNull(AppUtil.getImage(\"/images/nutrigoals_32.png\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"xav168":3,"-":33}},{"path":"src/test/java/seedu/nutrigoals/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"xav168":3,"-":105}},{"path":"src/test/java/seedu/nutrigoals/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.Config;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xav168":4,"-":112}},{"path":"src/test/java/seedu/nutrigoals/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":2,"-":21}},{"path":"src/test/java/seedu/nutrigoals/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.TestUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":3,"-":42}},{"path":"src/test/java/seedu/nutrigoals/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"xav168":2,"-":141}},{"path":"src/test/java/seedu/nutrigoals/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_MEAL_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.CALORIE_DESC_BREAD;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.NAME_DESC_BREAD;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.TAG_DESC_LUNCH;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_BREAD_CALORIE;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_TAG_LUNCH;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.BREAD;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.storage.JsonNutriGoalsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.storage.StorageManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"        JsonNutriGoalsStorage nutriGoalsStorage \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"                new JsonNutriGoalsStorage(temporaryFolder.resolve(\"nutrigoals.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"        StorageManager storage \u003d new StorageManager(nutriGoalsStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_MEAL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"ruiqi7"},"content":"        String clearCommand \u003d ClearCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"ruiqi7"},"content":"        assertCommandSuccess(clearCommand, ClearCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"        // Setup LogicManager with JsonNutriGoalsIoExceptionThrowingStub","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"xav168"},"content":"        JsonNutriGoalsStorage nutriGoalsStorage \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"                new JsonNutriGoalsIoExceptionThrowingStub(temporaryFolder","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"                .resolve(\"ioExceptionNutriGoals.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"        StorageManager storage \u003d new StorageManager(nutriGoalsStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"AkkFiros"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_BREAD + CALORIE_DESC_BREAD + TAG_DESC_LUNCH;","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"AkkFiros"},"content":"        Food expectedFood \u003d new FoodBuilder(BREAD).withCalorie(VALID_BREAD_CALORIE)","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"nicolelim02"},"content":"                .withTag(VALID_TAG_LUNCH).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"AkkFiros"},"content":"        expectedModel.addFood(expectedFood);","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"xav168"},"content":"    public void getFilteredFoodList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"xav168"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredFoodList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"xav168"},"content":"        Model expectedModel \u003d new ModelManager(model.getNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"xav168"},"content":"    private static class JsonNutriGoalsIoExceptionThrowingStub extends JsonNutriGoalsStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"xav168"},"content":"        private JsonNutriGoalsIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"xav168"},"content":"        public void saveNutriGoals(ReadOnlyNutriGoals nutriGoals, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"AkkFiros":3,"ruiqi7":3,"xav168":38,"nicolelim02":1,"-":119}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"        model \u003d new ModelManager(getTypicalNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"AkkFiros"},"content":"    public void execute_newFood_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"        Food validFood \u003d new FoodBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"        Model expectedModel \u003d new ModelManager(model.getNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"AkkFiros"},"content":"        expectedModel.addFood(validFood);","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"        assertCommandSuccess(new AddCommand(validFood), model,","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validFood), expectedModel);","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"AkkFiros":2,"ruiqi7":1,"xav168":10,"nicolelim02":2,"-":24}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"TanPingZhi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.model.Location;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Tip;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.IsFoodAddedOnThisDatePredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"AkkFiros"},"content":"    public void constructor_nullFood_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"AkkFiros"},"content":"    public void execute_foodAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"AkkFiros"},"content":"        ModelStubAcceptingFoodAdded modelStub \u003d new ModelStubAcceptingFoodAdded();","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"        Food validFood \u003d new FoodBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"        CommandResult commandResult \u003d new AddCommand(validFood).execute(modelStub);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validFood), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"AkkFiros"},"content":"        assertEquals(Arrays.asList(validFood), modelStub.foodsAdded);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"ruiqi7"},"content":"        Food alice \u003d new FoodBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"ruiqi7"},"content":"        Food bob \u003d new FoodBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"xav168"},"content":"        public Path getNutriGoalsFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"xav168"},"content":"        public void setNutriGoalsFilePath(Path nutriGoalsFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":111,"author":{"gitId":"AkkFiros"},"content":"        public void addFood(Food food) {","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"xav168"},"content":"        public void setNutriGoals(ReadOnlyNutriGoals newData) {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"xav168"},"content":"        public ReadOnlyNutriGoals getNutriGoals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"TanPingZhi"},"content":"        /**","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"TanPingZhi"},"content":"         * @param calorieTarget Sets the user\u0027s calorie target","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"TanPingZhi"},"content":"         */","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"TanPingZhi"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"TanPingZhi"},"content":"        public void setCalorieTarget(Calorie calorieTarget) {","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"TanPingZhi"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"TanPingZhi"},"content":"        /**","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"TanPingZhi"},"content":"         * @return Calorie User\u0027s calorie target","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"TanPingZhi"},"content":"         */","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"TanPingZhi"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"TanPingZhi"},"content":"        public Calorie getCalorieTarget() {","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"TanPingZhi"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"AkkFiros"},"content":"        public boolean hasFood(Food food) {","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"AkkFiros"},"content":"        public void deleteFood(Food target) {","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"AkkFiros"},"content":"        public void setFood(Food target, Food editedFood) {","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"AkkFiros"},"content":"        public ObservableList\u003cFood\u003e getFilteredFoodList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"AkkFiros"},"content":"        public void updateFilteredFoodList(Predicate\u003cFood\u003e predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"xav168"},"content":"        public void setUserDetails(User user) {","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"xav168"},"content":"        public User getUserDetails() {","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"ruiqi7"},"content":"        public IsFoodAddedOnThisDatePredicate getDatePredicate() {","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"ruiqi7"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"ruiqi7"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"ruiqi7"},"content":"        public boolean isFilteredFoodListEmpty() {","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"ruiqi7"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":183,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"nicolelim02"},"content":"        public Calorie calculateSuggestedCalorie() {","lastModifiedDate":"2022-10-17"},{"lineNumber":187,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-17"},{"lineNumber":188,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":189,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":190,"author":{"gitId":"TanPingZhi"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"TanPingZhi"},"content":"        public List\u003cLocation\u003e getNusGymLocations() {","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"TanPingZhi"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":195,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"nicolelim02"},"content":"        public boolean isUserCreated() {","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":200,"author":{"gitId":"nicolelim02"},"content":"        public int getCalorieDifference() {","lastModifiedDate":"2022-10-19"},{"lineNumber":201,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":202,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":203,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":204,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":205,"author":{"gitId":"nicolelim02"},"content":"        public Calorie getTotalCalorie() {","lastModifiedDate":"2022-10-19"},{"lineNumber":206,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":207,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":208,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":209,"author":{"gitId":"ruiqi7"},"content":"        @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":210,"author":{"gitId":"ruiqi7"},"content":"        public Map\u003cName, Calorie\u003e getFoodCalorieList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":211,"author":{"gitId":"ruiqi7"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":212,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":214,"author":{"gitId":"AkkFiros"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":215,"author":{"gitId":"nicolelim02"},"content":"        public Tip getTip() {","lastModifiedDate":"2022-10-24"},{"lineNumber":216,"author":{"gitId":"AkkFiros"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":217,"author":{"gitId":"AkkFiros"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"xav168"},"content":"     * A Model stub that contains a single food.","lastModifiedDate":"2022-10-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"AkkFiros"},"content":"    private class ModelStubWithFood extends ModelStub {","lastModifiedDate":"2022-10-09"},{"lineNumber":224,"author":{"gitId":"nicolelim02"},"content":"        private final Food food;","lastModifiedDate":"2022-10-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"AkkFiros"},"content":"        ModelStubWithFood(Food food) {","lastModifiedDate":"2022-10-09"},{"lineNumber":227,"author":{"gitId":"nicolelim02"},"content":"            requireNonNull(food);","lastModifiedDate":"2022-10-04"},{"lineNumber":228,"author":{"gitId":"nicolelim02"},"content":"            this.food \u003d food;","lastModifiedDate":"2022-10-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"AkkFiros"},"content":"        public boolean hasFood(Food food) {","lastModifiedDate":"2022-10-09"},{"lineNumber":233,"author":{"gitId":"nicolelim02"},"content":"            requireNonNull(food);","lastModifiedDate":"2022-10-04"},{"lineNumber":234,"author":{"gitId":"xav168"},"content":"            return this.food.isSameFood(food);","lastModifiedDate":"2022-10-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"xav168"},"content":"     * A Model stub that always accept the food being added.","lastModifiedDate":"2022-10-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"AkkFiros"},"content":"    private class ModelStubAcceptingFoodAdded extends ModelStub {","lastModifiedDate":"2022-10-09"},{"lineNumber":242,"author":{"gitId":"AkkFiros"},"content":"        final ArrayList\u003cFood\u003e foodsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"AkkFiros"},"content":"        public boolean hasFood(Food food) {","lastModifiedDate":"2022-10-09"},{"lineNumber":246,"author":{"gitId":"nicolelim02"},"content":"            requireNonNull(food);","lastModifiedDate":"2022-10-04"},{"lineNumber":247,"author":{"gitId":"xav168"},"content":"            return foodsAdded.stream().anyMatch(food::isSameFood);","lastModifiedDate":"2022-10-10"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"AkkFiros"},"content":"        public void addFood(Food food) {","lastModifiedDate":"2022-10-09"},{"lineNumber":252,"author":{"gitId":"nicolelim02"},"content":"            requireNonNull(food);","lastModifiedDate":"2022-10-04"},{"lineNumber":253,"author":{"gitId":"AkkFiros"},"content":"            foodsAdded.add(food);","lastModifiedDate":"2022-10-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"xav168"},"content":"        public ReadOnlyNutriGoals getNutriGoals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":258,"author":{"gitId":"xav168"},"content":"            return new NutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"AkkFiros":22,"ruiqi7":19,"xav168":33,"TanPingZhi":23,"nicolelim02":28,"-":137}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"    public void execute_emptyNutriGoals_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"    public void execute_nonEmptyNutriGoals_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"        Model model \u003d new ModelManager(getTypicalNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        expectedModel.setNutriGoals(new NutriGoals());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":32}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"xav168":1,"-":53}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_IDEAL_WEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.commons.util.StringUtil;","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.EditFoodDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"AkkFiros"},"content":"    public static final String VALID_APPLE_CALORIE \u003d \"50\";","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"AkkFiros"},"content":"    public static final String VALID_APPLE_NAME \u003d \"Apple\";","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"AkkFiros"},"content":"    public static final String VALID_BREAD_NAME \u003d \"Bread\";","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"AkkFiros"},"content":"    public static final String VALID_BREAD_CALORIE \u003d \"150\";","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"    public static final String VALID_SUSHI_NAME \u003d \"Sushi\";","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"    public static final String VALID_BISCUIT_NAME \u003d \"Biscuit\";","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"    public static final String VALID_TAG_BREAKFAST \u003d \"breakfast\";","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"    public static final String VALID_TAG_LUNCH \u003d \"lunch\";","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"    public static final String VALID_HEIGHT_AMOUNT \u003d \"170\";","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"    public static final String VALID_WEIGHT_AMOUNT \u003d \"60\";","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"    public static final String VALID_GENDER \u003d \"M\";","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"AkkFiros"},"content":"    public static final String CALORIE_DESC_BREAD \u003d \" \" + PREFIX_CALORIE + VALID_BREAD_CALORIE;","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"AkkFiros"},"content":"    public static final String NAME_DESC_BREAD \u003d \" \" + PREFIX_NAME + VALID_BREAD_NAME;","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"AkkFiros"},"content":"    public static final String TAG_DESC_BREAKFAST \u003d \" \" + PREFIX_TAG + VALID_TAG_BREAKFAST;","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"AkkFiros"},"content":"    public static final String TAG_DESC_LUNCH \u003d \" \" + PREFIX_TAG + VALID_TAG_LUNCH;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"    public static final String WEIGHT_VALID_WEIGHT \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_AMOUNT;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"    public static final String GENDER_VALID_GENDER \u003d \" \" + PREFIX_GENDER + VALID_GENDER;","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"    public static final String HEIGHT_VALID_HEIGHT \u003d \" \" + PREFIX_HEIGHT + VALID_HEIGHT_AMOUNT;","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"    public static final String IDEAL_VALID_WEIGHT \u003d \" \" + PREFIX_IDEAL_WEIGHT + VALID_WEIGHT_AMOUNT;","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"    public static final String VALID_AGE_DESC \u003d \" \" + PREFIX_AGE + \"20\";","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"    public static final String INVALID_WEIGHT_NEGATIVE \u003d \" \" + PREFIX_WEIGHT + \"-40\"; //negative weights not allowed","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"    public static final String INVALID_WEIGHT_TOO_MUCH \u003d \" \" + PREFIX_WEIGHT + \"1000\"; //number too large","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"    public static final String INVALID_WEIGHT_DESC \u003d \" \" + PREFIX_WEIGHT + \"abc\"; //should only contain integers","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"    public static final String INVALID_IDEAL_NEGATIVE \u003d \" \" + PREFIX_IDEAL_WEIGHT + \"-40\"; //no negative weights","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"    public static final String INVALID_IDEAL_TOO_MUCH \u003d \" \" + PREFIX_IDEAL_WEIGHT + \"1000\"; //number too large","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"    public static final String INVALID_IDEAL_DESC \u003d \" \" + PREFIX_IDEAL_WEIGHT + \"abc\"; //should only contain integers","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"    public static final String INVALID_HEIGHT_NEGATIVE \u003d \" \" + PREFIX_HEIGHT + \"-40\"; //negative weights not allowed","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"    public static final String INVALID_HEIGHT_TOO_MUCH \u003d \" \" + PREFIX_HEIGHT + \"1000\"; //number too large","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"    public static final String INVALID_HEIGHT_DESC \u003d \" \" + PREFIX_HEIGHT + \"abc\"; //should only contain integers","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"man\"; //should be a single char","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Sushi\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"breakfast*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"nicolelim02"},"content":"    public static final EditCommand.EditFoodDescriptor DESC_BREAKFAST \u003d new EditFoodDescriptorBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"AkkFiros"},"content":"            .withName(VALID_BREAD_NAME)","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"nicolelim02"},"content":"            .withCalorie(\"150\")","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"nicolelim02"},"content":"            .withTags(VALID_TAG_BREAKFAST)","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"nicolelim02"},"content":"    public static final EditCommand.EditFoodDescriptor DESC_LUNCH \u003d new EditFoodDescriptorBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"nicolelim02"},"content":"            .withName(VALID_SUSHI_NAME)","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"nicolelim02"},"content":"            .withCalorie(\"300\")","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"nicolelim02"},"content":"            .withTags(VALID_TAG_LUNCH)","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"nicolelim02"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"xav168"},"content":"     * - the NutriGoals, filtered food list and selected food in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"xav168"},"content":"        NutriGoals expectedNutriGoals \u003d new NutriGoals(actualModel.getNutriGoals());","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"AkkFiros"},"content":"        List\u003cFood\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredFoodList());","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":122,"author":{"gitId":"xav168"},"content":"        assertEquals(expectedNutriGoals, actualModel.getNutriGoals());","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"AkkFiros"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredFoodList());","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"xav168"},"content":"     * Updates {@code model}\u0027s filtered list to show only the food at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"xav168"},"content":"     * {@code model}\u0027s NutriGoals.","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"xav168"},"content":"    public static void showFoodAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"AkkFiros"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredFoodList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"AkkFiros"},"content":"        Food food \u003d model.getFilteredFoodList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"ruiqi7"},"content":"        filterListByFoodName(model, food);","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"AkkFiros"},"content":"        assertEquals(1, model.getFilteredFoodList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"ruiqi7"},"content":"     * Updates {@code model}\u0027s filtered list to show only foods with the given {@code Food} name.","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"ruiqi7"},"content":"    public static void filterListByFoodName(Model model, Food food) {","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"ruiqi7"},"content":"        final String[] splitName \u003d food.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"ruiqi7"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(splitName[0]);","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"ruiqi7"},"content":"        Predicate\u003cFood\u003e filterPredicate \u003d foodToFilter -\u003e keywords.stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"ruiqi7"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(foodToFilter.getName().fullName, keyword));","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"ruiqi7"},"content":"        model.updateFilteredFoodList(filterPredicate);","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"AkkFiros":14,"ruiqi7":13,"xav168":38,"nicolelim02":18,"-":65}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.showFoodAtIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalIndexes.INDEX_FIRST_MEAL;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalIndexes.INDEX_SECOND_MEAL;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"    private Model model \u003d new ModelManager(getTypicalNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"        Food foodToDelete \u003d model.getFilteredFoodList().get(INDEX_FIRST_MEAL.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_MEAL);","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MEAL_SUCCESS, foodToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"AkkFiros"},"content":"        expectedModel.deleteFood(foodToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"AkkFiros"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredFoodList().size() + 1);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_MEAL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"        showFoodAtIndex(model, INDEX_FIRST_MEAL);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"        Food foodToDelete \u003d model.getFilteredFoodList().get(INDEX_FIRST_MEAL.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_MEAL);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MEAL_SUCCESS, foodToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"        Model expectedModel \u003d new ModelManager(model.getNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"AkkFiros"},"content":"        expectedModel.deleteFood(foodToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"        showNoFood(expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"        showFoodAtIndex(model, INDEX_FIRST_MEAL);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEAL;","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"        // ensures that outOfBoundIndex is still in bounds of food list","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"xav168"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getNutriGoals().getFoodList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_MEAL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"xav168"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_MEAL);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"xav168"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_MEAL);","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"xav168"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_MEAL);","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"xav168"},"content":"        // different food -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"xav168"},"content":"    private void showNoFood(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"AkkFiros"},"content":"        model.updateFilteredFoodList(p -\u003e false);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"AkkFiros"},"content":"        assertTrue(model.getFilteredFoodList().isEmpty());","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"AkkFiros":5,"xav168":35,"-":69}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.DESC_BREAKFAST;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.DESC_LUNCH;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_BISCUIT_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_TAG_BREAKFAST;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.showFoodAtIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalIndexes.INDEX_FIRST_MEAL;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalIndexes.INDEX_SECOND_MEAL;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.EditFoodDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"    private Model model \u003d new ModelManager(getTypicalNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"        Model expectedModel \u003d new ModelManager(new NutriGoals(model.getNutriGoals()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"AkkFiros"},"content":"        Food target \u003d model.getFilteredFoodList().get(0);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"        Food editedFood \u003d new FoodBuilder().withDateTime(target.getDateTime().toString()).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FOOD_SUCCESS, editedFood);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder(editedFood).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_MEAL, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"AkkFiros"},"content":"        expectedModel.setFood(target, editedFood);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"        Index indexLastFood \u003d Index.fromOneBased(model.getFilteredFoodList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"        Food lastFood \u003d model.getFilteredFoodList().get(indexLastFood.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"        FoodBuilder foodInList \u003d new FoodBuilder(lastFood);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"        Food editedFood \u003d foodInList.withName(VALID_BISCUIT_NAME)","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"                .withTag(VALID_TAG_BREAKFAST).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder().withName(VALID_BISCUIT_NAME)","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"                .withTags(VALID_TAG_BREAKFAST).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastFood, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FOOD_SUCCESS, editedFood);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"        Model expectedModel \u003d new ModelManager(new NutriGoals(model.getNutriGoals()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"AkkFiros"},"content":"        expectedModel.setFood(lastFood, editedFood);","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_MEAL, new EditFoodDescriptor());","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"xav168"},"content":"        Food editedFood \u003d model.getFilteredFoodList().get(INDEX_FIRST_MEAL.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"nicolelim02"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FOOD_SUCCESS, editedFood);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"xav168"},"content":"        Model expectedModel \u003d new ModelManager(new NutriGoals(model.getNutriGoals()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"xav168"},"content":"        showFoodAtIndex(model, INDEX_FIRST_MEAL);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"xav168"},"content":"        Food foodInFilteredList \u003d model.getFilteredFoodList().get(INDEX_FIRST_MEAL.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"nicolelim02"},"content":"        Food editedFood \u003d new FoodBuilder(foodInFilteredList).withName(VALID_BISCUIT_NAME).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"xav168"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_MEAL,","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"nicolelim02"},"content":"                new EditFoodDescriptorBuilder().withName(VALID_BISCUIT_NAME).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"nicolelim02"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FOOD_SUCCESS, editedFood);","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"xav168"},"content":"        Model expectedModel \u003d new ModelManager(new NutriGoals(model.getNutriGoals()), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"AkkFiros"},"content":"        expectedModel.setFood(model.getFilteredFoodList().get(0), editedFood);","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"xav168"},"content":"    public void execute_invalidFoodIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"AkkFiros"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredFoodList().size() + 1);","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"nicolelim02"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder().withName(VALID_BISCUIT_NAME).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"xav168"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_MEAL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"xav168"},"content":"     * but smaller than size of nutriGoals","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"xav168"},"content":"    public void execute_invalidFoodIndexFilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"xav168"},"content":"        showFoodAtIndex(model, INDEX_FIRST_MEAL);","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"xav168"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEAL;","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"xav168"},"content":"        // ensures that outOfBoundIndex is still in bounds of nutriGoals list","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"xav168"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getNutriGoals().getFoodList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"nicolelim02"},"content":"                new EditFoodDescriptorBuilder().withName(VALID_BISCUIT_NAME).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"xav168"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_MEAL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"nicolelim02"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_MEAL, DESC_BREAKFAST);","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"nicolelim02"},"content":"        EditFoodDescriptor copyDescriptor \u003d new EditFoodDescriptor(DESC_BREAKFAST);","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"xav168"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_MEAL, copyDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_MEAL, DESC_BREAKFAST)));","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_MEAL, DESC_LUNCH)));","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"AkkFiros":5,"ruiqi7":2,"xav168":42,"nicolelim02":20,"-":83}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/EditFoodDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.DESC_BREAKFAST;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.DESC_LUNCH;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.EditFoodDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"public class EditFoodDescriptorTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"        EditFoodDescriptor descriptorWithSameValues \u003d new EditFoodDescriptor(\"Bread\", \"150\",","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"                \"breakfast\");","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(DESC_BREAKFAST.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(DESC_BREAKFAST.equals(DESC_BREAKFAST));","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(DESC_BREAKFAST.equals(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(DESC_BREAKFAST.equals(5));","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(DESC_BREAKFAST.equals(DESC_LUNCH));","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"        EditFoodDescriptor editedBreakfast \u003d new EditFoodDescriptorBuilder(DESC_BREAKFAST)","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"                .withName(\"dumplings\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(DESC_BREAKFAST.equals(editedBreakfast));","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"        editedBreakfast \u003d new EditFoodDescriptorBuilder(DESC_BREAKFAST).withTags(\"dinner\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(DESC_BREAKFAST.equals(editedBreakfast));","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"xav168":5,"nicolelim02":13,"-":25}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"xav168":5,"-":15}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"    private static final Name FOOD_RICE \u003d new Name(\"rice\");","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"    private static final Name FOOD_ONION \u003d new Name(\"onion\");","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"    private static final Calorie CALORIE_RICE \u003d new Calorie(\"260\");","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"    private Model model \u003d new ModelManager(getTypicalNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(FOOD_RICE);","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(FOOD_ONION);","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(FOOD_RICE);","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        // different food -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"    public void execute_foodWithCalorieContent_calorieContentFound() {","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"ruiqi7"},"content":"        FindCommand findCommand \u003d new FindCommand(FOOD_RICE);","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"                String.format(FindCommand.MESSAGE_FIND_FOOD_CALORIE_SUCCESS, FOOD_RICE, CALORIE_RICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"ruiqi7"},"content":"        assertCommandSuccess(findCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"ruiqi7"},"content":"    public void execute_foodWithNoCalorieContent_noCalorieContentFound() {","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"ruiqi7"},"content":"        FindCommand findCommand \u003d new FindCommand(FOOD_ONION);","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"ruiqi7"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_FOOD_CALORIES_NOT_FOUND, FOOD_ONION);","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"ruiqi7"},"content":"        assertCommandFailure(findCommand, model, expectedMessage);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ruiqi7":18,"xav168":9,"-":36}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"xav168":5,"-":15}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.showFoodAtIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.testutil.FoodBuilder.DEFAULT_EARLIER_TIME;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalIndexes.INDEX_FIRST_MEAL;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.DateTime;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.IsFoodAddedOnThisDatePredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"public class ListCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"    private Model model;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"        model \u003d new ModelManager(getTypicalNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"        expectedModel \u003d new ModelManager(model.getNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"    public void execute_listIsNotFiltered_showsAllFoodsAddedToday() {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"        DateTime today \u003d new DateTime();","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate isTodayPredicate \u003d new IsFoodAddedOnThisDatePredicate(today);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"        ListCommand listCommand \u003d new ListCommand(isTodayPredicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS, today.getDate());","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"        assertCommandSuccess(listCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"    public void execute_listIsFilteredForToday_showsAllFoodsAddedToday() {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"        DateTime today \u003d new DateTime();","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate isTodayPredicate \u003d new IsFoodAddedOnThisDatePredicate(today);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"        ListCommand listCommand \u003d new ListCommand(isTodayPredicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS, today.getDate());","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"        showFoodAtIndex(model, INDEX_FIRST_MEAL);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"        assertCommandSuccess(listCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"ruiqi7"},"content":"    public void execute_listIsFilteredForADay_showsAllFoodsAddedOnThatDay() {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"ruiqi7"},"content":"        Food foodToAdd \u003d new FoodBuilder().withDateTime(DEFAULT_EARLIER_TIME).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"ruiqi7"},"content":"        model.addFood(foodToAdd);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"ruiqi7"},"content":"        expectedModel.addFood(foodToAdd);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"ruiqi7"},"content":"        DateTime date \u003d new DateTime(DEFAULT_EARLIER_TIME);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate datePredicate \u003d new IsFoodAddedOnThisDatePredicate(date);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"ruiqi7"},"content":"        ListCommand listCommand \u003d new ListCommand(datePredicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"ruiqi7"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS, date.getDate());","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"ruiqi7"},"content":"        expectedModel.updateFilteredFoodList(datePredicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"ruiqi7"},"content":"        assertCommandSuccess(listCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"ruiqi7"},"content":"    public void execute_filteredListIsEmpty_showsNoFoods() {","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"ruiqi7"},"content":"        DateTime date \u003d new DateTime(DEFAULT_EARLIER_TIME);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate datePredicate \u003d new IsFoodAddedOnThisDatePredicate(date);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"ruiqi7"},"content":"        ListCommand listCommand \u003d new ListCommand(datePredicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"ruiqi7"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_EMPTY_FOOD_LIST, date.getDate());","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"ruiqi7"},"content":"        expectedModel.updateFilteredFoodList(datePredicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"ruiqi7"},"content":"        assertCommandSuccess(listCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ruiqi7":45,"xav168":35}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/ProfileCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.model.Location;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Tip;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.meal.IsFoodAddedOnThisDatePredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.testutil.UserBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"public class ProfileCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"    public void execute_validUser_success() throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"        Model model \u003d new ModelStubWithUser();","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"        User validMaleUser \u003d new UserBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"        // male user","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"        new SetupCommandStub(validMaleUser).execute(model); // set up the profile","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"        CommandResult actualCommandResult \u003d new ProfileCommand().execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"        String expectedMessage \u003d \"Here are your details: \\n\" + validMaleUser;","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(expectedCommandResult, actualCommandResult);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"        // female user","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"        User validFemaleUser \u003d new UserBuilder().withGender(\"F\")","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"                .withHeight(\"165\")","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"                .withWeight(\"50\")","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"nicolelim02"},"content":"                .withIdeal(\"50\")","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"        new SetupCommandStub(validFemaleUser).execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"        actualCommandResult \u003d new ProfileCommand().execute(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"        expectedMessage \u003d \"Here are your details: \\n\" + validFemaleUser;","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"        expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(actualCommandResult, expectedCommandResult);","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"    public void execute_profileNotCreated_exceptionThrown() {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"        ModelStubWithUser model \u003d new ModelStubWithUser();","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(CommandException.class, () -\u003e new ProfileCommand().execute(model));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"nicolelim02"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"nicolelim02"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"nicolelim02"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"nicolelim02"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"nicolelim02"},"content":"        public Path getNutriGoalsFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"nicolelim02"},"content":"        public void setNutriGoalsFilePath(Path nutriGoalsFilePath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"nicolelim02"},"content":"        public void setNutriGoals(ReadOnlyNutriGoals nutriGoals) {","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"nicolelim02"},"content":"        public ReadOnlyNutriGoals getNutriGoals() {","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"nicolelim02"},"content":"        public void setCalorieTarget(Calorie calorieTarget) {","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"nicolelim02"},"content":"        public Calorie getCalorieTarget() {","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"nicolelim02"},"content":"        public boolean hasFood(Food food) {","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"nicolelim02"},"content":"        public void deleteFood(Food target) {","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"nicolelim02"},"content":"        public void addFood(Food food) {","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"nicolelim02"},"content":"        public void setFood(Food target, Food editedFood) {","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"nicolelim02"},"content":"        public ObservableList\u003cFood\u003e getFilteredFoodList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"nicolelim02"},"content":"        public void updateFilteredFoodList(Predicate\u003cFood\u003e predicate) {","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"nicolelim02"},"content":"        public void setUserDetails(User user) {","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"nicolelim02"},"content":"        public User getUserDetails() {","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"nicolelim02"},"content":"        public IsFoodAddedOnThisDatePredicate getDatePredicate() {","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"nicolelim02"},"content":"        public boolean isFilteredFoodListEmpty() {","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"nicolelim02"},"content":"        public Calorie calculateSuggestedCalorie() {","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":170,"author":{"gitId":"TanPingZhi"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"TanPingZhi"},"content":"        public List\u003cLocation\u003e getNusGymLocations() {","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"TanPingZhi"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":174,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":175,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"nicolelim02"},"content":"        public boolean isUserCreated() {","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":180,"author":{"gitId":"ruiqi7"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":181,"author":{"gitId":"ruiqi7"},"content":"        public int getCalorieDifference() {","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"ruiqi7"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-18"},{"lineNumber":183,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":184,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":186,"author":{"gitId":"ruiqi7"},"content":"        public Calorie getTotalCalorie() {","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":188,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":189,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":190,"author":{"gitId":"ruiqi7"},"content":"        @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"ruiqi7"},"content":"        public Map\u003cName, Calorie\u003e getFoodCalorieList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":193,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"AkkFiros"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"nicolelim02"},"content":"        public Tip getTip() {","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"AkkFiros"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":198,"author":{"gitId":"AkkFiros"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":200,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":201,"author":{"gitId":"nicolelim02"},"content":"    private static class ModelStubWithUser extends ModelStub {","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"nicolelim02"},"content":"        private User user \u003d new User();","lastModifiedDate":"2022-10-15"},{"lineNumber":203,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":204,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":205,"author":{"gitId":"nicolelim02"},"content":"        public User getUserDetails() {","lastModifiedDate":"2022-10-15"},{"lineNumber":206,"author":{"gitId":"nicolelim02"},"content":"            return this.user;","lastModifiedDate":"2022-10-15"},{"lineNumber":207,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":208,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":209,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":210,"author":{"gitId":"nicolelim02"},"content":"        public void setUserDetails(User newUser) {","lastModifiedDate":"2022-10-15"},{"lineNumber":211,"author":{"gitId":"nicolelim02"},"content":"            this.user \u003d newUser;","lastModifiedDate":"2022-10-15"},{"lineNumber":212,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":213,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":214,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":215,"author":{"gitId":"nicolelim02"},"content":"        public ReadOnlyNutriGoals getNutriGoals() {","lastModifiedDate":"2022-10-15"},{"lineNumber":216,"author":{"gitId":"nicolelim02"},"content":"            return new NutriGoals();","lastModifiedDate":"2022-10-15"},{"lineNumber":217,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":218,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"nicolelim02"},"content":"        public boolean isUserCreated() {","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"nicolelim02"},"content":"            return user.isUserCreated();","lastModifiedDate":"2022-10-16"},{"lineNumber":222,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":224,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":225,"author":{"gitId":"nicolelim02"},"content":"    private static class SetupCommandStub extends SetupCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":226,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":227,"author":{"gitId":"nicolelim02"},"content":"        private final User user;","lastModifiedDate":"2022-10-15"},{"lineNumber":228,"author":{"gitId":"nicolelim02"},"content":"        /**","lastModifiedDate":"2022-10-15"},{"lineNumber":229,"author":{"gitId":"nicolelim02"},"content":"         * Creates a SetupCommandStub for the user","lastModifiedDate":"2022-10-17"},{"lineNumber":230,"author":{"gitId":"nicolelim02"},"content":"         *","lastModifiedDate":"2022-10-15"},{"lineNumber":231,"author":{"gitId":"nicolelim02"},"content":"         * @param user User profile to set up","lastModifiedDate":"2022-10-15"},{"lineNumber":232,"author":{"gitId":"nicolelim02"},"content":"         */","lastModifiedDate":"2022-10-15"},{"lineNumber":233,"author":{"gitId":"nicolelim02"},"content":"        public SetupCommandStub(User user) {","lastModifiedDate":"2022-10-15"},{"lineNumber":234,"author":{"gitId":"nicolelim02"},"content":"            super(user);","lastModifiedDate":"2022-10-15"},{"lineNumber":235,"author":{"gitId":"nicolelim02"},"content":"            this.user \u003d user;","lastModifiedDate":"2022-10-15"},{"lineNumber":236,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":237,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":238,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":239,"author":{"gitId":"nicolelim02"},"content":"        public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-15"},{"lineNumber":240,"author":{"gitId":"nicolelim02"},"content":"            requireNonNull(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":241,"author":{"gitId":"nicolelim02"},"content":"            model.setUserDetails(user);","lastModifiedDate":"2022-10-15"},{"lineNumber":242,"author":{"gitId":"nicolelim02"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, model.getUserDetails()));","lastModifiedDate":"2022-10-15"},{"lineNumber":243,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":244,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":245,"author":{"gitId":"nicolelim02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"AkkFiros":4,"ruiqi7":11,"TanPingZhi":7,"nicolelim02":223}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/ReviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code ReviewCommand}.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"public class ReviewCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"    private static final int ACTUAL_CALORIE_COUNT \u003d 14000;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"    private static final int LOWER_CALORIE_COUNT \u003d 10000;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"    private static final int HIGHER_CALORIE_COUNT \u003d 20000;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"    private static final Calorie EXACT_CALORIE_TARGET \u003d new Calorie(String.valueOf(ACTUAL_CALORIE_COUNT));","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"    private static final Calorie LOWER_CALORIE_TARGET \u003d new Calorie(String.valueOf(LOWER_CALORIE_COUNT));","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"    private static final Calorie HIGHER_CALORIE_TARGET \u003d new Calorie(String.valueOf(HIGHER_CALORIE_COUNT));","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"    private Model model;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"        model \u003d new ModelManager(getTypicalNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"        expectedModel \u003d new ModelManager(model.getNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"    public void execute_calorieDeficiency_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"        ReviewCommand reviewCommand \u003d new ReviewCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"        String expectedMessage \u003d String.format(ReviewCommand.MESSAGE_REVIEW_DETAILS, ACTUAL_CALORIE_COUNT,","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"                HIGHER_CALORIE_COUNT, String.format(ReviewCommand.MESSAGE_CALORIE_DEFICIENCY,","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"                        HIGHER_CALORIE_COUNT - ACTUAL_CALORIE_COUNT));","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"        model.setCalorieTarget(HIGHER_CALORIE_TARGET);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"ruiqi7"},"content":"        expectedModel.setCalorieTarget(HIGHER_CALORIE_TARGET);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"        assertCommandSuccess(reviewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"    public void execute_calorieExcess_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"        ReviewCommand reviewCommand \u003d new ReviewCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"        String expectedMessage \u003d String.format(ReviewCommand.MESSAGE_REVIEW_DETAILS, ACTUAL_CALORIE_COUNT,","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"                LOWER_CALORIE_COUNT, String.format(ReviewCommand.MESSAGE_CALORIE_EXCESS,","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"ruiqi7"},"content":"                        ACTUAL_CALORIE_COUNT - LOWER_CALORIE_COUNT));","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"        model.setCalorieTarget(LOWER_CALORIE_TARGET);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"ruiqi7"},"content":"        expectedModel.setCalorieTarget(LOWER_CALORIE_TARGET);","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"ruiqi7"},"content":"        assertCommandSuccess(reviewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"ruiqi7"},"content":"    public void execute_calorieSufficiency_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"ruiqi7"},"content":"        ReviewCommand reviewCommand \u003d new ReviewCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"ruiqi7"},"content":"        String expectedMessage \u003d String.format(ReviewCommand.MESSAGE_REVIEW_DETAILS, ACTUAL_CALORIE_COUNT,","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"ruiqi7"},"content":"                ACTUAL_CALORIE_COUNT, ReviewCommand.MESSAGE_CALORIE_SUFFICIENCY);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"ruiqi7"},"content":"        model.setCalorieTarget(EXACT_CALORIE_TARGET);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"ruiqi7"},"content":"        expectedModel.setCalorieTarget(EXACT_CALORIE_TARGET);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"ruiqi7"},"content":"        assertCommandSuccess(reviewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ruiqi7":67,"nicolelim02":2}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/SetupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.model.Location;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Tip;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.IsFoodAddedOnThisDatePredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.UserBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"public class SetupCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"    public void constructor_nullUserThrowsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SetupCommand(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"    public void execute_userAcceptedByModelSuccess() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"        ModelStubWithUser modelStub \u003d new ModelStubWithUser();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"        User validUser \u003d new UserBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"        CommandResult commandResult \u003d new SetupCommand(validUser).execute(modelStub);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"        assertEquals(String.format(SetupCommand.MESSAGE_SUCCESS, validUser), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"        assertEquals(validUser, modelStub.user);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"        User userA \u003d new UserBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"        User userB \u003d new UserBuilder().withGender(\"F\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"        SetupCommand addUserA \u003d new SetupCommand(userA);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"        SetupCommand addUserB \u003d new SetupCommand(userB);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"        assertTrue(addUserA.equals(addUserA));","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"        assertFalse(addUserA.equals(2));","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"        assertFalse(addUserA.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"        assertFalse(addUserA.equals(addUserB));","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"xav168"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"xav168"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"xav168"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"xav168"},"content":"        public Path getNutriGoalsFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"xav168"},"content":"        public void setNutriGoalsFilePath(Path nutriGoalsFilePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"xav168"},"content":"        public void addFood(Food food) {","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"xav168"},"content":"        public void setNutriGoals(ReadOnlyNutriGoals newData) {","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"xav168"},"content":"        public ReadOnlyNutriGoals getNutriGoals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"xav168"},"content":"        /**","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"xav168"},"content":"         * @param calorieTarget Sets the user\u0027s calorie target","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"xav168"},"content":"         */","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"xav168"},"content":"        public void setCalorieTarget(Calorie calorieTarget) {","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"xav168"},"content":"        /**","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"xav168"},"content":"         * @return Calorie User\u0027s calorie target","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"xav168"},"content":"         */","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"xav168"},"content":"        public Calorie getCalorieTarget() {","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"xav168"},"content":"        public boolean hasFood(Food food) {","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"xav168"},"content":"        public void deleteFood(Food target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"xav168"},"content":"        public void setFood(Food target, Food editedFood) {","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"xav168"},"content":"        public ObservableList\u003cFood\u003e getFilteredFoodList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"xav168"},"content":"        public void updateFilteredFoodList(Predicate\u003cFood\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"xav168"},"content":"        public void setUserDetails(User user) {","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"xav168"},"content":"        public User getUserDetails() {","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"xav168"},"content":"        public IsFoodAddedOnThisDatePredicate getDatePredicate() {","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"xav168"},"content":"        public boolean isFilteredFoodListEmpty() {","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"nicolelim02"},"content":"        public Calorie calculateSuggestedCalorie() {","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-17"},{"lineNumber":177,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"TanPingZhi"},"content":"        public List\u003cLocation\u003e getNusGymLocations() {","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"TanPingZhi"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":183,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"nicolelim02"},"content":"        public boolean isUserCreated() {","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"ruiqi7"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":189,"author":{"gitId":"ruiqi7"},"content":"        public int getCalorieDifference() {","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"ruiqi7"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-18"},{"lineNumber":191,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":192,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"ruiqi7"},"content":"        public Calorie getTotalCalorie() {","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":196,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":197,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":198,"author":{"gitId":"ruiqi7"},"content":"        @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"ruiqi7"},"content":"        public Map\u003cName, Calorie\u003e getFoodCalorieList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"nicolelim02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":201,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":202,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"AkkFiros"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"nicolelim02"},"content":"        public Tip getTip() {","lastModifiedDate":"2022-10-24"},{"lineNumber":205,"author":{"gitId":"AkkFiros"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"AkkFiros"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"xav168"},"content":"    private class ModelStubWithUser extends ModelStub {","lastModifiedDate":"2022-10-11"},{"lineNumber":211,"author":{"gitId":"xav168"},"content":"        final ArrayList\u003cFood\u003e foodsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":212,"author":{"gitId":"xav168"},"content":"        private User user \u003d new User();","lastModifiedDate":"2022-10-11"},{"lineNumber":213,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":214,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"xav168"},"content":"        public User getUserDetails() {","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"xav168"},"content":"            return this.user;","lastModifiedDate":"2022-10-11"},{"lineNumber":217,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":220,"author":{"gitId":"xav168"},"content":"        public void setUserDetails(User newUser) {","lastModifiedDate":"2022-10-11"},{"lineNumber":221,"author":{"gitId":"xav168"},"content":"            this.user \u003d newUser;","lastModifiedDate":"2022-10-11"},{"lineNumber":222,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":223,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":225,"author":{"gitId":"xav168"},"content":"        public ReadOnlyNutriGoals getNutriGoals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":226,"author":{"gitId":"xav168"},"content":"            return new NutriGoals();","lastModifiedDate":"2022-10-11"},{"lineNumber":227,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":228,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":229,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"AkkFiros":4,"ruiqi7":10,"xav168":191,"TanPingZhi":5,"nicolelim02":19}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/SuggestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.testutil.UserBuilder;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"public class SuggestCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"    private static final User DEFAULT_USER \u003d new UserBuilder().build();","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"    private final Model model \u003d new ModelManager(getTypicalNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"    public void execute_suggestCommand_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"        SuggestCommand suggestCommand \u003d new SuggestCommand();","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"        String suggestedCalorie \u003d \"1928 calories\";","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"        model.setUserDetails(DEFAULT_USER);","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"        String expectedMessage \u003d String.format(SuggestCommand.MESSAGE_SUGGEST_DETAILS, suggestedCalorie);","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"        assertCommandSuccess(suggestCommand, model, expectedMessage, model);","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"    public void execute_suggestCommandF_failure() {","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"        SuggestCommand suggestCommand \u003d new SuggestCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"        String expectedMessage \u003d SuggestCommand.MESSAGE_NO_PROFILE_CREATED;","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"        assertCommandFailure(suggestCommand, model, expectedMessage);","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"nicolelim02":36}},{"path":"src/test/java/seedu/nutrigoals/logic/commands/TargetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"TanPingZhi"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"TanPingZhi"},"content":" * {@code TargetCommand}.","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"public class TargetCommandTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"TanPingZhi"},"content":"    private static final Calorie FIVE_CALORIE \u003d new Calorie(\"5\");","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"    private static final Calorie TEN_CALORIE \u003d new Calorie(\"10\");","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    private Model model \u003d new ModelManager(getTypicalNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"TanPingZhi"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"TanPingZhi"},"content":"    void execute_validTargetValueSuccess() {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"        TargetCommand targetCommand \u003d new TargetCommand(FIVE_CALORIE);","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"TanPingZhi"},"content":"        String expectedMessage \u003d String.format(TargetCommand.MESSAGE_TARGET_SET_SUCCESS, FIVE_CALORIE);","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getNutriGoals(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"TanPingZhi"},"content":"        expectedModel.setCalorieTarget(FIVE_CALORIE);","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"TanPingZhi"},"content":"        assertCommandSuccess(targetCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"TanPingZhi"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"TanPingZhi"},"content":"    void testEquals() {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"TanPingZhi"},"content":"        // same target -\u003e true","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"TanPingZhi"},"content":"        TargetCommand targetCommand \u003d new TargetCommand(FIVE_CALORIE);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"TanPingZhi"},"content":"        TargetCommand targetCommand1 \u003d new TargetCommand(FIVE_CALORIE);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"TanPingZhi"},"content":"        assertTrue(targetCommand.equals(targetCommand1));","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"TanPingZhi"},"content":"        // different target -\u003e false","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"TanPingZhi"},"content":"        TargetCommand targetCommand2 \u003d new TargetCommand(TEN_CALORIE);","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"TanPingZhi"},"content":"        assertFalse(targetCommand.equals(targetCommand2));","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"TanPingZhi"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"xav168":9,"TanPingZhi":38}},{"path":"src/test/java/seedu/nutrigoals/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_MULTIPLE_TAGS_ERROR;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.CALORIE_DESC_BREAD;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.NAME_DESC_BREAD;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.TAG_DESC_BREAKFAST;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.TAG_DESC_LUNCH;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_APPLE_CALORIE;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_APPLE_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_BREAD_CALORIE;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_TAG_BREAKFAST;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_TAG_LUNCH;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.BREAD;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"AkkFiros"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"AkkFiros"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"        Food expectedFood \u003d new FoodBuilder(BREAD).withCalorie(VALID_BREAD_CALORIE).withTag(VALID_TAG_LUNCH).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"AkkFiros"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"AkkFiros"},"content":"        assertParseSuccess(parser, NAME_DESC_BREAD + CALORIE_DESC_BREAD","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"AkkFiros"},"content":"                + TAG_DESC_LUNCH, new AddCommand(expectedFood));","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"AkkFiros"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"AkkFiros"},"content":"        assertParseSuccess(parser, NAME_DESC_BREAD + CALORIE_DESC_BREAD","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"AkkFiros"},"content":"                + TAG_DESC_LUNCH, new AddCommand(expectedFood));","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"        // multiple tags - should not be allowed to input multiple tags","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, NAME_DESC_BREAD + CALORIE_DESC_BREAD","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"                + TAG_DESC_LUNCH + TAG_DESC_BREAKFAST, MESSAGE_MULTIPLE_TAGS_ERROR);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"AkkFiros"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"AkkFiros"},"content":"        assertParseFailure(parser, VALID_APPLE_NAME,","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"        // missing calorie field","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"        assertParseFailure(parser, NAME_DESC_BREAD + TAG_DESC_BREAKFAST, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"        // missing calorie prefix","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"        assertParseFailure(parser, NAME_DESC_BREAD + VALID_APPLE_CALORIE + TAG_DESC_BREAKFAST,","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"        // missing tag","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"        assertParseFailure(parser, NAME_DESC_BREAD + CALORIE_DESC_BREAD + VALID_BREAD_CALORIE,","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"nicolelim02"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"        // missing tag prefix","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"        assertParseFailure(parser, NAME_DESC_BREAD + CALORIE_DESC_BREAD + VALID_TAG_BREAKFAST,","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"nicolelim02"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"AkkFiros"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"AkkFiros"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"AkkFiros"},"content":"        // invalid name","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"AkkFiros"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + CALORIE_DESC_BREAD","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"                + TAG_DESC_BREAKFAST , Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"AkkFiros"},"content":"        // invalid tag","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"AkkFiros"},"content":"        assertParseFailure(parser, NAME_DESC_BREAD + CALORIE_DESC_BREAD","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"xav168"},"content":"                + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"AkkFiros"},"content":"        // one invalid values, only first invalid value reported","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"AkkFiros"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + CALORIE_DESC_BREAD + TAG_DESC_LUNCH,","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"AkkFiros"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"AkkFiros"},"content":"        // non-empty preamble","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"AkkFiros"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BREAD + CALORIE_DESC_BREAD","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"xav168"},"content":"                        + TAG_DESC_BREAKFAST,","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"AkkFiros"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"AkkFiros"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"AkkFiros":29,"xav168":29,"nicolelim02":16,"-":18}},{"path":"src/test/java/seedu/nutrigoals/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_MULTIPLE_TAGS_ERROR;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    public void tokenize_emptyArgsString_noValues() throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"    public void tokenize_oneArgument() throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"xav168"},"content":"    public void tokenize_multipleArguments() throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"xav168"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":128,"author":{"gitId":"xav168"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"xav168"},"content":"            assertEquals(MESSAGE_MULTIPLE_TAGS_ERROR, e.getMessage());","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"xav168"},"content":"    public void tokenize_multipleArgumentsJoined() throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":143,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"xav168":18,"-":139}},{"path":"src/test/java/seedu/nutrigoals/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"xav168":3,"-":36}},{"path":"src/test/java/seedu/nutrigoals/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalIndexes.INDEX_FIRST_MEAL;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_MEAL));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"xav168":7,"-":25}},{"path":"src/test/java/seedu/nutrigoals/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.NAME_DESC_BREAD;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_BREAD_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_TAG_BREAKFAST;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalIndexes.INDEX_FIRST_MEAL;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalIndexes.INDEX_SECOND_MEAL;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalIndexes.INDEX_THIRD_MEAL;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.EditFoodDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"    private static final String TAG_DESC_BREAKFAST \u003d \" \" + PREFIX_TAG + \"breakfast\";","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"    private static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Bread\u0026\";","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"    private static final String VALID_CALORIE \u003d \"200\";","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"    private static final String VALID_CALORIE_DESC \u003d \" \" + PREFIX_CALORIE + VALID_CALORIE;","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"AkkFiros"},"content":"        assertParseFailure(parser, VALID_BREAD_NAME, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_BREAD, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_BREAD, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_TAG + \"breakfast*\", Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"        Index targetIndex \u003d INDEX_SECOND_MEAL;","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_BREAKFAST","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"                + NAME_DESC_BREAD + VALID_CALORIE_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"nicolelim02"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"AkkFiros"},"content":"                .withName(VALID_BREAD_NAME)","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"                .withTags(VALID_TAG_BREAKFAST)","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"nicolelim02"},"content":"                .withCalorie(VALID_CALORIE)","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"nicolelim02"},"content":"                .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"xav168"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEAL;","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"nicolelim02"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_BREAKFAST;","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"nicolelim02"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder().withTags(VALID_TAG_BREAKFAST).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"xav168"},"content":"        Index targetIndex \u003d INDEX_THIRD_MEAL;","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"nicolelim02"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_BREAD;","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"AkkFiros"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder().withName(VALID_BREAD_NAME).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"nicolelim02"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_BREAKFAST;","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"nicolelim02"},"content":"        descriptor \u003d new EditFoodDescriptorBuilder().withTags(VALID_TAG_BREAKFAST).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":113,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"nicolelim02"},"content":"        // calorie","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"nicolelim02"},"content":"        userInput \u003d targetIndex.getOneBased() + VALID_CALORIE_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"nicolelim02"},"content":"        descriptor \u003d new EditFoodDescriptorBuilder().withCalorie(VALID_CALORIE).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"AkkFiros":3,"xav168":25,"nicolelim02":21,"-":71}},{"path":"src/test/java/seedu/nutrigoals/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.FindCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"    public void parse_blankArg_throwsParseException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"    public void parse_invalidFoodName_throwsParseException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"        assertParseFailure(parser, \"r!ce\", Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(new Name(\"rice\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"        assertParseSuccess(parser, \"rice\", expectedFindCommand);","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"        // whitespaces","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"        assertParseSuccess(parser, \" \\n rice \\t\", expectedFindCommand);","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"ruiqi7":11,"xav168":5,"-":20}},{"path":"src/test/java/seedu/nutrigoals/logic/parser/NutriGoalsParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalIndexes.INDEX_FIRST_MEAL;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.FindCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.ListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.logic.commands.ProfileCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.logic.commands.ReviewCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.SetupCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.logic.commands.SuggestCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.TargetCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.EditFoodDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.FoodUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"public class NutriGoalsParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"    private final NutriGoalsParser parser \u003d new NutriGoalsParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"        Food food \u003d new FoodBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(FoodUtil.getAddCommand(food));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(new AddCommand(food), command);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_MEAL.getOneBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_MEAL), command);","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"ruiqi7"},"content":"        Food food \u003d new FoodBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"        EditFoodDescriptor descriptor \u003d new EditFoodDescriptorBuilder(food).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"                + INDEX_FIRST_MEAL.getOneBased() + \" \" + FoodUtil.getEditFoodDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_MEAL, descriptor), command);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"ruiqi7"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(FindCommand.COMMAND_WORD + \" rice\");","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(new FindCommand(new Name(\"rice\")), command);","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 2022-11-11\") instanceof ListCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"ruiqi7"},"content":"    public void parseCommand_review() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(parser.parseCommand(ReviewCommand.COMMAND_WORD) instanceof ReviewCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(parser.parseCommand(ReviewCommand.COMMAND_WORD + \" 3\") instanceof ReviewCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"xav168"},"content":"    public void parseCommand_setup() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(parser.parseCommand(SetupCommand.COMMAND_WORD + \" h/150 w/50 i/60 g/M a/20\"","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"xav168"},"content":"        ) instanceof SetupCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"xav168"},"content":"    public void parseCommand_target() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"xav168"},"content":"        assertTrue(parser.parseCommand(TargetCommand.COMMAND_WORD + \" 1000\") instanceof TargetCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"xav168"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(TargetCommand.COMMAND_WORD + \"av\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"nicolelim02"},"content":"    public void parseCommand_suggest() throws Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(parser.parseCommand(SuggestCommand.COMMAND_WORD) instanceof SuggestCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(SuggestCommand.COMMAND_WORD + \"blah\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"nicolelim02"},"content":"    public void parseCommand_profile() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(parser.parseCommand(ProfileCommand.COMMAND_WORD) instanceof ProfileCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ruiqi7":13,"xav168":39,"nicolelim02":16,"-":61}},{"path":"src/test/java/seedu/nutrigoals/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalIndexes.INDEX_FIRST_MEAL;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.DateTime;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.user.Age;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"    private static final String INVALID_NAME \u003d \"sushi#\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"    private static final String INVALID_TAG \u003d \"#lunch\";","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"    private static final String VALID_TAG_1 \u003d \"breakfast\";","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"    private static final String VALID_TAG_2 \u003d \"dinner\";","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"    private static final String INVALID_DATE \u003d \"2022-13-13\";","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"    private static final String INVALID_DATE_FORMAT \u003d \"2022\";","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"    private static final String VALID_DATE_FORMAT \u003d \"2022-11-11\";","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"    private static final String VALID_AGE_FORMAT \u003d \"10\";","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"    private static final String INVALID_AGE_FORMAT \u003d \"abc\";","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"        assertEquals(INDEX_FIRST_MEAL, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"        assertEquals(INDEX_FIRST_MEAL, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"xav168"},"content":"    public void tag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"xav168"},"content":"    public void parseCaloriesTest() {","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"xav168"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCalorie(\"abcd\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"TanPingZhi"},"content":"    public void parseLocationTest() {","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"TanPingZhi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(\"\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"ruiqi7"},"content":"    public void parseDate_invalidDate_throwsParseException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"ruiqi7"},"content":"    public void parseDate_invalidDateFormat_throwsParseException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_FORMAT));","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"ruiqi7"},"content":"    public void parseDate_validDateFormat_success() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"ruiqi7"},"content":"        DateTime expectedDateTime \u003d new DateTime(VALID_DATE_FORMAT + ParserUtil.DEFAULT_TIME);","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(expectedDateTime, ParserUtil.parseDate(VALID_DATE_FORMAT));","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"nicolelim02"},"content":"    public void parseAge_validAge_success() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"nicolelim02"},"content":"        Age expectedAge \u003d new Age(\"10\");","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(expectedAge, ParserUtil.parseAge(VALID_AGE_FORMAT));","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"nicolelim02"},"content":"    public void parseAge_invalidAge_throwsParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAge(INVALID_AGE_FORMAT));","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"ruiqi7":13,"xav168":12,"TanPingZhi":2,"nicolelim02":12,"-":126}},{"path":"src/test/java/seedu/nutrigoals/logic/parser/SetupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_MULTIPLE_TAGS_ERROR;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.GENDER_VALID_GENDER;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.HEIGHT_VALID_HEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.IDEAL_VALID_WEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_HEIGHT_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_HEIGHT_NEGATIVE;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_HEIGHT_TOO_MUCH;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_IDEAL_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_IDEAL_NEGATIVE;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_IDEAL_TOO_MUCH;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_WEIGHT_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_WEIGHT_NEGATIVE;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.INVALID_WEIGHT_TOO_MUCH;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_AGE_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_GENDER;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_HEIGHT_AMOUNT;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_WEIGHT_AMOUNT;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.WEIGHT_VALID_WEIGHT;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.SetupCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Height;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Weight;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.UserBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"public class SetupCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"    private SetupCommandParser parser \u003d new SetupCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"    public void parse_allFieldsPresentSuccess() {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"        User expected \u003d new UserBuilder().withHeight(VALID_HEIGHT_AMOUNT).withIdeal(VALID_WEIGHT_AMOUNT)","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"                .withWeight(VALID_WEIGHT_AMOUNT).withGender(VALID_GENDER).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"        assertParseSuccess(parser, WEIGHT_VALID_WEIGHT + HEIGHT_VALID_HEIGHT + IDEAL_VALID_WEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"                + GENDER_VALID_GENDER + VALID_AGE_DESC, new SetupCommand(expected));","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"    public void parse_fieldsMissingFailure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetupCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, WEIGHT_VALID_WEIGHT, expectedMessage); //only weight is given","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, IDEAL_VALID_WEIGHT, expectedMessage); //only ideal is given","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, HEIGHT_VALID_HEIGHT, expectedMessage); //only height is given","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, GENDER_VALID_GENDER, expectedMessage); //only gender is given","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, WEIGHT_VALID_WEIGHT + HEIGHT_VALID_HEIGHT, expectedMessage); //two given","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, WEIGHT_VALID_WEIGHT + HEIGHT_VALID_HEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"                + IDEAL_VALID_WEIGHT, expectedMessage); //missing one arg","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"    public void parse_multiplePrefixFailure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, WEIGHT_VALID_WEIGHT + WEIGHT_VALID_WEIGHT, MESSAGE_MULTIPLE_TAGS_ERROR);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"    public void parse_invalidHeightFailure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"        String expected \u003d Height.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, INVALID_HEIGHT_DESC + GENDER_VALID_GENDER + WEIGHT_VALID_WEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"nicolelim02"},"content":"                + IDEAL_VALID_WEIGHT + VALID_AGE_DESC, expected);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, INVALID_HEIGHT_TOO_MUCH + GENDER_VALID_GENDER + WEIGHT_VALID_WEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"nicolelim02"},"content":"                + IDEAL_VALID_WEIGHT + VALID_AGE_DESC, expected);","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, INVALID_HEIGHT_NEGATIVE + GENDER_VALID_GENDER + WEIGHT_VALID_WEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"                + IDEAL_VALID_WEIGHT + VALID_AGE_DESC, expected);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"xav168"},"content":"    public void parse_invalidWeightFailure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"        String expected \u003d Weight.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, INVALID_WEIGHT_DESC + GENDER_VALID_GENDER + HEIGHT_VALID_HEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"nicolelim02"},"content":"                + IDEAL_VALID_WEIGHT + VALID_AGE_DESC, expected);","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, INVALID_WEIGHT_NEGATIVE + GENDER_VALID_GENDER + HEIGHT_VALID_HEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"nicolelim02"},"content":"                + IDEAL_VALID_WEIGHT + VALID_AGE_DESC, expected);","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, INVALID_WEIGHT_TOO_MUCH + GENDER_VALID_GENDER + HEIGHT_VALID_HEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"nicolelim02"},"content":"                + IDEAL_VALID_WEIGHT + VALID_AGE_DESC, expected);","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"xav168"},"content":"    public void parse_invalidGenderFailure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"xav168"},"content":"        String expected \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, INVALID_GENDER_DESC + WEIGHT_VALID_WEIGHT + HEIGHT_VALID_HEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"nicolelim02"},"content":"                + IDEAL_VALID_WEIGHT + VALID_AGE_DESC, expected);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"xav168"},"content":"    public void parse_invalidIdealFailure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"xav168"},"content":"        String expected \u003d Weight.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, INVALID_IDEAL_DESC + GENDER_VALID_GENDER + HEIGHT_VALID_HEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"nicolelim02"},"content":"                + WEIGHT_VALID_WEIGHT + VALID_AGE_DESC, expected);","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, INVALID_IDEAL_NEGATIVE + GENDER_VALID_GENDER + HEIGHT_VALID_HEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"nicolelim02"},"content":"                + WEIGHT_VALID_WEIGHT + VALID_AGE_DESC, expected);","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"xav168"},"content":"        assertParseFailure(parser, INVALID_IDEAL_TOO_MUCH + GENDER_VALID_GENDER + HEIGHT_VALID_HEIGHT","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"nicolelim02"},"content":"                + WEIGHT_VALID_WEIGHT + VALID_AGE_DESC, expected);","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":96,"nicolelim02":12}},{"path":"src/test/java/seedu/nutrigoals/logic/parser/TargetCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanPingZhi"},"content":"package seedu.nutrigoals.logic.parser;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"import static seedu.nutrigoals.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"TanPingZhi"},"content":"import static seedu.nutrigoals.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"TanPingZhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.logic.commands.TargetCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"TanPingZhi"},"content":"class TargetCommandParserTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"    private TargetCommandParser parser \u003d new TargetCommandParser();","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"TanPingZhi"},"content":"    void parse_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"TanPingZhi"},"content":"        final String calorieValue \u003d \"1231\";","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"        TargetCommand expected \u003d new TargetCommand(new Calorie(calorieValue));","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"        assertParseSuccess(parser, calorieValue, expected);","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"TanPingZhi"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"TanPingZhi"},"content":"    void parse_invalidStringException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"TanPingZhi"},"content":"        for (String calorieValue : new String[] {\"\", \"1.0\", \"invalid\", Long.MAX_VALUE + \"\", \"-1\"}) {","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"TanPingZhi"},"content":"            assertParseFailure(parser, calorieValue,","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, TargetCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"TanPingZhi"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"TanPingZhi":29}},{"path":"src/test/java/seedu/nutrigoals/model/CalorieTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanPingZhi"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"TanPingZhi"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"TanPingZhi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"TanPingZhi"},"content":"class CalorieTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"    public void isValidCalorie() {","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"TanPingZhi"},"content":"        assertTrue(Calorie.isValidCalorie(\"0\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"TanPingZhi"},"content":"        assertTrue(Calorie.isValidCalorie(\"1\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"TanPingZhi"},"content":"        assertTrue(Calorie.isValidCalorie(\"100\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"TanPingZhi"},"content":"        assertFalse(Calorie.isValidCalorie(Long.MAX_VALUE + \"\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"TanPingZhi"},"content":"        assertFalse(Calorie.isValidCalorie(\"-1\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"TanPingZhi"},"content":"        assertFalse(Calorie.isValidCalorie(\"1.0\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"TanPingZhi"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"    public void getCalorieValue() {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"TanPingZhi"},"content":"        assertEquals(new Calorie(\"2000\").getCalorieValue(), 2000);","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"TanPingZhi"},"content":"        assertEquals(new Calorie(\"0\").getCalorieValue(), 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"TanPingZhi"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"    public void testEquals() {","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"TanPingZhi"},"content":"        assertEquals(new Calorie(\"1000\"), new Calorie(\"1000\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"TanPingZhi"},"content":"        assertEquals(new Calorie(\"100\"), new Calorie(\"100\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"TanPingZhi"},"content":"        assertNotEquals(new Calorie(\"100\"), new Calorie(\"10\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(new Calorie().equals(new Tag(\"breakfast\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(new Calorie().equals(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"    public void calculateCalorieDifference_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"        int expectedCalorie \u003d 100;","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"        Calorie calorie1 \u003d new Calorie(\"250\");","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"        Calorie calorie2 \u003d new Calorie(\"150\");","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(expectedCalorie, calorie1.calculateDifference(calorie2));","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"        expectedCalorie \u003d -100;","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(expectedCalorie, calorie2.calculateDifference(calorie1));","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"    public void addCalorie_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"        Calorie expectedCalorie \u003d new Calorie(\"300\");","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"        Calorie calorie1 \u003d new Calorie(\"160\");","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"        Calorie calorie2 \u003d new Calorie(\"140\");","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(expectedCalorie, calorie1.addCalorie(calorie2));","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"TanPingZhi"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"TanPingZhi":33,"nicolelim02":24}},{"path":"src/test/java/seedu/nutrigoals/model/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TanPingZhi"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"TanPingZhi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"TanPingZhi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"TanPingZhi"},"content":"class LocationTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"TanPingZhi"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"TanPingZhi"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"TanPingZhi"},"content":"    void distTo() {","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":"        Location a \u003d new Location(\"A\", \"0, 0\");","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"TanPingZhi"},"content":"        Location b \u003d new Location(\"B\", \"15, 0\");","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"TanPingZhi"},"content":"        Location c \u003d new Location(\"C\", \"31, 0\");","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"TanPingZhi"},"content":"        assertTrue(a.distTo(b) \u003c b.distTo(c));","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"TanPingZhi"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"TanPingZhi"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"TanPingZhi":16}},{"path":"src/test/java/seedu/nutrigoals/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.filterListByFoodName;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.model.Model.PREDICATE_SHOW_ALL_FOODS;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.testutil.FoodBuilder.DEFAULT_EARLIER_TIME;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.APPLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.BREAD;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.DateTime;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.IsFoodAddedOnThisDatePredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.NutriGoalsBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.testutil.UserBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"        assertEquals(new NutriGoals(), new NutriGoals(modelManager.getNutriGoals()));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"        userPrefs.setNutriGoalsFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"        userPrefs.setNutriGoalsFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"    public void setNutriGoalsFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setNutriGoalsFilePath(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"xav168"},"content":"    public void setNutriGoalsFilePath_validPath_setsNutriGoalsFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"xav168"},"content":"        modelManager.setNutriGoalsFilePath(path);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"        assertEquals(path, modelManager.getNutriGoalsFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"    public void hasFood_nullFood_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"AkkFiros"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasFood(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"xav168"},"content":"    public void hasFood_foodNotInNutriGoals_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"AkkFiros"},"content":"        assertFalse(modelManager.hasFood(APPLE));","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"xav168"},"content":"    public void hasFood_foodInNutriGoals_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"AkkFiros"},"content":"        modelManager.addFood(APPLE);","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"AkkFiros"},"content":"        assertTrue(modelManager.hasFood(APPLE));","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"xav168"},"content":"    public void getFilteredFoodList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"AkkFiros"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredFoodList().remove(0));","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"ruiqi7"},"content":"    public void isFilteredFoodListEmpty_emptyFilteredList_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"ruiqi7"},"content":"        modelManager.updateFilteredFoodList(unused -\u003e false);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(modelManager.isFilteredFoodListEmpty());","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"ruiqi7"},"content":"    public void isFilteredFoodListEmpty_nonEmptyFilteredList_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"ruiqi7"},"content":"        modelManager.addFood(APPLE);","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"ruiqi7"},"content":"        modelManager.updateFilteredFoodList(PREDICATE_SHOW_ALL_FOODS);","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(modelManager.isFilteredFoodListEmpty());","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"nicolelim02"},"content":"    public void isUserCreated_userNotCreated_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(modelManager.isUserCreated());","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"nicolelim02"},"content":"    public void isUserCreated_userCreated_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"nicolelim02"},"content":"        User validUser \u003d new UserBuilder().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"nicolelim02"},"content":"        modelManager.setUserDetails(validUser);","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(modelManager.isUserCreated());","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"nicolelim02"},"content":"    public void setUserDetails_nullUser_throwsException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserDetails(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":131,"author":{"gitId":"ruiqi7"},"content":"    public void getFoodCalorieList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFoodCalorieList().clear());","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"xav168"},"content":"        NutriGoals nutriGoals \u003d new NutriGoalsBuilder().withFood(APPLE).withFood(BREAD).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"xav168"},"content":"        NutriGoals differentNutriGoals \u003d new NutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"xav168"},"content":"        modelManager \u003d new ModelManager(nutriGoals, userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"xav168"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(nutriGoals, userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"xav168"},"content":"        // different nutriGoals -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"xav168"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentNutriGoals, userPrefs)));","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"ruiqi7"},"content":"        filterListByFoodName(modelManager, APPLE);","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"xav168"},"content":"        assertFalse(modelManager.equals(new ModelManager(nutriGoals, userPrefs)));","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"xav168"},"content":"        modelManager.updateFilteredFoodList(PREDICATE_SHOW_ALL_FOODS);","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"xav168"},"content":"        differentUserPrefs.setNutriGoalsFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"xav168"},"content":"        assertFalse(modelManager.equals(new ModelManager(nutriGoals, differentUserPrefs)));","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"ruiqi7"},"content":"        // different currentDatePredicate -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"ruiqi7"},"content":"        DateTime dateTime \u003d new DateTime(DEFAULT_EARLIER_TIME);","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"ruiqi7"},"content":"        modelManager.updateFilteredFoodList(new IsFoodAddedOnThisDatePredicate(dateTime));","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(modelManager.equals(new ModelManager(nutriGoals, userPrefs)));","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"AkkFiros":5,"ruiqi7":28,"xav168":29,"nicolelim02":20,"-":94}},{"path":"src/test/java/seedu/nutrigoals/model/NutriGoalsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_TAG_BREAKFAST;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.APPLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"TanPingZhi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"public class NutriGoalsTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    private final NutriGoals nutriGoals \u003d new NutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"        assertEquals(Collections.emptyList(), nutriGoals.getFoodList());","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e nutriGoals.resetData(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"    public void resetData_withValidReadOnlyNutriGoals_replacesData() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"        NutriGoals newData \u003d getTypicalNutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"        nutriGoals.resetData(newData);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        assertEquals(newData, nutriGoals);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"    public void hasFood_nullFood_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e nutriGoals.hasFood(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"    public void hasFood_foodNotInNutriGoals_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"        assertFalse(nutriGoals.hasFood(APPLE));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"    public void hasFood_foodInNutriGoals_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"        nutriGoals.addFood(APPLE);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"        assertTrue(nutriGoals.hasFood(APPLE));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"    public void hasFood_foodWithSameIdentityFieldsInNutriGoals_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"        nutriGoals.addFood(APPLE);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"        Food editedAlice \u003d new FoodBuilder(APPLE).withTag(VALID_TAG_BREAKFAST).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"        assertTrue(nutriGoals.hasFood(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"xav168"},"content":"    public void getFoodList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"xav168"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e nutriGoals.getFoodList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"ruiqi7"},"content":"    public void getFoodCaloriesList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e nutriGoals.getFoodCalorieList().clear());","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"xav168"},"content":"     * A stub ReadOnlyNutriGoals whose foods list can violate interface constraints.","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"xav168"},"content":"    private static class NutriGoalsStub implements ReadOnlyNutriGoals {","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"xav168"},"content":"        private final ObservableList\u003cFood\u003e foods \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"xav168"},"content":"        private final Calorie calorieGoal \u003d new Calorie();","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"xav168"},"content":"        private final User user \u003d new User();","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"xav168"},"content":"        NutriGoalsStub(Collection\u003cFood\u003e foods) {","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"xav168"},"content":"            this.foods.setAll(foods);","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"xav168"},"content":"        public ObservableList\u003cFood\u003e getFoodList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"xav168"},"content":"            return foods;","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"xav168"},"content":"        public Calorie getCalorieTarget() {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"xav168"},"content":"            return calorieGoal;","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"xav168"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"xav168"},"content":"        public User getUser() {","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"xav168"},"content":"            return user;","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"TanPingZhi"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"TanPingZhi"},"content":"        public List\u003cLocation\u003e getGymLocations() {","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"TanPingZhi"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"TanPingZhi"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"ruiqi7"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"ruiqi7"},"content":"        public Map\u003cName, Calorie\u003e getFoodCalorieList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"ruiqi7"},"content":"            return new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"ruiqi7"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"AkkFiros"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"nicolelim02"},"content":"        public Tip getTip() {","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"nicolelim02"},"content":"            return new TipList().generateTip();","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"AkkFiros":2,"ruiqi7":13,"xav168":97,"TanPingZhi":5,"nicolelim02":5}},{"path":"src/test/java/seedu/nutrigoals/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"    public void setNutriGoalsFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setNutriGoalsFilePath(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"xav168":4,"-":17}},{"path":"src/test/java/seedu/nutrigoals/model/meal/DateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"public class DateTimeTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"    private static final DateTime EARLIER_TIME \u003d new DateTime(\"2022-10-05T10:30:15\");","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"    private static final DateTime LATER_TIME \u003d new DateTime(\"2022-10-05T10:50:15\");","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"    private static final String FORMATTED_DATE \u003d \"5 Oct 2022\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"    private static final String INVALID_DATE_INPUT \u003d \"hello\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"    private static final String INVALID_DATE_FORMAT \u003d \"2022T00:00:00\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"    private static final String INVALID_DATE_OUT_OF_RANGE \u003d \"2022-13-13T00:00:00\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"    private static final String VALID_DATE \u003d \"2022-11-11T00:00:00\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateTime(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"    public void isAfter() {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(LATER_TIME.isAfter(EARLIER_TIME));","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"    public void isOnSameDay() {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(LATER_TIME.isOnSameDay(EARLIER_TIME));","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"    public void isValidDateTime() {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"        // invalid dateTime","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(DateTime.isValidDateTime(\"\")); // empty string","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(DateTime.isValidDateTime(INVALID_DATE_INPUT));","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(DateTime.isValidDateTime(INVALID_DATE_FORMAT));","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(DateTime.isValidDateTime(INVALID_DATE_OUT_OF_RANGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"        // valid dateTime","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(DateTime.isValidDateTime(VALID_DATE));","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"    public void getDate() {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(FORMATTED_DATE, EARLIER_TIME.getDate());","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"ruiqi7":51,"xav168":2}},{"path":"src/test/java/seedu/nutrigoals/model/meal/FoodCalorieListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"public class FoodCalorieListTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"    private final FoodCalorieList foodCalorieList \u003d new FoodCalorieList();","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"    public void setFoodCalorieMapping_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"        Map\u003cName, Calorie\u003e expectedMapping \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"        expectedMapping.put(new Name(\"pizza\"), new Calorie(\"299\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"        FoodCalorieList foodCalorieList \u003d new FoodCalorieList();","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"        foodCalorieList.setFoodCalorieMapping(expectedMapping);","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(expectedMapping, foodCalorieList.asUnmodifiableMap());","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"    public void asUnmodifiableMap_modifyMap_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e foodCalorieList.asUnmodifiableMap().clear());","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"    public void equals() {","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(foodCalorieList.equals(foodCalorieList));","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"        FoodCalorieList foodCalorieListCopy \u003d new FoodCalorieList();","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(foodCalorieList.equals(foodCalorieListCopy));","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"ruiqi7"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(foodCalorieList.equals(1));","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(foodCalorieList.equals(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"        FoodCalorieList anotherFoodCalorieList \u003d new FoodCalorieList();","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"        Map\u003cName, Calorie\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"ruiqi7"},"content":"        map.put(new Name(\"pizza\"), new Calorie(\"299\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"        anotherFoodCalorieList.setFoodCalorieMapping(map);","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(foodCalorieList.equals(anotherFoodCalorieList));","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"ruiqi7":55}},{"path":"src/test/java/seedu/nutrigoals/model/meal/FoodComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.FoodBuilder.DEFAULT_EARLIER_TIME;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.FoodBuilder.DEFAULT_LATER_TIME;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.APPLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.BREAD;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.GRAPES;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"public class FoodComparatorTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"    private final FoodComparator foodComparator \u003d new FoodComparator();","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"    public void compare() {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"        // breakfast before lunch","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(foodComparator.compare(APPLE, BREAD) \u003c 0);","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"        // lunch after breakfast","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(foodComparator.compare(BREAD, APPLE) \u003e 0);","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"        // breakfast before dinner","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(foodComparator.compare(APPLE, GRAPES) \u003c 0);","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"        // same tag, food recorded earlier before food recorded later","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"        Food earlierApple \u003d new FoodBuilder(APPLE).withDateTime(DEFAULT_EARLIER_TIME).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"        Food laterApple \u003d new FoodBuilder(APPLE).withDateTime(DEFAULT_LATER_TIME).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(foodComparator.compare(earlierApple, laterApple) \u003c 0);","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"ruiqi7":25,"xav168":7,"nicolelim02":1}},{"path":"src/test/java/seedu/nutrigoals/model/meal/FoodListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_TAG_BREAKFAST;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_TAG_LUNCH;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.APPLE;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.PANCAKE;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.model.meal.exceptions.MealNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"public class FoodListTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"    private final FoodList foodList \u003d new FoodList();","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"    public void contains_nullFood_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(NullPointerException.class, () -\u003e foodList.contains(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"    public void contains_foodNotInList_returnsFalse() {","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(foodList.contains(APPLE));","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"    public void contains_foodInList_returnsTrue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"        foodList.add(APPLE);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(foodList.contains(APPLE));","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"    public void contains_foodWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"ruiqi7"},"content":"        foodList.add(APPLE);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"        Food editedApple \u003d new FoodBuilder(APPLE).withTag(VALID_TAG_LUNCH).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(foodList.contains(editedApple));","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"    public void add_nullFood_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(NullPointerException.class, () -\u003e foodList.add(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"    public void setFood_nullTargetFood_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(NullPointerException.class, () -\u003e foodList.setFood(null, APPLE));","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"ruiqi7"},"content":"    public void setFood_nullEditedFood_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(NullPointerException.class, () -\u003e foodList.setFood(APPLE, null));","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"ruiqi7"},"content":"    public void setFood_targetFoodNotInList_throwsFoodNotFoundException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(MealNotFoundException.class, () -\u003e foodList.setFood(APPLE, APPLE));","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"ruiqi7"},"content":"    public void setFood_editedFoodIsSameFood_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"ruiqi7"},"content":"        foodList.add(APPLE);","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"ruiqi7"},"content":"        foodList.setFood(APPLE, APPLE);","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"ruiqi7"},"content":"        FoodList expectedFoodList \u003d new FoodList();","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"ruiqi7"},"content":"        expectedFoodList.add(APPLE);","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(expectedFoodList, foodList);","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"ruiqi7"},"content":"    public void setFood_editedFoodHasSameIdentity_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"ruiqi7"},"content":"        foodList.add(APPLE);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"ruiqi7"},"content":"        Food editedAlice \u003d new FoodBuilder(APPLE).withTag(VALID_TAG_BREAKFAST).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"ruiqi7"},"content":"        foodList.setFood(APPLE, editedAlice);","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"ruiqi7"},"content":"        FoodList expectedFoodList \u003d new FoodList();","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"ruiqi7"},"content":"        expectedFoodList.add(editedAlice);","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(expectedFoodList, foodList);","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"ruiqi7"},"content":"    public void setFood_editedFoodHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"ruiqi7"},"content":"        foodList.add(APPLE);","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"ruiqi7"},"content":"        foodList.setFood(APPLE, PANCAKE);","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"ruiqi7"},"content":"        FoodList expectedFoodList \u003d new FoodList();","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"ruiqi7"},"content":"        expectedFoodList.add(PANCAKE);","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(expectedFoodList, foodList);","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"ruiqi7"},"content":"    public void remove_nullFood_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(NullPointerException.class, () -\u003e foodList.remove(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"ruiqi7"},"content":"    public void remove_foodDoesNotExist_throwsFoodNotFoundException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(MealNotFoundException.class, () -\u003e foodList.remove(APPLE));","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"ruiqi7"},"content":"    public void remove_existingFood_removesFood() {","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"ruiqi7"},"content":"        foodList.add(APPLE);","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"ruiqi7"},"content":"        foodList.remove(APPLE);","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"ruiqi7"},"content":"        FoodList expectedFoodList \u003d new FoodList();","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(expectedFoodList, foodList);","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"ruiqi7"},"content":"    public void setFoods_nullFoodList_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(NullPointerException.class, () -\u003e foodList.setFood((FoodList) null));","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"ruiqi7"},"content":"    public void setFoods_foodList_replacesOwnListWithProvidedFoodList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"ruiqi7"},"content":"        foodList.add(APPLE);","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"ruiqi7"},"content":"        FoodList expectedFoodList \u003d new FoodList();","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"ruiqi7"},"content":"        expectedFoodList.add(PANCAKE);","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"ruiqi7"},"content":"        foodList.setFood(expectedFoodList);","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(expectedFoodList, foodList);","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"ruiqi7"},"content":"    public void setFoods_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(NullPointerException.class, () -\u003e foodList.setFood((List\u003cFood\u003e) null));","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"ruiqi7"},"content":"    public void setFoods_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"ruiqi7"},"content":"        foodList.add(APPLE);","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"ruiqi7"},"content":"        List\u003cFood\u003e foodList \u003d Collections.singletonList(PANCAKE);","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"ruiqi7"},"content":"        this.foodList.setFood(foodList);","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"ruiqi7"},"content":"        FoodList expectedFoodList \u003d new FoodList();","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"ruiqi7"},"content":"        expectedFoodList.add(PANCAKE);","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(expectedFoodList, this.foodList);","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"ruiqi7"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"ruiqi7"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"ruiqi7"},"content":"            -\u003e foodList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"ruiqi7":148}},{"path":"src/test/java/seedu/nutrigoals/model/meal/FoodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_APPLE_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_BISCUIT_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_TAG_BREAKFAST;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.logic.commands.CommandTestUtil.VALID_TAG_LUNCH;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.FoodBuilder.DEFAULT_EARLIER_TIME;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.FoodBuilder.DEFAULT_LATER_TIME;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.APPLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.GRAPES;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.PANCAKE;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"public class FoodTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"        Food food \u003d new FoodBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e food.getTag().edit(\"breakfast\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    public void isSameFood() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"        assertTrue(APPLE.isSameFood(APPLE));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"        assertFalse(APPLE.isSameFood(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"        Food editedApple \u003d new FoodBuilder(APPLE)","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"                .withTag(VALID_TAG_BREAKFAST).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"        assertTrue(APPLE.isSameFood(editedApple));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"        editedApple \u003d new FoodBuilder(APPLE).withName(VALID_BISCUIT_NAME).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"        assertFalse(APPLE.isSameFood(editedApple));","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"        editedApple \u003d new FoodBuilder(APPLE).withName(VALID_APPLE_NAME.toLowerCase()).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(APPLE.isSameFood(editedApple));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"        String nameWithTrailingSpaces \u003d VALID_APPLE_NAME + \" \";","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"        editedApple \u003d new FoodBuilder(APPLE).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(APPLE.isSameFood(editedApple));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"ruiqi7"},"content":"    public void isAfter() {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"ruiqi7"},"content":"        Food editedApple \u003d new FoodBuilder(APPLE).withDateTime(DEFAULT_EARLIER_TIME).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"ruiqi7"},"content":"        Food editedGrapes \u003d new FoodBuilder(GRAPES).withDateTime(DEFAULT_LATER_TIME).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(editedGrapes.isAfter(editedApple));","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"ruiqi7"},"content":"        Food appleCopy \u003d new FoodBuilder(APPLE).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(APPLE.equals(appleCopy));","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(APPLE.equals(APPLE));","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(APPLE.equals(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(APPLE.equals(5));","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"        // different food -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(APPLE.equals(PANCAKE));","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"nicolelim02"},"content":"        Food editedApple \u003d new FoodBuilder(APPLE).withName(VALID_BISCUIT_NAME).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"nicolelim02"},"content":"        editedApple \u003d new FoodBuilder(APPLE).withTag(VALID_TAG_LUNCH).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ruiqi7":16,"xav168":13,"nicolelim02":17,"-":42}},{"path":"src/test/java/seedu/nutrigoals/model/meal/IsFoodAddedOnThisDatePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiqi7"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ruiqi7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.testutil.FoodBuilder.DEFAULT_EARLIER_TIME;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ruiqi7"},"content":"import static seedu.nutrigoals.testutil.FoodBuilder.DEFAULT_LATER_TIME;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ruiqi7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ruiqi7"},"content":"import seedu.nutrigoals.testutil.FoodBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"public class IsFoodAddedOnThisDatePredicateTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"    public void getDate() {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"        DateTime dateTime \u003d new DateTime(DEFAULT_EARLIER_TIME);","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate predicate \u003d new IsFoodAddedOnThisDatePredicate(dateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(dateTime.getDate(), predicate.getDate());","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ruiqi7"},"content":"    public void test_foodRecordedOnSameDay_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate predicate \u003d new IsFoodAddedOnThisDatePredicate(new DateTime());","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(predicate.test(new FoodBuilder().build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"    public void test_foodRecordedOnDifferentDay_returnsFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate predicate \u003d new IsFoodAddedOnThisDatePredicate(new DateTime());","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(predicate.test(new FoodBuilder().withDateTime(DEFAULT_EARLIER_TIME).build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"ruiqi7"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"ruiqi7"},"content":"        DateTime firstDateTime \u003d new DateTime(DEFAULT_EARLIER_TIME);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"        DateTime secondDateTime \u003d new DateTime(DEFAULT_LATER_TIME);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"ruiqi7"},"content":"        DateTime thirdDateTime \u003d new DateTime();","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate firstPredicate \u003d new IsFoodAddedOnThisDatePredicate(firstDateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate secondPredicate \u003d new IsFoodAddedOnThisDatePredicate(secondDateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate thirdPredicate \u003d new IsFoodAddedOnThisDatePredicate(thirdDateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"ruiqi7"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"ruiqi7"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"        IsFoodAddedOnThisDatePredicate firstPredicateCopy \u003d new IsFoodAddedOnThisDatePredicate(firstDateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"ruiqi7"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"ruiqi7"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"ruiqi7"},"content":"        // different time -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"ruiqi7"},"content":"        assertTrue(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"ruiqi7"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"ruiqi7"},"content":"        assertFalse(firstPredicate.equals(thirdPredicate));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"ruiqi7"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ruiqi7":61}},{"path":"src/test/java/seedu/nutrigoals/model/meal/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.meal;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"xav168":2,"-":38}},{"path":"src/test/java/seedu/nutrigoals/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"        String emptyTag \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"        String snack \u003d \"snack\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"        String breakfastRepeated \u003d \"breakfast Breakfast\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"        String lunchRepeated \u003d \"lunchLUNCH\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(emptyTag));","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(snack));","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(breakfastRepeated));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(lunchRepeated));","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"    public void constructor_caseInsensitiveTagName_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"        String breakfast \u003d \"BrEakFast\";","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"        String lunch \u003d \"LUNCH\";","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"        String dinner \u003d \"Dinner\";","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"        Tag expectedBreakfast \u003d new Tag(\"breakfast\");","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"        Tag expectedLunch \u003d new Tag(\"lunch\");","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"        Tag expectedDinner \u003d new Tag(\"dinner\");","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"        // no exception throw","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"        assertDoesNotThrow(() -\u003e new Tag(breakfast));","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"        assertDoesNotThrow(() -\u003e new Tag(lunch));","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"        assertDoesNotThrow(() -\u003e new Tag(dinner));","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"        // case-insensitive tag names","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(new Tag(breakfast), expectedBreakfast);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(new Tag(lunch), expectedLunch);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(new Tag(dinner), expectedDinner);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"    public void isValidTagName_validTagWithLeadingWhiteSpace_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"        String breakfast \u003d \"   breakfast\";","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"        String lunch \u003d \"lunch   \";","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"        String dinner \u003d \"  dinner  \";","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(Tag.isValidTagName(breakfast));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(Tag.isValidTagName(lunch));","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(Tag.isValidTagName(dinner));","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"ruiqi7"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"ruiqi7"},"content":"    public void getTagName_caseInsensitiveTagName_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"ruiqi7"},"content":"        String breakfast \u003d \"BrEakFast\";","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"ruiqi7"},"content":"        String lunch \u003d \"LUNCH\";","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"ruiqi7"},"content":"        String dinner \u003d \"Dinner\";","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"ruiqi7"},"content":"        Tag breakfastTag \u003d new Tag(breakfast);","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"ruiqi7"},"content":"        Tag lunchTag \u003d new Tag(lunch);","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"ruiqi7"},"content":"        Tag dinnerTag \u003d new Tag(dinner);","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(\"breakfast\", breakfastTag.getTagName());","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(\"lunch\", lunchTag.getTagName());","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"ruiqi7"},"content":"        assertEquals(\"dinner\", dinnerTag.getTagName());","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"ruiqi7":14,"xav168":2,"nicolelim02":42,"-":22}},{"path":"src/test/java/seedu/nutrigoals/model/user/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":"public class AgeTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"    public void constructor_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Age(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"    public void constructor_invalidAge_throwsException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(\"abc\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"    public void equals() {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"        Age age \u003d new Age(\"10\");","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(age.equals(age));","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(age.equals(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(age.equals(new Age(\"10\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"    public void isValidAge() {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"        assertTrue(Age.isValidAge(\"10\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(Age.isValidAge(\"abc\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(Age.isValidAge(\"-10\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"nicolelim02":35}},{"path":"src/test/java/seedu/nutrigoals/model/user/BmiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolelim02"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"nicolelim02"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"nicolelim02"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"nicolelim02"},"content":"public class BmiTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"nicolelim02"},"content":"    private static final Height DEFAULT_HEIGHT \u003d new HeightStub(\"170\");","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"    private static final Weight DEFAULT_WEIGHT \u003d new WeightStub(\"70\");","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"    private static final double DEFAULT_BMI \u003d 70 / (1.7 * 1.7);","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"    public void constructor_defaultConstructorPass() {","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"        Bmi expectedBmi \u003d new Bmi(DEFAULT_HEIGHT, DEFAULT_WEIGHT);","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"        Bmi actualBmi \u003d new Bmi();","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(actualBmi, expectedBmi);","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"    public void calculateBmi_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"        Bmi bmi \u003d new Bmi(DEFAULT_HEIGHT, DEFAULT_WEIGHT);","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(bmi.calculateBmi(), DEFAULT_BMI);","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"    public void equals() {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"        Bmi bmi \u003d new Bmi(new HeightStub(\"165\"), new WeightStub(\"45\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"        Bmi bmi1 \u003d new Bmi(new HeightStub(\"165\"), new WeightStub(\"45\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"        Bmi bmi2 \u003d new Bmi(new HeightStub(\"170\"), new WeightStub(\"65\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"        assertNotEquals(null, bmi);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"        assertNotEquals(bmi, bmi2);","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(bmi, bmi1);","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(bmi, bmi);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(bmi.equals(5));","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"    private static class WeightStub extends Weight {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"        private final String value;","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"        public WeightStub(String weight) {","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"nicolelim02"},"content":"            value \u003d weight;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"        public int getWeight() {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"            return Integer.parseInt(value);","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"    private static class HeightStub extends Height {","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"        private final String value;","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"        public HeightStub(String height) {","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"            value \u003d height;","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"        public double getHeight() {","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"            return Integer.parseInt(value) / 100.0;","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"nicolelim02":69}},{"path":"src/test/java/seedu/nutrigoals/model/user/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"public class GenderTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"    public void constructor_nullThrowsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"    public void constructor_invalidThrowsIllegalArgumentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"        String invalidGender \u003d \" \";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"    public void constructor_emptyConstructorPass() {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"        Gender gender \u003d new Gender(\"m\");","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        assertEquals(gender, new Gender());","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"    public void isValidGender() {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"        assertTrue(Gender.isValidGender(\"M\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"        assertTrue(Gender.isValidGender(\"m\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"        assertTrue(Gender.isValidGender(\"F\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"        assertTrue(Gender.isValidGender(\"f\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"        assertFalse(Gender.isValidGender(\"Male\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"        assertFalse(Gender.isValidGender(\"female\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"        assertFalse(Gender.isValidGender(\"m1\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"        assertFalse(Gender.isValidGender(\"f3\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"        assertFalse(Gender.isValidGender(\"\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"        Gender male \u003d new Gender(\"m\");","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"        Gender female \u003d new Gender(\"f\");","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"        Gender male2 \u003d new Gender(\"M\");","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"        assertTrue(male.equals(male2));","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"        assertTrue(male.equals(male));","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"        assertFalse(male.equals(\"M\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"        assertFalse(male.equals(female));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"        assertFalse(male.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":56}},{"path":"src/test/java/seedu/nutrigoals/model/user/HeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"public class HeightTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"    public void constructor_nullThrowsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Height(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"    public void constructor_invalidThrowsIllegalArgumentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"        String invalidHeight \u003d \" \";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Height(invalidHeight));","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Height(\"0\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    public void isValidHeight() {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"        assertTrue(Height.isValidHeight(\"170\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"        assertTrue(Height.isValidHeight(\"120\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"        assertTrue(Height.isValidHeight(\"190\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        assertFalse(Height.isValidHeight(\"-123\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"        assertFalse(Height.isValidHeight(\"123456\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"        assertFalse(Height.isValidHeight(\"abcdefg\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"        assertFalse(Height.isValidHeight(\"1.0\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"        assertFalse(Height.isValidHeight(\"0\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"        Height h1 \u003d new Height(\"123\");","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"        Height h2 \u003d new Height(\"100\");","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"        assertTrue(h1.equals(h1));","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"        assertTrue(h2.equals(h2));","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"        assertTrue(h1.equals(new Height(\"123\")));","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"        assertFalse(h1.equals(h2));","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"        assertFalse(h1.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"        assertFalse(h1.equals(\"123\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":44,"nicolelim02":2}},{"path":"src/test/java/seedu/nutrigoals/model/user/UserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.UserBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"public class UserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"    public void constructor_nullThrowsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"                new User(null, null, null, null, null));","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"        User userA \u003d new UserBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"        User userB \u003d new UserBuilder().withHeight(\"123\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"        assertTrue(userA.equals(userA));","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        assertFalse(userA.equals(userB));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"        assertFalse(userA.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    public void testGetWeight() {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"        User userA \u003d new UserBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"        assertEquals(userA.getWeight(), new Weight(UserBuilder.DEFAULT_WEIGHT));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"    public void testGetIdealWeight() {","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"        User userA \u003d new UserBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"        assertEquals(userA.getIdealWeight(), new Weight(UserBuilder.DEFAULT_IDEAL));","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"    public void testGetHeight() {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        User userA \u003d new UserBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"        assertEquals(userA.getHeight(), new Height(UserBuilder.DEFAULT_HEIGHT));","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"    public void testGetGender() {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"        User userA \u003d new UserBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"        assertEquals(userA.getGender(), new Gender(UserBuilder.DEFAULT_GENDER));","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"    public void testGetAge() {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"        User userA \u003d new UserBuilder().withAge(\"20\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(userA.getAge(), new Age(UserBuilder.DEFAULT_AGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"    public void validUser_calculateSuggestedCalories_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"        User user \u003d new UserBuilder().withIdeal(\"55\").withHeight(\"170\")","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"                .withGender(\"F\").withWeight(\"60\").withAge(\"30\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"        Calorie expectedSuggestedCalorie \u003d new CalorieStub(\"1626\");","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"nicolelim02"},"content":"        assertEquals(expectedSuggestedCalorie, user.calculateSuggestedCalorieIntake());","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"nicolelim02"},"content":"    private static class CalorieStub extends Calorie {","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"nicolelim02"},"content":"        private String value;","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"nicolelim02"},"content":"        public CalorieStub(String calorie) {","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"nicolelim02"},"content":"            value \u003d calorie;","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"nicolelim02"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"nicolelim02"},"content":"        public boolean equals(Object obj) {","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"nicolelim02"},"content":"            if (this \u003d\u003d obj) {","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"nicolelim02"},"content":"                return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"nicolelim02"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"nicolelim02"},"content":"            if (!(obj instanceof Calorie)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"nicolelim02"},"content":"                return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"nicolelim02"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"nicolelim02"},"content":"            Calorie c \u003d (Calorie) obj;","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"nicolelim02"},"content":"            return value.equals(c.value);","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"nicolelim02"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":51,"nicolelim02":40}},{"path":"src/test/java/seedu/nutrigoals/model/user/WeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.model.user;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"public class WeightTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"    public void constructor_nullThrowsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Weight(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"    public void constructor_invalidThrowsIllegalArgumentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"        String invalidWeight \u003d \" \";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Weight(invalidWeight));","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    public void isValidWeight() {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"        String invalidWeight \u003d \" \";","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"        String validWeight \u003d \"30\";","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        assertTrue(Weight.isValidWeight(validWeight));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"        assertFalse(Weight.isValidWeight(invalidWeight));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"        assertFalse(Weight.isValidWeight(\"2123\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"        assertFalse(Weight.isValidWeight(\"-11\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"        assertFalse(Weight.isValidWeight(\"abdc\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"        Weight weightA \u003d new Weight(\"30\");","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"        Weight weightB \u003d new Weight(\"50\");","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"        assertTrue(weightA.equals(weightA));","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"        assertFalse(weightA.equals(\"30\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"        assertFalse(weightA.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"        assertFalse(weightA.equals(weightB));","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":45}},{"path":"src/test/java/seedu/nutrigoals/storage/JsonAdaptedFoodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.storage.JsonAdaptedFood.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.BREAD;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"nicolelim02"},"content":"public class JsonAdaptedFoodTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"    private static final String VALID_NAME \u003d BREAD.getName().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"    private static final String VALID_TAG \u003d BREAD.getTag().getTagName();","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"    private static final String VALID_CALORIE \u003d \"200\";","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"    private static final String VALID_DATE \u003d \"2022-10-05T05:38:22.902190\";","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    public void toModelType_validFoodDetails_returnsFood() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"        JsonAdaptedFood food \u003d new JsonAdaptedFood(BREAD);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"        assertEquals(BREAD, food.toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"        JsonAdaptedFood food \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"                new JsonAdaptedFood(INVALID_NAME, VALID_CALORIE, VALID_TAG, VALID_DATE);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, food::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"        JsonAdaptedFood food \u003d new JsonAdaptedFood(null, VALID_CALORIE, VALID_TAG, VALID_DATE);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, food::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"    public void toModelType_invalidTag_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        JsonAdaptedFood food \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"                new JsonAdaptedFood(VALID_NAME, VALID_CALORIE, INVALID_TAG, VALID_DATE);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"        assertThrows(IllegalValueException.class, food::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"    public void toModelType_nullTag_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"        JsonAdaptedFood food \u003d new JsonAdaptedFood(VALID_NAME, VALID_CALORIE, null, VALID_DATE);","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(IllegalValueException.class, food::toModelType);","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"    public void toModelType_invalidCalorie_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"        // negative calorie","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"        JsonAdaptedFood food \u003d new JsonAdaptedFood(VALID_NAME, \"-200\", VALID_TAG, VALID_DATE);","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(IllegalValueException.class, food::toModelType);","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"        // non-integer values","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"        food \u003d new JsonAdaptedFood(VALID_NAME, \"abc\", VALID_TAG, VALID_DATE);","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(IllegalValueException.class, food::toModelType);","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"nicolelim02"},"content":"        food \u003d new JsonAdaptedFood(VALID_NAME, \"10.4\", VALID_TAG, VALID_DATE);","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(IllegalValueException.class, food::toModelType);","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"        // null calorie","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"        food \u003d new JsonAdaptedFood(VALID_NAME, null, VALID_TAG, VALID_DATE);","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"nicolelim02"},"content":"        assertThrows(NullPointerException.class, food::toModelType);","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ruiqi7":3,"xav168":14,"nicolelim02":29,"-":26}},{"path":"src/test/java/seedu/nutrigoals/storage/JsonNutriGoalsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.APPLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.PANCAKE;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"nicolelim02"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.SUSHI;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"public class JsonNutriGoalsStorageTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonNutriGoalsStorageTest\");","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"    @TempDir","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    public void readNutriGoals_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e readNutriGoals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"    private java.util.Optional\u003cReadOnlyNutriGoals\u003e readNutriGoals(String filePath) throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"        return new JsonNutriGoalsStorage(Paths.get(filePath)).readNutriGoals(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"                : null;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        assertFalse(readNutriGoals(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"        assertThrows(DataConversionException.class, () -\u003e readNutriGoals(\"notJsonFormatNutriGoals.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"    public void readNutriGoals_invalidFoodNutriGoals_throwDataConversionException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"        assertThrows(DataConversionException.class, () -\u003e readNutriGoals(\"invalidFoodNutriGoals.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"    public void readNutriGoals_invalidAndValidFoodNutriGoals_throwDataConversionException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"        assertThrows(DataConversionException.class, () -\u003e readNutriGoals(\"invalidAndValidFoodNutriGoals.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"    public void readAndSaveNutriGoals_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"        Path filePath \u003d testFolder.resolve(\"TempNutriGoals.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"        NutriGoals original \u003d getTypicalNutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"xav168"},"content":"        JsonNutriGoalsStorage jsonNutriGoalsStorage \u003d new JsonNutriGoalsStorage(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"        jsonNutriGoalsStorage.saveNutriGoals(original, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"        ReadOnlyNutriGoals readBack \u003d jsonNutriGoalsStorage.readNutriGoals(filePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"xav168"},"content":"        assertEquals(original, new NutriGoals(readBack));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"nicolelim02"},"content":"        original.addFood(SUSHI);","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"        original.removeFood(APPLE);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"        jsonNutriGoalsStorage.saveNutriGoals(original, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"xav168"},"content":"        readBack \u003d jsonNutriGoalsStorage.readNutriGoals(filePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"xav168"},"content":"        assertEquals(original, new NutriGoals(readBack));","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"xav168"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"nicolelim02"},"content":"        original.addFood(PANCAKE);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"xav168"},"content":"        jsonNutriGoalsStorage.saveNutriGoals(original); // file path not specified","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"xav168"},"content":"        readBack \u003d jsonNutriGoalsStorage.readNutriGoals().get(); // file path not specified","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"xav168"},"content":"        assertEquals(original, new NutriGoals(readBack));","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"xav168"},"content":"    public void saveNutriGoals_nullNutriGoals_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveNutriGoals(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"xav168"},"content":"     * Saves {@code nutriGoals} at the specified {@code filePath}.","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"xav168"},"content":"    private void saveNutriGoals(ReadOnlyNutriGoals nutriGoals, String filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"xav168"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"xav168"},"content":"            new JsonNutriGoalsStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"xav168"},"content":"                    .saveNutriGoals(nutriGoals, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"xav168"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"xav168"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"xav168"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"xav168"},"content":"    public void saveNutriGoals_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"xav168"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveNutriGoals(new NutriGoals(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":106,"nicolelim02":4}},{"path":"src/test/java/seedu/nutrigoals/storage/JsonSerializableNutriGoalsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.util.JsonUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.testutil.TypicalFoods;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"public class JsonSerializableNutriGoalsTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"            \"test\", \"data\", \"JsonSerializableNutriGoalsTest\");","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"    private static final Path TYPICAL_FOOD_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalFoodNutriGoals.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    private static final Path INVALID_FOOD_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidFoodNutriGoals.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"    public void toModelType_typicalFoodFile_success() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"        JsonSerializableNutriGoals dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_FOOD_FILE,","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"                JsonSerializableNutriGoals.class).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        NutriGoals nutriGoalsFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"        NutriGoals typicalFoodNutriGoals \u003d TypicalFoods.getTypicalNutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"        assertEquals(nutriGoalsFromFile, typicalFoodNutriGoals);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"    public void toModelType_invalidFoodFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"        JsonSerializableNutriGoals dataFromFile \u003d JsonUtil.readJsonFile(INVALID_FOOD_FILE,","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"                JsonSerializableNutriGoals.class).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":38}},{"path":"src/test/java/seedu/nutrigoals/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"        userPrefs.setNutriGoalsFilePath(Paths.get(\"data/nutrigoals.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"xav168":6,"-":117}},{"path":"src/test/java/seedu/nutrigoals/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.TypicalFoods.getTypicalNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.ReadOnlyNutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        JsonNutriGoalsStorage nutriGoalsStorage \u003d new JsonNutriGoalsStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"        storageManager \u003d new StorageManager(nutriGoalsStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"    public void nutriGoalsReadSave() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"         * {@link JsonNutriGoalsStorage} class.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonNutriGoalsStorageTest} class.","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"        NutriGoals original \u003d getTypicalNutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"        storageManager.saveNutriGoals(original);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"        ReadOnlyNutriGoals retrieved \u003d storageManager.readNutriGoals().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"        assertEquals(original, new NutriGoals(retrieved));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"    public void getNutriGoalsFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"        assertNotNull(storageManager.getNutriGoalsFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":17,"-":51}},{"path":"src/test/java/seedu/nutrigoals/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"xav168":1,"-":33}},{"path":"src/test/java/seedu/nutrigoals/testutil/EditFoodDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":" * A utility class to help with building EditFoodDescriptor objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"nicolelim02"},"content":"public class EditFoodDescriptorBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"nicolelim02"},"content":"    private EditFoodDescriptor descriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"    public EditFoodDescriptorBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"        descriptor \u003d new EditFoodDescriptor();","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"nicolelim02"},"content":"    public EditFoodDescriptorBuilder(EditFoodDescriptor descriptor) {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"        this.descriptor \u003d new EditFoodDescriptor(descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"     * Returns an {@code EditFoodDescriptor} with fields containing {@code Food}\u0027s details","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"    public EditFoodDescriptorBuilder(Food food) {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"        descriptor \u003d new EditFoodDescriptor();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"        descriptor.setName(food.getName());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"        descriptor.setTag(food.getTag());","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"        descriptor.setCalorie(food.getCalorie());","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"        descriptor.setDateTime(food.getDateTime());","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":36,"author":{"gitId":"nicolelim02"},"content":"     * Sets the {@code Name} of the {@code EditFoodDescriptor} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"nicolelim02"},"content":"    public EditFoodDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"nicolelim02"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditFoodDescriptor}","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"    public EditFoodDescriptorBuilder withTags(String tag) {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"nicolelim02"},"content":"        // Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"        String tagName \u003d tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"nicolelim02"},"content":"        descriptor.setTag(new Tag(tagName));","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"nicolelim02"},"content":"     * Parses the {@code calorie} into a {@code Calorie} and set it to the {@code EditFoodDescriptor}","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"     * that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"    public EditFoodDescriptorBuilder withCalorie(String calorie) {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"nicolelim02"},"content":"        descriptor.setCalorie(new Calorie(calorie));","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"nicolelim02"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"nicolelim02"},"content":"    public EditFoodDescriptor build() {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ruiqi7":1,"xav168":10,"nicolelim02":26,"-":29}},{"path":"src/test/java/seedu/nutrigoals/testutil/FoodBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.DateTime;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":" * A utility class to help with building Food objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"ruiqi7"},"content":"public class FoodBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"ruiqi7"},"content":"    public static final String DEFAULT_NAME \u003d \"Almonds\";","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"nicolelim02"},"content":"    public static final String DEFAULT_TAG \u003d \"Breakfast\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ruiqi7"},"content":"    public static final String DEFAULT_EARLIER_TIME \u003d \"2022-09-05T10:30:15\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"    public static final String DEFAULT_LATER_TIME \u003d \"2022-09-05T10:50:15\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"    private Calorie calorie;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"    private Tag tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ruiqi7"},"content":"    private DateTime dateTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"ruiqi7"},"content":"     * Creates a {@code FoodBuilder} with the default details.","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"ruiqi7"},"content":"    public FoodBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"nicolelim02"},"content":"        calorie \u003d new Calorie();","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"nicolelim02"},"content":"        tag \u003d new Tag(DEFAULT_TAG);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"ruiqi7"},"content":"        dateTime \u003d new DateTime();","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":36,"author":{"gitId":"ruiqi7"},"content":"     * Initializes the FoodBuilder with the data of {@code foodToCopy}.","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":38,"author":{"gitId":"ruiqi7"},"content":"    public FoodBuilder(Food foodToCopy) {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"        name \u003d foodToCopy.getName();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"        calorie \u003d foodToCopy.getCalorie();","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"        tag \u003d foodToCopy.getTag();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"ruiqi7"},"content":"        dateTime \u003d foodToCopy.getDateTime();","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"ruiqi7"},"content":"     * Sets the {@code Name} of the {@code Food} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"ruiqi7"},"content":"    public FoodBuilder withName(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"nicolelim02"},"content":"     * Parses the {@code tag} into a {@code Tag} and set it to the {@code Food} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"    public FoodBuilder withTag(String... tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"nicolelim02"},"content":"        String t \u003d tags[tags.length - 1];","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"nicolelim02"},"content":"        this.tag \u003d SampleDataUtil.getTag(t);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"ruiqi7"},"content":"     * Sets the {@code Calorie} of the {@code Food} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"ruiqi7"},"content":"    public FoodBuilder withCalorie(String calorie) {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"nicolelim02"},"content":"        this.calorie \u003d new Calorie(calorie);","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"nicolelim02"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"ruiqi7"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"ruiqi7"},"content":"     * Sets the {@code DateTime} of the {@code Food} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"ruiqi7"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"ruiqi7"},"content":"    public FoodBuilder withDateTime(String dateTime) {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"ruiqi7"},"content":"        this.dateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"ruiqi7"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"ruiqi7"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"ruiqi7"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"nicolelim02"},"content":"    public Food build() {","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"nicolelim02"},"content":"        return new Food(name, calorie, tag, dateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"ruiqi7":23,"xav168":8,"nicolelim02":20,"-":31}},{"path":"src/test/java/seedu/nutrigoals/testutil/FoodUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_CALORIE;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.logic.commands.EditCommand.EditFoodDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"AkkFiros"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":" * A utility class for Food.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"public class FoodUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"     * Returns an add command string for adding the {@code Food}.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"    public static String getAddCommand(Food food) {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"AkkFiros"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getFoodDetails(food);","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"     * Returns the part of command string for the given {@code Food}\u0027s details.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"AkkFiros"},"content":"    public static String getFoodDetails(Food food) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"        sb.append(PREFIX_NAME + food.getName().fullName + \" \");","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"AkkFiros"},"content":"        sb.append(PREFIX_CALORIE + food.getCalorie().value + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"ruiqi7"},"content":"        sb.append(PREFIX_TAG + food.getTag().getTagName() + \" \");","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"     * Returns the part of command string for the given {@code EditFoodDescriptor}\u0027s details.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"    public static String getEditFoodDescriptorDetails(EditFoodDescriptor descriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"        descriptor.getCalorie().ifPresent(calorie -\u003e sb.append(PREFIX_CALORIE)","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"nicolelim02"},"content":"                .append(calorie.value).append(\" \"));","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"nicolelim02"},"content":"        descriptor.getTag().ifPresent(tag -\u003e sb.append(PREFIX_TAG).append(tag.tagName).append(\" \"));","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"AkkFiros":4,"ruiqi7":1,"xav168":13,"nicolelim02":5,"-":22}},{"path":"src/test/java/seedu/nutrigoals/testutil/NutriGoalsBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":" * A utility class to help with building NutriGoals objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":" *     {@code NutriGoals ab \u003d new NutriGoalsBuilder().withFood(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"public class NutriGoalsBuilder {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"    private NutriGoals nutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"    public NutriGoalsBuilder() {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"        nutriGoals \u003d new NutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"    public NutriGoalsBuilder(NutriGoals nutriGoals) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"        this.nutriGoals \u003d nutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xav168"},"content":"     * Adds a new {@code Food} to the {@code NutriGoals} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    public NutriGoalsBuilder withFood(Food food) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"        nutriGoals.addFood(food);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"    public NutriGoals build() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"        return nutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"xav168":34}},{"path":"src/test/java/seedu/nutrigoals/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xav168":1,"-":71}},{"path":"src/test/java/seedu/nutrigoals/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"     * Returns the middle index of the food in the {@code model}\u0027s food list.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"AkkFiros"},"content":"        return Index.fromOneBased(model.getFilteredFoodList().size() / 2);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"     * Returns the last index of the food in the {@code model}\u0027s food list.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"AkkFiros"},"content":"        return Index.fromOneBased(model.getFilteredFoodList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"     * Returns the food in the {@code model}\u0027s food list at {@code index}.","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"    public static Food getFood(Model model, Index index) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"AkkFiros"},"content":"        return model.getFilteredFoodList().get(index.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AkkFiros":3,"xav168":8,"-":44}},{"path":"src/test/java/seedu/nutrigoals/testutil/TypicalFoods.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":7,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.Calorie;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.NutriGoals;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.meal.Food;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":" * A utility class containing a list of {@code Food} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"public class TypicalFoods {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":16,"author":{"gitId":"ruiqi7"},"content":"    public static final Food APPLE \u003d new FoodBuilder().withName(\"Apple\")","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"nicolelim02"},"content":"            .withTag(\"breakfast\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ruiqi7"},"content":"    public static final Food BREAD \u003d new FoodBuilder().withName(\"Bread\")","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"nicolelim02"},"content":"            .withTag(\"lunch\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ruiqi7"},"content":"    public static final Food CARBONARA \u003d new FoodBuilder().withName(\"Carbonara\")","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"nicolelim02"},"content":"            .withTag(\"lunch\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"nicolelim02"},"content":"    public static final Food DRAGON_FRUIT \u003d new FoodBuilder().withName(\"Dragon fruit\")","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"nicolelim02"},"content":"            .withTag(\"lunch\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"    public static final Food EGG_SOUP \u003d new FoodBuilder().withName(\"Egg soup\")","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"nicolelim02"},"content":"            .withTag(\"dinner\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"nicolelim02"},"content":"    public static final Food FISHCAKE \u003d new FoodBuilder().withName(\"Fishcake\")","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"nicolelim02"},"content":"            .withTag(\"dinner\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"nicolelim02"},"content":"    public static final Food GRAPES \u003d new FoodBuilder().withName(\"Grapes\")","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"nicolelim02"},"content":"            .withTag(\"dinner\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"nicolelim02"},"content":"    public static final Food SUSHI \u003d new FoodBuilder().withName(\"Sushi\")","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"nicolelim02"},"content":"            .withTag(\"dinner\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"    public static final Food PANCAKE \u003d new FoodBuilder().withName(\"Pancake\")","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"nicolelim02"},"content":"            .withTag(\"lunch\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"nicolelim02"},"content":"    public static final Calorie TARGET_CALORIE \u003d new Calorie();","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"    private TypicalFoods() {} // prevents instantiation","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"     * Returns an {@code AddressBook} with all the typical foods.","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"xav168"},"content":"    public static NutriGoals getTypicalNutriGoals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"        NutriGoals ab \u003d new NutriGoals();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"nicolelim02"},"content":"        for (Food food : getTypicalFoods()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"            ab.addFood(food);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"nicolelim02"},"content":"        // ab.setCalorieTarget(TARGET_CALORIE);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":56,"author":{"gitId":"nicolelim02"},"content":"    public static List\u003cFood\u003e getTypicalFoods() {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"ruiqi7"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPLE, BREAD, CARBONARA, DRAGON_FRUIT, EGG_SOUP, FISHCAKE, GRAPES));","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ruiqi7":4,"xav168":10,"nicolelim02":22,"-":23}},{"path":"src/test/java/seedu/nutrigoals/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"    public static final Index INDEX_FIRST_MEAL \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":"    public static final Index INDEX_SECOND_MEAL \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":"    public static final Index INDEX_THIRD_MEAL \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"xav168":5,"-":7}},{"path":"src/test/java/seedu/nutrigoals/testutil/UserBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.testutil;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"nicolelim02"},"content":"import seedu.nutrigoals.model.user.Age;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Height;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.User;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.model.user.Weight;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xav168"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xav168"},"content":" * A Utility class to help with building user objects","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xav168"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xav168"},"content":"public class UserBuilder {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"    public static final String DEFAULT_WEIGHT \u003d \"65\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xav168"},"content":"    public static final String DEFAULT_IDEAL \u003d \"60\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xav168"},"content":"    public static final String DEFAULT_GENDER \u003d \"M\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xav168"},"content":"    public static final String DEFAULT_HEIGHT \u003d \"170\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"nicolelim02"},"content":"    public static final String DEFAULT_AGE \u003d \"20\";","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"xav168"},"content":"    private Weight weight;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xav168"},"content":"    private Height height;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xav168"},"content":"    private Weight ideal;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xav168"},"content":"    private Gender gender;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"nicolelim02"},"content":"    private Age age;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xav168"},"content":"     * Default constructer initialises values to default values","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xav168"},"content":"    public UserBuilder() {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"xav168"},"content":"        this.gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xav168"},"content":"        this.weight \u003d new Weight(DEFAULT_WEIGHT);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xav168"},"content":"        this.ideal \u003d new Weight(DEFAULT_IDEAL);","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"xav168"},"content":"        this.height \u003d new Height(DEFAULT_HEIGHT);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"nicolelim02"},"content":"        this.age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xav168"},"content":"     * copies User in userCopy into current user","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xav168"},"content":"     * @param userCopy","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xav168"},"content":"    public UserBuilder(User userCopy) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xav168"},"content":"        this.height \u003d userCopy.getHeight();","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xav168"},"content":"        this.weight \u003d userCopy.getWeight();","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xav168"},"content":"        this.ideal \u003d userCopy.getIdealWeight();","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xav168"},"content":"        this.gender \u003d userCopy.getGender();","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"nicolelim02"},"content":"        this.age \u003d userCopy.getAge();","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xav168"},"content":"     * Sets the {@code Height} of the {@code User} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"xav168"},"content":"    public UserBuilder withHeight(String height) {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"xav168"},"content":"        this.height \u003d new Height(height);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xav168"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xav168"},"content":"     * Sets the {@code IdealWeight} of the {@code User} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xav168"},"content":"    public UserBuilder withIdeal(String ideal) {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"xav168"},"content":"        this.ideal \u003d new Weight(ideal);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xav168"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"xav168"},"content":"     * Sets the {@code Weight} of the {@code User} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"xav168"},"content":"    public UserBuilder withWeight(String weight) {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"xav168"},"content":"        this.weight \u003d new Weight(weight);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"xav168"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"xav168"},"content":"     * Sets the {@code Gender} of the {@code User} that we are building.","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"xav168"},"content":"    public UserBuilder withGender(String gender) {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"xav168"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"xav168"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"xav168"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"nicolelim02"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"nicolelim02"},"content":"     * Sets the {@code Age} of the {@code User} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"nicolelim02"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"nicolelim02"},"content":"    public UserBuilder withAge(String age) {","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"nicolelim02"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"nicolelim02"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"nicolelim02"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"nicolelim02"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"xav168"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"xav168"},"content":"     * Builds user as per user builder","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"xav168"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"xav168"},"content":"    public User build() {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"nicolelim02"},"content":"        return new User(gender, height, weight, ideal, age);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"xav168"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"xav168"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xav168":81,"nicolelim02":14}},{"path":"src/test/java/seedu/nutrigoals/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"xav168":1,"-":34}},{"path":"src/test/java/seedu/nutrigoals/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xav168"},"content":"package seedu.nutrigoals.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xav168"},"content":"import static seedu.nutrigoals.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"xav168"},"content":"import seedu.nutrigoals.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"xav168":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"\u003c?import seedu.nutrigoals.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"xav168":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"xav168"},"content":"\u003cfx:root type\u003d\"seedu.nutrigoals.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"xav168":1,"-":5}}]
