[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"# PayMeLah","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W13-3/tp/actions)","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W13-3/tp/branch/master/graph/badge.svg?token\u003dTBAXW0TGX3)](https://codecov.io/gh/AY2223S1-CS2103T-W13-3/tp)","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"[PayMeLah (PML)](https://AY2223S1-CS2103T-W13-3.github.io/tp) is a desktop app for managing the debts your friends owe you. It is optimized for CLI users so that managing debts and contacts is faster by typing in commands.","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"## Site Map","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"* [About Us](docs/AboutUs.md)","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"* [User Guide](docs/UserGuide.md)","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"* [Developer Guide](docs/DeveloperGuide.md)","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"_This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)._","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"tsammeow":1,"-":4,"TheSoggy":10}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"mainClassName \u003d \u0027paymelah.Main\u0027","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"run {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"    archiveFileName \u003d \u0027PayMeLah.jar\u0027","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tsammeow":1,"waynezsy":5,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"### Chen Lyuting","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"\u003cimg src\u003d\"images/lyuting47.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"[[github](http://github.com/lyuting47)]","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"[[portfolio](team/lyuting47.md)]","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"### Wayne Zhang Si Yuan","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"\u003cimg src\u003d\"images/waynezsy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"[[github](http://github.com/waynezsy)]","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"[[portfolio](team/waynezsy.md)]","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"* Responsibilities: Team Lead, Deliverables and Deadlines","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"WR3nd3"},"content":"### Wong Rende","lastModifiedDate":"2022-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"WR3nd3"},"content":"\u003cimg src\u003d\"images/wr3nd3.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":36,"author":{"gitId":"WR3nd3"},"content":"[[github](http://github.com/wr3nd3)]","lastModifiedDate":"2022-09-24"},{"lineNumber":37,"author":{"gitId":"WR3nd3"},"content":"[[portfolio](team/wr3nd3.md)]","lastModifiedDate":"2022-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-24"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"### Samuel Tan","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"tsammeow"},"content":"\u003cimg src\u003d\"images/tsammeow.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"tsammeow"},"content":"[[github](http://github.com/tsammeow)]","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"tsammeow"},"content":"[[portfolio](team/tsammeow.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"* Responsibilities: Testing","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"TheSoggy"},"content":"### Bryan Yang","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"TheSoggy"},"content":"\u003cimg src\u003d\"images/thesoggy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"TheSoggy"},"content":"[[github](http://github.com/thesoggy)]","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"TheSoggy"},"content":"[[portfolio](team/thesoggy.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"* Responsibilities: Integration","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"WR3nd3":4,"tsammeow":3,"waynezsy":14,"-":35,"TheSoggy":4}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"TheSoggy"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W13-3/tp/branch/master/graph/badge.svg?token\u003dTBAXW0TGX3)](https://codecov.io/gh/AY2223S1-CS2103T-W13-3/tp) in that page reflects the coverage of your project.","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"TheSoggy"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2223S1-CS2103T-W13-3/tp/tree/master/src/main/java/paymelah/MainApp.java).","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"-":78,"TheSoggy":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103T-W13-3/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"TheSoggy"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-W13-3/tp/blob/master/src/main/java/paymelah/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-W13-3/tp/blob/master/src/main/java/paymelah/MainApp.java). It is responsible for,","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"TheSoggy"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-W13-3/tp/blob/master/src/main/java/paymelah/ui/Ui.java)","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"TheSoggy"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-W13-3/tp/blob/master/src/main/java/paymelah/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-W13-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"TheSoggy"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-W13-3/tp/blob/master/src/main/java/paymelah/logic/Logic.java)","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"TheSoggy"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-W13-3/tp/blob/master/src/main/java/paymelah/model/Model.java)","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"TheSoggy"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-W13-3/tp/blob/master/src/main/java/paymelah/storage/Storage.java)","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"lyuting47"},"content":"### List debtors feature","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"lyuting47"},"content":"#### Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"lyuting47"},"content":"This feature is facilitated by `ListDebtorsCommandParser` and `ListDebtorsCommand` in the `Logic` component. It also utilises `DebtGreaterEqualAmountPredicate` which implements Java\u0027s in-built `Predicate` interface. The command parser and the command itself work similarly to the others, and will not be explained in detail here. Please refer to the Logic component above for more details.","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"lyuting47"},"content":"The `DebtGreaterEqualAmountPredicate` constructor takes in a `Money` object, and returns a `Predicate\u003cPerson\u003e` that tests whether a `Person`\u0027s total amount owed is greater than or equal to the `Money` parameter. When a user requests to list debtors who owe over a certain amount of money, `ListDebtorsCommandParser` will create a `DebtGreaterEqualAmountPredicate` using the amount provided. The resulting `ListDebtorsCommand` will use this predicate to communicate to the Model which Persons to display: the ones that pass the predicate\u0027s test. Note that this command does not modify the internal list of Persons in the Model, only the displayed list.","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"lyuting47"},"content":"As an example, suppose the user requests to list debtors who owe more than $10. The object diagram below shows the relationships between the noteworthy objects.","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"lyuting47"},"content":"**(Insert object diagram here)**","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"lyuting47"},"content":"To cater to a common use case where the user might want to simply list all debtors regardless of the amount they owe, `ListDebtorsCommandParser` can also handle requests without an amount specified. In such a case, it will create a predicate that simply checks whether a Person\u0027s DebtList is empty.","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"lyuting47"},"content":"The activity diagram below details the behaviour of PayMeLah when a user requests to list debtors. Note the difference in behaviour depending on whether the user specifies an amount.","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"lyuting47"},"content":"**(Insert activity diagram here)**","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"lyuting47"},"content":"* **Alternative for listing all debtors:** use a `DebtGreaterEqualAmountPredicate` with $0 as the amount","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"lyuting47"},"content":"    * Pros: More consistent behaviour: every `ListDebtorsCommand` will have an associated `DebtGreaterEqualAmountPredicate`.","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"lyuting47"},"content":"    * Cons: May not work properly with possible future extensions (e.g. Debts extended to be able to take negative values to indicate user owing the person money)","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"WR3nd3"},"content":"* is a university student who organizes many bulk purchases","lastModifiedDate":"2022-09-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"WR3nd3"},"content":"* has a need to track who has paid him back","lastModifiedDate":"2022-09-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"WR3nd3"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-24"},{"lineNumber":289,"author":{"gitId":"WR3nd3"},"content":"1. track their debtors","lastModifiedDate":"2022-09-24"},{"lineNumber":290,"author":{"gitId":"WR3nd3"},"content":"1. view total money owed from all debtors","lastModifiedDate":"2022-09-25"},{"lineNumber":291,"author":{"gitId":"WR3nd3"},"content":"1. manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"WR3nd3"},"content":"| Priority | As a …​    | I can …​                                                           | So that …​                                                 |","lastModifiedDate":"2022-09-24"},{"lineNumber":298,"author":{"gitId":"WR3nd3"},"content":"|----------|------------|--------------------------------------------------------------------|---------------------------------------------------------------------|","lastModifiedDate":"2022-09-24"},{"lineNumber":299,"author":{"gitId":"WR3nd3"},"content":"| `* * *`  | user       | save persons and their contact details                             | I do not need to remember these details                             |","lastModifiedDate":"2022-09-24"},{"lineNumber":300,"author":{"gitId":"WR3nd3"},"content":"| `* * *`  | user       | keep track of debts                                                | I know who owes me money and for what                               |","lastModifiedDate":"2022-09-24"},{"lineNumber":301,"author":{"gitId":"WR3nd3"},"content":"| `* * *`  | user       | remove debts                                                       | I do not mistakenly think I have not yet been paid                  |","lastModifiedDate":"2022-09-24"},{"lineNumber":302,"author":{"gitId":"WR3nd3"},"content":"| `* * *`  | user       | see how much I am owed in total                                    | I know how much I expect to be paid                                 |","lastModifiedDate":"2022-09-24"},{"lineNumber":303,"author":{"gitId":"WR3nd3"},"content":"| `* * *`  | user       | close the application                                              |                                                                     |","lastModifiedDate":"2022-09-24"},{"lineNumber":304,"author":{"gitId":"WR3nd3"},"content":"| `* *`    | user       | see an overview of all the debts owed                              | I am in better control of my overall financial situation            |","lastModifiedDate":"2022-09-25"},{"lineNumber":305,"author":{"gitId":"WR3nd3"},"content":"| `* *`    | user       | search for a person’s contact                                      | I can easily access his contact details                             |","lastModifiedDate":"2022-09-25"},{"lineNumber":306,"author":{"gitId":"WR3nd3"},"content":"| `* *`    | user       | save my contacts and debts over multiple usage sessions of the app | I do not need to key in data again when I exit and re-enter the app |","lastModifiedDate":"2022-09-24"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"waynezsy"},"content":"(For all use cases below, the **System** is `PayMeLah` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-27"},{"lineNumber":313,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":314,"author":{"gitId":"waynezsy"},"content":"**UC01: Add a person**","lastModifiedDate":"2022-10-15"},{"lineNumber":315,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":316,"author":{"gitId":"waynezsy"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":317,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":318,"author":{"gitId":"waynezsy"},"content":"1.  User requests to add a person","lastModifiedDate":"2022-09-27"},{"lineNumber":319,"author":{"gitId":"waynezsy"},"content":"1.  PayMeLah adds the person","lastModifiedDate":"2022-09-27"},{"lineNumber":320,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":321,"author":{"gitId":"waynezsy"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":322,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":323,"author":{"gitId":"waynezsy"},"content":"**Extensions:**","lastModifiedDate":"2022-09-27"},{"lineNumber":324,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":325,"author":{"gitId":"waynezsy"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":326,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":327,"author":{"gitId":"waynezsy"},"content":"    * 1a1. PayMeLah shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":329,"author":{"gitId":"waynezsy"},"content":"      Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":330,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":331,"author":{"gitId":"waynezsy"},"content":"**UC02: Add a debt**","lastModifiedDate":"2022-10-15"},{"lineNumber":332,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":333,"author":{"gitId":"waynezsy"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":334,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":335,"author":{"gitId":"waynezsy"},"content":"1.  User requests to list persons","lastModifiedDate":"2022-09-27"},{"lineNumber":336,"author":{"gitId":"waynezsy"},"content":"1.  PayMeLah shows a list of persons","lastModifiedDate":"2022-09-27"},{"lineNumber":337,"author":{"gitId":"waynezsy"},"content":"1.  User requests to add a debt to a specific person in the list","lastModifiedDate":"2022-09-27"},{"lineNumber":338,"author":{"gitId":"waynezsy"},"content":"1.  PayMeLah adds the debt to the person","lastModifiedDate":"2022-09-27"},{"lineNumber":339,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":340,"author":{"gitId":"waynezsy"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":341,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":342,"author":{"gitId":"waynezsy"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":343,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":344,"author":{"gitId":"waynezsy"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":345,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":346,"author":{"gitId":"waynezsy"},"content":"    * 1a1. PayMeLah shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":347,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":348,"author":{"gitId":"waynezsy"},"content":"      Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":349,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":350,"author":{"gitId":"waynezsy"},"content":"* 3a. The given input is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":351,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":352,"author":{"gitId":"waynezsy"},"content":"    * 3a1. PayMeLah shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":353,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":354,"author":{"gitId":"waynezsy"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"waynezsy"},"content":"**UC03: Delete a person**","lastModifiedDate":"2022-10-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"waynezsy"},"content":"1.  PayMeLah shows a list of persons","lastModifiedDate":"2022-09-27"},{"lineNumber":362,"author":{"gitId":"lyuting47"},"content":"1.  User requests to delete a specific person in the list","lastModifiedDate":"2022-09-24"},{"lineNumber":363,"author":{"gitId":"waynezsy"},"content":"1.  PayMeLah deletes the person","lastModifiedDate":"2022-09-27"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"waynezsy"},"content":"    * 3a1. PayMeLah shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":380,"author":{"gitId":"waynezsy"},"content":"**UC04: Clear debts**","lastModifiedDate":"2022-10-15"},{"lineNumber":381,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":382,"author":{"gitId":"WR3nd3"},"content":"**MSS**","lastModifiedDate":"2022-09-24"},{"lineNumber":383,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":384,"author":{"gitId":"WR3nd3"},"content":"1.  User requests to list debtors","lastModifiedDate":"2022-09-24"},{"lineNumber":385,"author":{"gitId":"WR3nd3"},"content":"1.  PayMeLah shows a list of debtors","lastModifiedDate":"2022-09-25"},{"lineNumber":386,"author":{"gitId":"WR3nd3"},"content":"1.  User requests to clear the debts of a specific debtor in the list","lastModifiedDate":"2022-10-06"},{"lineNumber":387,"author":{"gitId":"WR3nd3"},"content":"1.  PayMeLah clears the debts of that person","lastModifiedDate":"2022-10-06"},{"lineNumber":388,"author":{"gitId":"WR3nd3"},"content":"1.  PayMeLah displays that the person’s debts are cleared","lastModifiedDate":"2022-10-06"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":390,"author":{"gitId":"WR3nd3"},"content":"**Extensions**","lastModifiedDate":"2022-09-24"},{"lineNumber":391,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":392,"author":{"gitId":"WR3nd3"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-24"},{"lineNumber":393,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":394,"author":{"gitId":"WR3nd3"},"content":"    * 3a1. PayMeLah shows an error message","lastModifiedDate":"2022-09-24"},{"lineNumber":395,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":396,"author":{"gitId":"WR3nd3"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-24"},{"lineNumber":397,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":398,"author":{"gitId":"waynezsy"},"content":"**UC05: List persons with debts**","lastModifiedDate":"2022-10-15"},{"lineNumber":399,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":400,"author":{"gitId":"lyuting47"},"content":"**MSS**","lastModifiedDate":"2022-09-24"},{"lineNumber":401,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":402,"author":{"gitId":"lyuting47"},"content":"1.  User requests to list persons with debts","lastModifiedDate":"2022-09-24"},{"lineNumber":403,"author":{"gitId":"waynezsy"},"content":"1.  PayMeLah shows the list of persons","lastModifiedDate":"2022-09-27"},{"lineNumber":404,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":405,"author":{"gitId":"lyuting47"},"content":"    Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":406,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":407,"author":{"gitId":"lyuting47"},"content":"**Extensions**","lastModifiedDate":"2022-09-24"},{"lineNumber":408,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":409,"author":{"gitId":"lyuting47"},"content":"* 2a. The list is empty (no persons with debts).","lastModifiedDate":"2022-09-24"},{"lineNumber":410,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":411,"author":{"gitId":"lyuting47"},"content":"  Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":412,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":413,"author":{"gitId":"waynezsy"},"content":"**UC06: Find a person by name**","lastModifiedDate":"2022-10-15"},{"lineNumber":414,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":415,"author":{"gitId":"tsammeow"},"content":"**MSS**","lastModifiedDate":"2022-09-26"},{"lineNumber":416,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":417,"author":{"gitId":"tsammeow"},"content":"1. User requests to find a person by name.","lastModifiedDate":"2022-09-26"},{"lineNumber":418,"author":{"gitId":"tsammeow"},"content":"1. PayMeLah shows a list of people with that name.","lastModifiedDate":"2022-09-26"},{"lineNumber":419,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":420,"author":{"gitId":"tsammeow"},"content":"    Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":421,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":422,"author":{"gitId":"tsammeow"},"content":"**Extensions**","lastModifiedDate":"2022-09-26"},{"lineNumber":423,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":424,"author":{"gitId":"tsammeow"},"content":"* 1a. There is no person with the given name.","lastModifiedDate":"2022-09-26"},{"lineNumber":425,"author":{"gitId":"tsammeow"},"content":"  * 1a1. PayMeLah shows an error message.","lastModifiedDate":"2022-09-26"},{"lineNumber":426,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":427,"author":{"gitId":"tsammeow"},"content":"    Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":428,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":429,"author":{"gitId":"waynezsy"},"content":"**UC07: Find a person by debt description**","lastModifiedDate":"2022-10-15"},{"lineNumber":430,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":431,"author":{"gitId":"tsammeow"},"content":"**MSS**","lastModifiedDate":"2022-09-26"},{"lineNumber":432,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":433,"author":{"gitId":"tsammeow"},"content":"1. User requests to find a person by debt description.","lastModifiedDate":"2022-09-26"},{"lineNumber":434,"author":{"gitId":"tsammeow"},"content":"1. PayMeLah shows a list of people with a debt matching the debt description.","lastModifiedDate":"2022-09-26"},{"lineNumber":435,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":436,"author":{"gitId":"tsammeow"},"content":"   Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":437,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":438,"author":{"gitId":"tsammeow"},"content":"**Extensions**","lastModifiedDate":"2022-09-26"},{"lineNumber":439,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":440,"author":{"gitId":"tsammeow"},"content":"* 1a. There is no debt matching the given description.","lastModifiedDate":"2022-09-26"},{"lineNumber":441,"author":{"gitId":"tsammeow"},"content":"    * 1a1. PayMeLah shows an error message.","lastModifiedDate":"2022-09-26"},{"lineNumber":442,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":443,"author":{"gitId":"tsammeow"},"content":"      Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":444,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":445,"author":{"gitId":"waynezsy"},"content":"**UC08: Get debt overview**","lastModifiedDate":"2022-10-15"},{"lineNumber":446,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":447,"author":{"gitId":"TheSoggy"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":448,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":449,"author":{"gitId":"TheSoggy"},"content":"1. User requests to get overview of all debts","lastModifiedDate":"2022-09-27"},{"lineNumber":450,"author":{"gitId":"TheSoggy"},"content":"1. PayMeLah shows the total sum of debts the user is owed.","lastModifiedDate":"2022-09-27"},{"lineNumber":451,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":452,"author":{"gitId":"TheSoggy"},"content":"   Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":454,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"waynezsy"},"content":"1. The software should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2022-09-24"},{"lineNumber":459,"author":{"gitId":"waynezsy"},"content":"1. The software will not facilitate actual monetary transactions, nor any communications between persons.","lastModifiedDate":"2022-09-24"},{"lineNumber":460,"author":{"gitId":"waynezsy"},"content":"1. The software should be able to hold up to 1000 persons and 10000 debts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-24"},{"lineNumber":461,"author":{"gitId":"waynezsy"},"content":"1. The software should not result in noticeable lag for other applications.","lastModifiedDate":"2022-09-24"},{"lineNumber":462,"author":{"gitId":"waynezsy"},"content":"1. The product should be for a single user only; multiple users cannot use the software on the same device simultaneously.","lastModifiedDate":"2022-09-24"},{"lineNumber":463,"author":{"gitId":"waynezsy"},"content":"1. The data stored by the software should be stored locally and in a human editable text file, rather than stored using a DBMS.","lastModifiedDate":"2022-09-24"},{"lineNumber":464,"author":{"gitId":"waynezsy"},"content":"1. The software should work without requiring an installer.","lastModifiedDate":"2022-09-24"},{"lineNumber":465,"author":{"gitId":"waynezsy"},"content":"1. The software should not depend on a remote server.","lastModifiedDate":"2022-09-24"},{"lineNumber":466,"author":{"gitId":"waynezsy"},"content":"1. The software should not require the user to create an account on a third-party service.","lastModifiedDate":"2022-09-24"},{"lineNumber":467,"author":{"gitId":"waynezsy"},"content":"1. The software should follow the Object-oriented paradigm primarily.","lastModifiedDate":"2022-09-24"},{"lineNumber":468,"author":{"gitId":"waynezsy"},"content":"1. The software should avoid implementing hard-to-test features or features that make the product hard-to-test.","lastModifiedDate":"2022-09-24"},{"lineNumber":469,"author":{"gitId":"waynezsy"},"content":"1. The software should only make use of third-party frameworks/libraries/services if they are free, open-source, and have permissive license terms.","lastModifiedDate":"2022-09-24"},{"lineNumber":470,"author":{"gitId":"waynezsy"},"content":"1. The software should be able to be packaged into a single JAR file.","lastModifiedDate":"2022-09-24"},{"lineNumber":471,"author":{"gitId":"waynezsy"},"content":"1. The file sizes of the product and its documents should be reasonable, i.e. the JAR file itself should not exceed 100MB and the documents should not exceed 15MB per file.","lastModifiedDate":"2022-09-24"},{"lineNumber":472,"author":{"gitId":"waynezsy"},"content":"1. The GUI should work well for standard screen resolutions 1920x1080 and higher, and, for screen scales 100% and 125%.","lastModifiedDate":"2022-09-24"},{"lineNumber":473,"author":{"gitId":"waynezsy"},"content":"1. The GUI should be usable for resolutions 1280x720 and higher, and, for screen scales 150%.","lastModifiedDate":"2022-09-24"},{"lineNumber":474,"author":{"gitId":"waynezsy"},"content":"1. The GUI should have a readable font, at least size 12.","lastModifiedDate":"2022-09-24"},{"lineNumber":475,"author":{"gitId":"waynezsy"},"content":"1. The GUI should be able to respond to user inputs in 500 milliseconds.","lastModifiedDate":"2022-09-24"},{"lineNumber":476,"author":{"gitId":"waynezsy"},"content":"1. The software and documentation should be accessible for users who have a basic command of the English language.","lastModifiedDate":"2022-09-24"},{"lineNumber":477,"author":{"gitId":"waynezsy"},"content":"1. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-09-24"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"tsammeow"},"content":"* **Debtor**: The person who owes money.","lastModifiedDate":"2022-09-26"},{"lineNumber":483,"author":{"gitId":"tsammeow"},"content":"* **Creditor**: The person who is owed money.","lastModifiedDate":"2022-09-26"},{"lineNumber":484,"author":{"gitId":"tsammeow"},"content":"* **Debt**: The transaction event (e.g. group dinner, Grab food order) where money is owed between a debtor and a creditor","lastModifiedDate":"2022-09-26"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"WR3nd3":32,"tsammeow":33,"lyuting47":36,"waynezsy":72,"-":350,"TheSoggy":14}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"   1. Run the `paymelah.Main` and try a few commands.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"tsammeow":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"   e.g. `paymelah.commons.util.StringUtilTest`","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"   e.g. `paymelah.storage.StorageManagerTest`","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"   e.g. `paymelah.logic.LogicManagerTest`","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"tsammeow":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"PayMeLah is a **desktop app for managing the debts your friends owe you, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PayMeLah can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"1. Download the latest `paymelah.jar` from [here](https://github.com/AY2223S1-CS2103T-W13-3/tp/releases).","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for PayMeLah.","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"* Words in diamond brackets `\u003c\u003e` are parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"  e.g. in `add n/\u003cname\u003e`, `\u003cname\u003e` is a parameter which can be used as `add n/John`.","lastModifiedDate":"2022-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"* Parameters with ... can be used multiple times.\u003cbr\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"  e.g. in  `add n/\u003cname\u003e [t/\u003ctag\u003e]…`, `[t/\u003ctag\u003e]…` is a parameter which can be used as `add n/John t/forgetful t/loser`","lastModifiedDate":"2022-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"* Items in square brackets `[]` are optional.\u003cbr\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"  e.g. in `add n/\u003cname\u003e [t/\u003ctag\u003e]…` can be used as `add n/Alan Poe t/shy pooper` or as `add n/Alan Poe`.","lastModifiedDate":"2022-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"  e.g. if the command specifies `n/\u003cname\u003e p/\u003cphone number\u003e`, `p/\u003cphone number\u003e n/\u003cname\u003e` is also acceptable.","lastModifiedDate":"2022-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`)","lastModifiedDate":"2022-09-24"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"  will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"waynezsy"},"content":"Adds a person to PayMeLah.","lastModifiedDate":"2022-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"waynezsy"},"content":"Format: `add n/\u003cname\u003e p/\u003cphone number\u003e e/\u003cemail\u003e a/\u003caddress\u003e [t/\u003ctag\u003e]…`","lastModifiedDate":"2022-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"waynezsy"},"content":"### Adding a debt: `adddebt`","lastModifiedDate":"2022-09-24"},{"lineNumber":92,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":93,"author":{"gitId":"waynezsy"},"content":"Adds a debt to PayMeLah for you to track.","lastModifiedDate":"2022-09-24"},{"lineNumber":94,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":95,"author":{"gitId":"waynezsy"},"content":"Format: `adddebt \u003cperson index\u003e d/\u003cdescription\u003e m/\u003cmoney\u003e`","lastModifiedDate":"2022-09-24"},{"lineNumber":96,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":97,"author":{"gitId":"waynezsy"},"content":"Example:","lastModifiedDate":"2022-09-24"},{"lineNumber":98,"author":{"gitId":"waynezsy"},"content":"* `adddebt 3 d/McDonalds m/8.9`","lastModifiedDate":"2022-09-24"},{"lineNumber":99,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":100,"author":{"gitId":"WR3nd3"},"content":"### Clearing debts: `cleardebts`","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":102,"author":{"gitId":"WR3nd3"},"content":"Clears all of a debtor\u0027s debts from PayMeLah according to his index number when listed.","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":104,"author":{"gitId":"WR3nd3"},"content":"Format: `cleardebts \u003cperson index\u003e`","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":106,"author":{"gitId":"WR3nd3"},"content":"Example:","lastModifiedDate":"2022-09-24"},{"lineNumber":107,"author":{"gitId":"waynezsy"},"content":"* `cleardebts 3`","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":109,"author":{"gitId":"TheSoggy"},"content":"### Getting the statement","lastModifiedDate":"2022-09-27"},{"lineNumber":110,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":111,"author":{"gitId":"TheSoggy"},"content":"Retrieves a statement of the total sum of debts you are owed.","lastModifiedDate":"2022-09-27"},{"lineNumber":112,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":113,"author":{"gitId":"TheSoggy"},"content":"Format: `statement`","lastModifiedDate":"2022-09-27"},{"lineNumber":114,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":115,"author":{"gitId":"TheSoggy"},"content":"Example: `statement` returns `You are owed $583.90 in total.`","lastModifiedDate":"2022-09-27"},{"lineNumber":116,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"waynezsy"},"content":"Shows a list of all persons in PayMeLah.","lastModifiedDate":"2022-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"lyuting47"},"content":"### Listing all debtors : `listdebtors`","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":125,"author":{"gitId":"lyuting47"},"content":"Shows a list of all persons that owe you money in PayMeLah.","lastModifiedDate":"2022-09-24"},{"lineNumber":126,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":127,"author":{"gitId":"lyuting47"},"content":"Format: `listdebtors`","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"waynezsy"},"content":"Edits an existing person in PayMeLah.","lastModifiedDate":"2022-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"waynezsy"},"content":"Format: `edit \u003cindex\u003e [n/\u003cname\u003e] [p/\u003cphone number\u003e] [e/\u003cemail\u003e] [a/\u003caddress\u003e] [t/\u003ctag\u003e]…`","lastModifiedDate":"2022-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"waynezsy"},"content":"* Edits the person at the specified `\u003cindex\u003e`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"waynezsy"},"content":"* When editing tags, the existing tags of the person will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"lyuting47"},"content":"* Cannot be used to modify a person\u0027s debts","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"waynezsy"},"content":"Format: `find \u003ckeyword\u003e [\u003cmore keywords\u003e]`","lastModifiedDate":"2022-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"tsammeow"},"content":"### Locating persons by debt description: `finddebt`","lastModifiedDate":"2022-09-27"},{"lineNumber":166,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":167,"author":{"gitId":"tsammeow"},"content":"Finds persons who are associated with any debts that match any of the given keywords.","lastModifiedDate":"2022-09-27"},{"lineNumber":168,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":169,"author":{"gitId":"tsammeow"},"content":"Format: `finddebt \u003ckeyword\u003e [\u003cmore keywords\u003e]`","lastModifiedDate":"2022-09-27"},{"lineNumber":170,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":171,"author":{"gitId":"tsammeow"},"content":"* The search is case-insensitive. e.g `burger` will match `Burger`","lastModifiedDate":"2022-09-27"},{"lineNumber":172,"author":{"gitId":"tsammeow"},"content":"* The order of the keywords does not matter. e.g. `Sharing Meal` will match `Meal Sharing`","lastModifiedDate":"2022-09-27"},{"lineNumber":173,"author":{"gitId":"tsammeow"},"content":"* Only the name is searched.","lastModifiedDate":"2022-09-27"},{"lineNumber":174,"author":{"gitId":"tsammeow"},"content":"* Only full words will be matched e.g. `Burger` will not match `Burgers`","lastModifiedDate":"2022-09-27"},{"lineNumber":175,"author":{"gitId":"tsammeow"},"content":"* Persons with debts matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-09-27"},{"lineNumber":176,"author":{"gitId":"tsammeow"},"content":"  e.g. `burger meal` will return people associated with debts that have descriptions `Chicken Burger` or `Meal Sharing`","lastModifiedDate":"2022-09-27"},{"lineNumber":177,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":178,"author":{"gitId":"tsammeow"},"content":"Examples:","lastModifiedDate":"2022-09-27"},{"lineNumber":179,"author":{"gitId":"tsammeow"},"content":"* `finddebt Burger` returns people associated with debts that have descriptions `burger` or `Chicken Burger`","lastModifiedDate":"2022-09-27"},{"lineNumber":180,"author":{"gitId":"tsammeow"},"content":"* `finddebt burger meal` returns people associated with debts that have descriptions `Chicken Burger` or `Meal Sharing`\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":181,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"waynezsy"},"content":"Deletes the specified person from PayMeLah.","lastModifiedDate":"2022-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"waynezsy"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2022-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"waynezsy"},"content":"* Deletes the person at the specified `\u003cindex\u003e`.","lastModifiedDate":"2022-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"waynezsy"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"waynezsy"},"content":"Clears all entries from PayMeLah.","lastModifiedDate":"2022-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"waynezsy"},"content":"PayMeLah data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":214,"author":{"gitId":"waynezsy"},"content":"PayMeLah data are saved as a JSON file `[JAR file location]/data/paymelah.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":217,"author":{"gitId":"waynezsy"},"content":"If your changes to the data file makes its format invalid, PayMeLah will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"waynezsy"},"content":"**Add person** | `add n/\u003cname\u003e p/\u003cphone number\u003e e/\u003cemail\u003e a/\u003caddress\u003e [t/\u003ctag\u003e]…` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2022-09-24"},{"lineNumber":234,"author":{"gitId":"waynezsy"},"content":"**Add debt** | `adddebt \u003cperson index\u003e d/\u003cdescription\u003e m/\u003cmoney\u003e` \u003cbr\u003e e.g., `adddebt 3 d/Chicken Rice m/4`","lastModifiedDate":"2022-09-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"waynezsy"},"content":"**Delete** | `delete \u003cindex\u003e`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2022-09-24"},{"lineNumber":237,"author":{"gitId":"waynezsy"},"content":"**Edit** | `edit \u003cindex\u003e [n/\u003cname\u003e] [p/\u003cphone number\u003e] [e/\u003cemail\u003e] [a/\u003caddress\u003e] [t/\u003ctag\u003e]…`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-09-24"},{"lineNumber":238,"author":{"gitId":"waynezsy"},"content":"**Find** | `find \u003ckeyword\u003e [\u003cmore keywords\u003e]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2022-09-24"},{"lineNumber":239,"author":{"gitId":"tsammeow"},"content":"**Find debts** | `finddebt \u003ckeyword\u003e [\u003cmore keywords\u003e]`\u003cbr\u003e e.g., `finddebt burger`","lastModifiedDate":"2022-09-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"lyuting47"},"content":"**List debtors** | `listdebtors`","lastModifiedDate":"2022-10-07"},{"lineNumber":242,"author":{"gitId":"TheSoggy"},"content":"**Get statement** | `statement`","lastModifiedDate":"2022-09-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"WR3nd3":8,"tsammeow":18,"waynezsy":44,"lyuting47":8,"-":156,"TheSoggy":9}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"waynezsy"},"content":"    content: \"PayMeLah\";","lastModifiedDate":"2022-09-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"waynezsy":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"title: PayMeLah","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W13-3/tp/actions)","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W13-3/tp/branch/master/graph/badge.svg?token\u003dTBAXW0TGX3)](https://codecov.io/gh/AY2223S1-CS2103T-W13-3/tp)","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"**PayMeLah is a desktop application for managing the debts your friends owe you.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"* If you are interested in using PayMeLah, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"* If you are interested about developing PayMeLah, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":14,"TheSoggy":5}},{"path":"docs/team/lyuting47.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyuting47"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":2,"author":{"gitId":"lyuting47"},"content":"layout: page","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"lyuting47"},"content":"title: Chen Lyuting\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"lyuting47"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"lyuting47"},"content":"### Project: PayMeLah","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":8,"author":{"gitId":"lyuting47"},"content":"[To be added]","lastModifiedDate":"2022-09-22"},{"lineNumber":9,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":10,"author":{"gitId":"lyuting47"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-22"},{"lineNumber":11,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":12,"author":{"gitId":"lyuting47"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2022-09-22"},{"lineNumber":13,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":14,"author":{"gitId":"lyuting47"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-22"},{"lineNumber":15,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":16,"author":{"gitId":"lyuting47"},"content":"* **Project management**:","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"lyuting47"},"content":"  * [To be added]","lastModifiedDate":"2022-09-22"},{"lineNumber":18,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":19,"author":{"gitId":"lyuting47"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-22"},{"lineNumber":20,"author":{"gitId":"lyuting47"},"content":"  * [To be added]","lastModifiedDate":"2022-09-22"},{"lineNumber":21,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"lyuting47"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"lyuting47"},"content":"  * User Guide:","lastModifiedDate":"2022-09-22"},{"lineNumber":24,"author":{"gitId":"lyuting47"},"content":"    * [To be added]","lastModifiedDate":"2022-09-22"},{"lineNumber":25,"author":{"gitId":"lyuting47"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"lyuting47"},"content":"    * [To be added]","lastModifiedDate":"2022-09-22"},{"lineNumber":27,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"lyuting47"},"content":"* **Community**:","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"lyuting47"},"content":"  * [To be added]","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"lyuting47"},"content":"* **Tools**:","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"lyuting47"},"content":"  * [To be added]","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"lyuting47":32}},{"path":"docs/team/thesoggy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"title: Bryan Yang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"### Project: PayMeLah","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"TheSoggy"},"content":"[To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"* **Project management**:","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"    * [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"    * [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"    * User Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"        * [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"TheSoggy"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":"        * [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"TheSoggy"},"content":"* **Community**:","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"TheSoggy"},"content":"    * [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"TheSoggy"},"content":"* **Tools**:","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"TheSoggy"},"content":"    * [To be added]","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"TheSoggy":32}},{"path":"docs/team/tsammeow.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"title: Samuel Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"### Project: PayMeLah","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"[To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"* **Code contributed**: [RepoSense link to be added]()","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"* **Project management**:","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"    * [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"    * [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"    * User Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"        * [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"        * [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"* **Community**:","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"    * [To be added]","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"* **Tools**:","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"    * [To be added]","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"tsammeow":32}},{"path":"docs/team/waynezsy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"layout: page","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"title: Wayne Zhang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"### Project: PayMeLah","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"[To be added]","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"* **Project management**:","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"  * [To be added]","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"  * [To be added]","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"  * User Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    * [To be added]","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"    * [To be added]","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"* **Community**:","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"  * [To be added]","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"* **Tools**:","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"  * [To be added]","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"waynezsy":32}},{"path":"docs/team/wr3nd3.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WR3nd3"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"WR3nd3"},"content":"layout: page","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"WR3nd3"},"content":"title: Wong Rende\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"WR3nd3"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"WR3nd3"},"content":"### Project: PayMeLah","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"WR3nd3"},"content":"[To be added]","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"WR3nd3"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"WR3nd3"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"WR3nd3"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"WR3nd3"},"content":"* **Project management**:","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"WR3nd3"},"content":"    * [To be added]","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"WR3nd3"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"WR3nd3"},"content":"    * [To be added]","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"WR3nd3"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"WR3nd3"},"content":"    * User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"WR3nd3"},"content":"        * [To be added]","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"WR3nd3"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"WR3nd3"},"content":"        * [To be added]","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"WR3nd3"},"content":"* **Community**:","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"WR3nd3"},"content":"    * [To be added]","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"WR3nd3"},"content":"* **Tools**:","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"WR3nd3"},"content":"    * [To be added]","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"WR3nd3":32}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/paymelah/logic/command` directory.","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"tsammeow"},"content":"Create a `RemarkCommandParser` class in the `paymelah.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"tsammeow"},"content":"Create a new `Remark` in `paymelah.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-03"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"tsammeow"},"content":"Simply add the following to [`paymelah.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-03"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"tsammeow":7,"-":394}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"The `address` field in `Person` is actually an instance of the `paymelah.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tsammeow":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"tsammeow"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `paymelah.logic.Logic`.","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"tsammeow"},"content":"A quick look at the `paymelah.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tsammeow":2,"-":299}},{"path":"src/main/java/paymelah/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.util.FileUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"tsammeow":3,"-":61}},{"path":"src/main/java/paymelah/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"tsammeow":1,"-":24}},{"path":"src/main/java/paymelah/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.Config;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.Version;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.util.StringUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.Logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.LogicManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"import paymelah.storage.AddressBookStorage;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"import paymelah.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"import paymelah.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"import paymelah.storage.Storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"import paymelah.storage.StorageManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"import paymelah.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"import paymelah.ui.Ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"import paymelah.ui.UiManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":24,"-":159}},{"path":"src/main/java/paymelah/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":1,"-":62}},{"path":"src/main/java/paymelah/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":1,"-":78}},{"path":"src/main/java/paymelah/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":1,"-":111}},{"path":"src/main/java/paymelah/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"WR3nd3"},"content":"    public static final String MESSAGE_INVALID_DEBT_DISPLAYED_INDEX \u003d \"One of the debt indexes provided is invalid\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":1,"WR3nd3":1,"-":12}},{"path":"src/main/java/paymelah/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":1,"-":115}},{"path":"src/main/java/paymelah/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.core.index;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"WR3nd3"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"WR3nd3"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"WR3nd3"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tsammeow":1,"WR3nd3":5,"-":53}},{"path":"src/main/java/paymelah/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":1,"-":10}},{"path":"src/main/java/paymelah/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":1,"-":20}},{"path":"src/main/java/paymelah/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.MainApp;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsammeow":2,"-":40}},{"path":"src/main/java/paymelah/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":1,"-":34}},{"path":"src/main/java/paymelah/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.Config;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsammeow":3,"-":20}},{"path":"src/main/java/paymelah/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":1,"-":82}},{"path":"src/main/java/paymelah/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":3,"-":140}},{"path":"src/main/java/paymelah/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":2,"-":66}},{"path":"src/main/java/paymelah/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"     * @see paymelah.model.Model#getAddressBook()","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tsammeow":8,"-":42}},{"path":"src/main/java/paymelah/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.Command;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.AddressBookParser;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.storage.Storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tsammeow":12,"-":69}},{"path":"src/main/java/paymelah/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":9,"-":58}},{"path":"src/main/java/paymelah/logic/commands/AddDebtCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static paymelah.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_MONEY;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":" * Adds a {@link Debt} to a {@link Person} in PayMeLah.","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"public class AddDebtCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    public static final String COMMAND_WORD \u003d \"adddebt\";","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a debt to a person. \"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"            + PREFIX_DESCRIPTION + \"\u003cdescription\u003e \"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"            + PREFIX_MONEY + \"\u003cmoney\u003e \"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"            + PREFIX_DESCRIPTION + \"Carl\u0027s Jr \"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"            + PREFIX_MONEY + \"97.40\";","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"    public static final String MESSAGE_ADD_DEBT_SUCCESS \u003d \"Added debt %1$s to %2$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    private final Index index;","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"    private final Debt debt;","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"     * Creates an AddDebtCommand to add a specified {@code Debt} to a specified {@code Person}.","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"     * @param index of the person in the filtered person list to add a debt to","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"     * @param debt the debt to add to the person","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"    public AddDebtCommand(Index index, Debt debt) {","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"        requireAllNonNull(index, debt);","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"        this.debt \u003d debt;","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), personToEdit.getDebts().addDebt(debt));","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_DEBT_SUCCESS, debt, editedPerson.getName()));","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"                || (other instanceof AddDebtCommand // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"                \u0026\u0026 index.equals(((AddDebtCommand) other).index)","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"                \u0026\u0026 debt.equals(((AddDebtCommand) other).debt));","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"waynezsy":74}},{"path":"src/main/java/paymelah/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":3,"-":20}},{"path":"src/main/java/paymelah/logic/commands/ClearDebtsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WR3nd3"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"WR3nd3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"WR3nd3"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"WR3nd3"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"WR3nd3"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"WR3nd3"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"WR3nd3"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.debt.DebtList;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"WR3nd3"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"WR3nd3"},"content":" * Deletes the debts of an existing person in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"WR3nd3"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"WR3nd3"},"content":"public class ClearDebtsCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"WR3nd3"},"content":"    public static final String COMMAND_WORD \u003d \"cleardebts\";","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"WR3nd3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"WR3nd3"},"content":"            + \": Deletes the debts of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"WR3nd3"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"WR3nd3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"WR3nd3"},"content":"    public static final String MESSAGE_CLEAR_DEBTS_SUCCESS \u003d \"Cleared debts from Person: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"WR3nd3"},"content":"    private final Index index;","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"WR3nd3"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"WR3nd3"},"content":"     * Constructor for the given ClearDebtsCommand.","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"WR3nd3"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"WR3nd3"},"content":"     * @param index of the person in the filtered person list to clear his debts","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"WR3nd3"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"WR3nd3"},"content":"    public ClearDebtsCommand(Index index) {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"WR3nd3"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"WR3nd3"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"WR3nd3"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"WR3nd3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"WR3nd3"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"WR3nd3"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"WR3nd3"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"WR3nd3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"WR3nd3"},"content":"        Person debtorToClear \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"WR3nd3"},"content":"        Person clearedDebtor \u003d createClearedDebtor(debtorToClear);","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"WR3nd3"},"content":"        model.setPerson(debtorToClear, clearedDebtor);","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"WR3nd3"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"WR3nd3"},"content":"        return new CommandResult(String.format(MESSAGE_CLEAR_DEBTS_SUCCESS, clearedDebtor.getName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"WR3nd3"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"WR3nd3"},"content":"     * Creates and returns a {@code Person} with the details of {@code debtorToClear}","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"WR3nd3"},"content":"     * with no debts.","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"WR3nd3"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"WR3nd3"},"content":"     * @param debtorToClear Person within addressbook to be cleared of all his debts.","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"WR3nd3"},"content":"     * @return Person with an empty {@code DebtList}","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"WR3nd3"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"WR3nd3"},"content":"    private static Person createClearedDebtor(Person debtorToClear) {","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"WR3nd3"},"content":"        requireNonNull(debtorToClear);","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"WR3nd3"},"content":"        Name updatedName \u003d debtorToClear.getName();","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"WR3nd3"},"content":"        Phone updatedPhone \u003d debtorToClear.getPhone();","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"WR3nd3"},"content":"        Email updatedEmail \u003d debtorToClear.getEmail();","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"WR3nd3"},"content":"        Address updatedAddress \u003d debtorToClear.getAddress();","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cTag\u003e updatedTags \u003d debtorToClear.getTags();","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"WR3nd3"},"content":"        DebtList updatedDebts \u003d new DebtList();","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"WR3nd3"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedDebts);","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"WR3nd3"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"WR3nd3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"WR3nd3"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"WR3nd3"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"WR3nd3"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"WR3nd3"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"WR3nd3"},"content":"        if (!(other instanceof ClearDebtsCommand)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"WR3nd3"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"WR3nd3"},"content":"        // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"WR3nd3"},"content":"        ClearDebtsCommand c \u003d (ClearDebtsCommand) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"WR3nd3"},"content":"        return index.equals(c.index);","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"WR3nd3"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"WR3nd3":100}},{"path":"src/main/java/paymelah/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":3,"-":17}},{"path":"src/main/java/paymelah/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":1,"-":70}},{"path":"src/main/java/paymelah/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":6,"-":47}},{"path":"src/main/java/paymelah/logic/commands/DeleteDebtCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WR3nd3"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"WR3nd3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_DEBT;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"WR3nd3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"WR3nd3"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"WR3nd3"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"WR3nd3"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"WR3nd3"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"WR3nd3"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.debt.DebtList;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"WR3nd3"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"WR3nd3"},"content":" * Deletes a specific debt of a person identified using their respective displayed","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"WR3nd3"},"content":" * indexes from the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"WR3nd3"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"WR3nd3"},"content":"public class DeleteDebtCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"WR3nd3"},"content":"    public static final String COMMAND_WORD \u003d \"deletedebt\";","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"WR3nd3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"WR3nd3"},"content":"            + \": Deletes a specific debt of the person identified by the index number \"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"WR3nd3"},"content":"            + \"used in the displayed person list. The debt is specified by the index number \"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"WR3nd3"},"content":"            + \"of the debt displayed in the person\u0027s debt field. Multiple debts may be specified.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"WR3nd3"},"content":"            + \"Parameters: PERSON_INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"WR3nd3"},"content":"            + PREFIX_DEBT + \"DEBT_INDEX... (must be a positive integer. multiple indexes must \"","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"WR3nd3"},"content":"            + \"be separated by a space)\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"WR3nd3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_DEBT + \"2 3\";","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"WR3nd3"},"content":"    public static final String MESSAGE_DELETE_DEBT_SUCCESS \u003d \"Deleted Debt(s) from: %1$s:\\n\";","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"WR3nd3"},"content":"    private final Index debtorIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"WR3nd3"},"content":"    private final Set\u003cIndex\u003e debtIndexes;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"WR3nd3"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"WR3nd3"},"content":"     * Constructs the given DeleteDebtCommand.","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"WR3nd3"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"WR3nd3"},"content":"     * @param debtorIndex is the index of the {@code Person} in the filtered person list to have a debt deleted","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"WR3nd3"},"content":"     * @param indexSet is the set of indexes of the {@code Debt}s in the list of debts displayed in the given","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"WR3nd3"},"content":"     *      person\u0027s debt field.","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"WR3nd3"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"WR3nd3"},"content":"    public DeleteDebtCommand(Index debtorIndex, Set\u003cIndex\u003e indexSet) {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"WR3nd3"},"content":"        requireNonNull(debtorIndex);","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"WR3nd3"},"content":"        requireNonNull(indexSet);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"WR3nd3"},"content":"        this.debtorIndex \u003d debtorIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"WR3nd3"},"content":"        this.debtIndexes \u003d indexSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"WR3nd3"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"WR3nd3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"WR3nd3"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"WR3nd3"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"WR3nd3"},"content":"        if (debtorIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"WR3nd3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"WR3nd3"},"content":"        Person debtorToUpdate \u003d lastShownList.get(debtorIndex.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"WR3nd3"},"content":"        List\u003cDebt\u003e initialDebts \u003d debtorToUpdate.getDebts().asList();","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"WR3nd3"},"content":"        List\u003cDebt\u003e debtsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"WR3nd3"},"content":"        for (Index debtIndex : debtIndexes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"WR3nd3"},"content":"            requireNonNull(debtIndex);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"WR3nd3"},"content":"            if (debtIndex.getOneBased() \u003e initialDebts.size()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"WR3nd3"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_DEBT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"WR3nd3"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"WR3nd3"},"content":"            debtsToDelete.add(initialDebts.get(debtIndex.getZeroBased()));","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"WR3nd3"},"content":"        Person updatedDebtor \u003d createReducedDebtor(debtorToUpdate, debtsToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"WR3nd3"},"content":"        model.setPerson(debtorToUpdate, updatedDebtor);","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"WR3nd3"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"WR3nd3"},"content":"        String result \u003d String.format(MESSAGE_DELETE_DEBT_SUCCESS, updatedDebtor.getName());","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"WR3nd3"},"content":"        StringBuilder builder \u003d new StringBuilder(result);","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"WR3nd3"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"WR3nd3"},"content":"        for (Debt debt : debtsToDelete) {","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"WR3nd3"},"content":"            builder.append(i + \". \")","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"WR3nd3"},"content":"                    .append(debt.toString())","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"WR3nd3"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"WR3nd3"},"content":"            i++;","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"WR3nd3"},"content":"        return new CommandResult(builder.toString());","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"WR3nd3"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"WR3nd3"},"content":"     * Creates and returns a {@code Person} with the details of {@code debtorToClear}","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"WR3nd3"},"content":"     * with no debts.","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"WR3nd3"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"WR3nd3"},"content":"     * @param debtorToReduce {@code Person} within addressbook to have the specified {@code Debt}s deleted.","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"WR3nd3"},"content":"     * @param debtsToDelete Set of {@code Debt}s to delete from the {@code debtorToReduce}.","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"WR3nd3"},"content":"     * @return Person with a reduced {@code DebtList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"WR3nd3"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"WR3nd3"},"content":"    private static Person createReducedDebtor(Person debtorToReduce, List\u003cDebt\u003e debtsToDelete) {","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"WR3nd3"},"content":"        requireNonNull(debtorToReduce);","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"WR3nd3"},"content":"        requireNonNull(debtsToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"WR3nd3"},"content":"        Name name \u003d debtorToReduce.getName();","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"WR3nd3"},"content":"        Phone phone \u003d debtorToReduce.getPhone();","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"WR3nd3"},"content":"        Email email \u003d debtorToReduce.getEmail();","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"WR3nd3"},"content":"        Address address \u003d debtorToReduce.getAddress();","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cTag\u003e tags \u003d debtorToReduce.getTags();","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"WR3nd3"},"content":"        DebtList reducedDebts \u003d debtorToReduce.getDebts();","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"WR3nd3"},"content":"        for (Debt paidDebt : debtsToDelete) {","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"WR3nd3"},"content":"            assert reducedDebts.contains(paidDebt) : String.format(\"Debt (%1$s) cannot be found.\", paidDebt);","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"WR3nd3"},"content":"            reducedDebts \u003d reducedDebts.removeDebt(paidDebt);","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"WR3nd3"},"content":"        return new Person(name, phone, email, address, tags, reducedDebts);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"WR3nd3"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"WR3nd3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"WR3nd3"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"WR3nd3"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"WR3nd3"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"WR3nd3"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"WR3nd3"},"content":"        if (!(other instanceof DeleteDebtCommand)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"WR3nd3"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"WR3nd3"},"content":"        // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand c \u003d (DeleteDebtCommand) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"WR3nd3"},"content":"        return debtorIndex.equals(c.debtorIndex)","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"WR3nd3"},"content":"                \u0026\u0026 debtIndexes.equals(c.debtIndexes);","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"WR3nd3"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"WR3nd3":145}},{"path":"src/main/java/paymelah/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.DebtList;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"tsammeow"},"content":"        DebtList updatedDebts \u003d personToEdit.getDebts(); // edit command does not allow editing debts","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"tsammeow"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedDebts);","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tsammeow":21,"-":207}},{"path":"src/main/java/paymelah/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tsammeow":2,"-":17}},{"path":"src/main/java/paymelah/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tsammeow":4,"-":38}},{"path":"src/main/java/paymelah/logic/commands/FindDebtCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"import paymelah.model.person.DebtContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":" * Finds and lists all persons in address book associated with a debt that","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":" * contains any of the argument keywords.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"public class FindDebtCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"    public static final String COMMAND_WORD \u003d \"finddebt\";","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons associated with a debt that \"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"            + \"contains the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"            + \"Example: \" + COMMAND_WORD + \" burger meal\";","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"    private final DebtContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"    public FindDebtCommand(DebtContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"tsammeow"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"tsammeow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"tsammeow"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"tsammeow"},"content":"                || (other instanceof FindDebtCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"tsammeow"},"content":"                        \u0026\u0026 predicate.equals(((FindDebtCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"tsammeow"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"tsammeow":37,"TheSoggy":5}},{"path":"src/main/java/paymelah/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":2,"-":19}},{"path":"src/main/java/paymelah/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":3,"-":21}},{"path":"src/main/java/paymelah/logic/commands/ListDebtorsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyuting47"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"lyuting47"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"lyuting47"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_MONEY;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"lyuting47"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.person.DebtGreaterEqualAmountPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"lyuting47"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"lyuting47"},"content":" * Lists all persons with debts in the address book to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"lyuting47"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"lyuting47"},"content":"public class ListDebtorsCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"lyuting47"},"content":"    public static final String COMMAND_WORD \u003d \"listdebtors\";","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"lyuting47"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all persons who owe more than a certain amount. \"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"lyuting47"},"content":"            + \"If no amount is provided, lists all persons who owe any debt. \"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"lyuting47"},"content":"            + \"Parameters:\"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"lyuting47"},"content":"            + \"[\" + PREFIX_MONEY + \"\u003cmoney\u003e]\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"lyuting47"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"lyuting47"},"content":"            + PREFIX_MONEY + \"20.00\";","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"lyuting47"},"content":"    public static final String MESSAGE_SUCCESS_SPECIFIC \u003d \"Listed all persons with debts amounting to more than $%1$s.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"lyuting47"},"content":"    public static final String MESSAGE_SUCCESS_GENERIC \u003d \"Listed all persons with debts.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"lyuting47"},"content":"    public static final String MESSAGE_NO_DEBTORS \u003d \"There are no persons with debts\";","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"lyuting47"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"lyuting47"},"content":"    public ListDebtorsCommand(DebtGreaterEqualAmountPredicate predicate) {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"lyuting47"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"lyuting47"},"content":"    public ListDebtorsCommand() {","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"lyuting47"},"content":"        this.predicate \u003d p -\u003e !p.getDebts().isEmpty();","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"lyuting47"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"lyuting47"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"lyuting47"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"lyuting47"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"lyuting47"},"content":"        if (model.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"lyuting47"},"content":"            return new CommandResult(MESSAGE_NO_DEBTORS);","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"lyuting47"},"content":"        } else if (predicate instanceof DebtGreaterEqualAmountPredicate) {","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"lyuting47"},"content":"            DebtGreaterEqualAmountPredicate p \u003d (DebtGreaterEqualAmountPredicate) predicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"lyuting47"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_SPECIFIC, p.getAmount()));","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"lyuting47"},"content":"        } else {","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"lyuting47"},"content":"            return new CommandResult(MESSAGE_SUCCESS_GENERIC);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"lyuting47"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"lyuting47"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"lyuting47"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"lyuting47"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"lyuting47"},"content":"                || (other instanceof ListDebtorsCommand // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"lyuting47"},"content":"                \u0026\u0026 predicate.equals(((ListDebtorsCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"lyuting47"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"lyuting47":60}},{"path":"src/main/java/paymelah/logic/commands/StatementCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"TheSoggy"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":" * Displays the total amount of money the user is owed from the filtered person list to the user.","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"public class StatementCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"    public static final String COMMAND_WORD \u003d \"statement\";","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You are owed $%1$s in total.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"        BigDecimal totalSum \u003d new BigDecimal(0).setScale(2);","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"        for (Person person : model.getFilteredPersonList()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"            totalSum \u003d totalSum.add(person.getDebts().getTotalDebt());","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, totalSum));","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"TheSoggy":28}},{"path":"src/main/java/paymelah/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tsammeow":1,"-":16}},{"path":"src/main/java/paymelah/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.AddCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.DebtList;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"tsammeow"},"content":"        DebtList debts \u003d new DebtList();","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"tsammeow"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, debts);","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tsammeow":18,"waynezsy":1,"-":33}},{"path":"src/main/java/paymelah/logic/parser/AddDebtCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_MONEY;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import paymelah.logic.commands.AddDebtCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Description;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":" * Parses input arguments and creates a new AddDebtCommand object","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"public class AddDebtCommandParser implements Parser\u003cAddDebtCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDebtCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"     * and returns an AddDebtCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    public AddDebtCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_MONEY);","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_MONEY)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDebtCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"        Index index;","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        try {","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDebtCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"        Money money \u003d ParserUtil.parseMoney(argMultimap.getValue(PREFIX_MONEY).get());","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"        Debt debt \u003d new Debt(description, money);","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"        return new AddDebtCommand(index, debt);","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"waynezsy":49}},{"path":"src/main/java/paymelah/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.AddCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import paymelah.logic.commands.AddDebtCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"WR3nd3"},"content":"import paymelah.logic.commands.ClearDebtsCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.Command;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"WR3nd3"},"content":"import paymelah.logic.commands.DeleteDebtCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.EditCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.FindCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.FindDebtCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.ListCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"lyuting47"},"content":"import paymelah.logic.commands.ListDebtorsCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"import paymelah.logic.commands.StatementCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"        case AddDebtCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"            return new AddDebtCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"WR3nd3"},"content":"        case DeleteDebtCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"WR3nd3"},"content":"            return new DeleteDebtCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"tsammeow"},"content":"        case FindDebtCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"tsammeow"},"content":"            return new FindDebtCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"TheSoggy"},"content":"        case StatementCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"TheSoggy"},"content":"            return new StatementCommand();","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"WR3nd3"},"content":"        case ClearDebtsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"WR3nd3"},"content":"            return new ClearDebtsCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"lyuting47"},"content":"        case ListDebtorsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"lyuting47"},"content":"            return new ListDebtorsCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":17,"WR3nd3":8,"waynezsy":4,"lyuting47":4,"-":63,"TheSoggy":4}},{"path":"src/main/java/paymelah/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"tsammeow":1,"-":59}},{"path":"src/main/java/paymelah/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"tsammeow":1,"-":147}},{"path":"src/main/java/paymelah/logic/parser/ClearDebtsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WR3nd3"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"WR3nd3"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"WR3nd3"},"content":"import paymelah.logic.commands.ClearDebtsCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"WR3nd3"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"WR3nd3"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"WR3nd3"},"content":" * Parses input arguments and creates a new ClearDebtsCommand object","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"WR3nd3"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"WR3nd3"},"content":"public class ClearDebtsCommandParser implements Parser\u003cClearDebtsCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"WR3nd3"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"WR3nd3"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearDebtsCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"WR3nd3"},"content":"     * and returns a ClearDebtsCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"WR3nd3"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"WR3nd3"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"WR3nd3"},"content":"    public ClearDebtsCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"WR3nd3"},"content":"        try {","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"WR3nd3"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"WR3nd3"},"content":"            return new ClearDebtsCommand(index);","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"WR3nd3"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"WR3nd3"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"WR3nd3"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearDebtsCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"WR3nd3"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"WR3nd3":29}},{"path":"src/main/java/paymelah/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    public static final Prefix PREFIX_MONEY \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"WR3nd3"},"content":"    public static final Prefix PREFIX_DEBT \u003d new Prefix(\"debt/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tsammeow":1,"WR3nd3":1,"waynezsy":2,"-":14}},{"path":"src/main/java/paymelah/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tsammeow":5,"-":24}},{"path":"src/main/java/paymelah/logic/parser/DeleteDebtCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WR3nd3"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_DEBT;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"WR3nd3"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"WR3nd3"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"WR3nd3"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"WR3nd3"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"WR3nd3"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"WR3nd3"},"content":"import paymelah.logic.commands.DeleteDebtCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"WR3nd3"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"WR3nd3"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"WR3nd3"},"content":" * Parses input arguments and creates a new DeleteDebtCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"WR3nd3"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"WR3nd3"},"content":"public class DeleteDebtCommandParser implements Parser\u003cDeleteDebtCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"WR3nd3"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"WR3nd3"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteDebtCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"WR3nd3"},"content":"     * and returns a DeleteDebtCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"WR3nd3"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"WR3nd3"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"WR3nd3"},"content":"    public DeleteDebtCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"WR3nd3"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DEBT);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"WR3nd3"},"content":"        if (argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"WR3nd3"},"content":"                || !arePrefixesPresent(argMultimap, PREFIX_DEBT)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"WR3nd3"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDebtCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"WR3nd3"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"WR3nd3"},"content":"            Index personIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"WR3nd3"},"content":"            List\u003cString\u003e debtIndexList \u003d Arrays.stream(argMultimap.getValue(PREFIX_DEBT).get().split(\" \"))","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"WR3nd3"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"WR3nd3"},"content":"            Set\u003cIndex\u003e debtIndexSet \u003d ParserUtil.parseIndexes(debtIndexList);","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"WR3nd3"},"content":"            return new DeleteDebtCommand(personIndex, debtIndexSet);","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"WR3nd3"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"WR3nd3"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"WR3nd3"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDebtCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"WR3nd3"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"WR3nd3":47}},{"path":"src/main/java/paymelah/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.EditCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tsammeow":12,"-":70}},{"path":"src/main/java/paymelah/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"import static paymelah.logic.parser.ParserUtil.prepareNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.FindCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"     * FindCommand and returns a FindCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"            return new FindCommand(prepareNameContainsKeywordsPredicate(args));","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tsammeow":4,"-":18,"TheSoggy":7}},{"path":"src/main/java/paymelah/logic/parser/FindDebtCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"import static paymelah.logic.parser.ParserUtil.prepareDebtContainsKeywordsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.FindDebtCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":" * Parses input arguments and creates a new {@link FindDebtCommand} object","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"public class FindDebtCommandParser implements Parser\u003cFindDebtCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"     * {@link FindDebtCommand}","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"     * and returns a {@link FindDebtCommand} object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"    public FindDebtCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"            return new FindDebtCommand(prepareDebtContainsKeywordsPredicate(args));","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindDebtCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"tsammeow":23,"TheSoggy":7}},{"path":"src/main/java/paymelah/logic/parser/ListDebtorsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyuting47"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"lyuting47"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"lyuting47"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_MONEY;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"lyuting47"},"content":"import paymelah.logic.commands.ListDebtorsCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"lyuting47"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"lyuting47"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"lyuting47"},"content":" * Parses input arguments and creates a new ListDebtorsCommand object","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"lyuting47"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"lyuting47"},"content":"public class ListDebtorsCommandParser implements Parser\u003cListDebtorsCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"lyuting47"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"lyuting47"},"content":"     * Parses the given {@code String} of arguments in the context of the ListDebtorsCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"lyuting47"},"content":"     * and returns an ListDebtorsCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"lyuting47"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"lyuting47"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"lyuting47"},"content":"    public ListDebtorsCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"lyuting47"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"lyuting47"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MONEY);","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"lyuting47"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"lyuting47"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListDebtorsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"lyuting47"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"lyuting47"},"content":"        if (ParserUtil.arePrefixesPresent(argMultimap, PREFIX_MONEY)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"lyuting47"},"content":"            return new ListDebtorsCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"lyuting47"},"content":"                    ParserUtil.prepareDebtGreaterEqualAmountPredicate(argMultimap.getValue(PREFIX_MONEY).get()));","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"lyuting47"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"lyuting47"},"content":"        return new ListDebtorsCommand();","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"lyuting47"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"lyuting47":34}},{"path":"src/main/java/paymelah/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.Command;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"tsammeow":3,"-":13}},{"path":"src/main/java/paymelah/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.util.StringUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Description;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"import paymelah.model.person.DebtContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.person.DebtGreaterEqualAmountPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"import paymelah.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":" * classes.","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"TheSoggy"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"TheSoggy"},"content":"     * and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"TheSoggy"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"TheSoggy"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"TheSoggy"},"content":"     *                        unsigned integer).","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"WR3nd3"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"WR3nd3"},"content":"     * Parses {@code Collection\u003cString\u003e oneBasedIndexes} into a {@code Set\u003cIndex\u003e} and returns it. Leading and","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"WR3nd3"},"content":"     * trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"WR3nd3"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"WR3nd3"},"content":"     * @param oneBasedIndexes Collection of String representing valid indexes (non-zero unsigned integer).","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"WR3nd3"},"content":"     * @return {@code Set\u003cIndex\u003e} of indexes parsed from given String.","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"WR3nd3"},"content":"     * @throws ParseException if an index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"WR3nd3"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"WR3nd3"},"content":"    public static Set\u003cIndex\u003e parseIndexes(Collection\u003cString\u003e oneBasedIndexes) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"WR3nd3"},"content":"        requireNonNull(oneBasedIndexes);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"WR3nd3"},"content":"        final Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"WR3nd3"},"content":"        for (String index : oneBasedIndexes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"WR3nd3"},"content":"            indexSet.add(parseIndex(index));","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"WR3nd3"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"WR3nd3"},"content":"        return indexSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":152,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":153,"author":{"gitId":"waynezsy"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2022-10-08"},{"lineNumber":154,"author":{"gitId":"waynezsy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-08"},{"lineNumber":155,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":156,"author":{"gitId":"waynezsy"},"content":"     * @param description The description to turn into a {@code Description} object.","lastModifiedDate":"2022-10-08"},{"lineNumber":157,"author":{"gitId":"waynezsy"},"content":"     * @return The corresponding {@code Description}.","lastModifiedDate":"2022-10-08"},{"lineNumber":158,"author":{"gitId":"waynezsy"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":159,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":160,"author":{"gitId":"waynezsy"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":161,"author":{"gitId":"waynezsy"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-08"},{"lineNumber":162,"author":{"gitId":"waynezsy"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-10-08"},{"lineNumber":163,"author":{"gitId":"waynezsy"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":164,"author":{"gitId":"waynezsy"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":165,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":166,"author":{"gitId":"waynezsy"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-10-08"},{"lineNumber":167,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":168,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":169,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":170,"author":{"gitId":"waynezsy"},"content":"     * Parses a {@code String money} into a {@code Money}.","lastModifiedDate":"2022-10-08"},{"lineNumber":171,"author":{"gitId":"waynezsy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-08"},{"lineNumber":172,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":173,"author":{"gitId":"waynezsy"},"content":"     * @param money The money to turn into a {@code Money} object.","lastModifiedDate":"2022-10-08"},{"lineNumber":174,"author":{"gitId":"waynezsy"},"content":"     * @return The corresponding {@code Money}.","lastModifiedDate":"2022-10-08"},{"lineNumber":175,"author":{"gitId":"waynezsy"},"content":"     * @throws ParseException if the given {@code money} is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":176,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":177,"author":{"gitId":"waynezsy"},"content":"    public static Money parseMoney(String money) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":178,"author":{"gitId":"waynezsy"},"content":"        requireNonNull(money);","lastModifiedDate":"2022-10-08"},{"lineNumber":179,"author":{"gitId":"waynezsy"},"content":"        String trimmedMoney \u003d money.trim();","lastModifiedDate":"2022-10-08"},{"lineNumber":180,"author":{"gitId":"waynezsy"},"content":"        if (!Money.isValidMoney(trimmedMoney)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":181,"author":{"gitId":"waynezsy"},"content":"            throw new ParseException(Money.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":182,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":183,"author":{"gitId":"waynezsy"},"content":"        return new Money(trimmedMoney);","lastModifiedDate":"2022-10-08"},{"lineNumber":184,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":185,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":186,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":187,"author":{"gitId":"TheSoggy"},"content":"     * Parses {@code String s} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"TheSoggy"},"content":"    public static NameContainsKeywordsPredicate prepareNameContainsKeywordsPredicate(String s) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":190,"author":{"gitId":"TheSoggy"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"TheSoggy"},"content":"        String trimmed \u003d s.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"TheSoggy"},"content":"        if (trimmed.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"TheSoggy"},"content":"            throw new ParseException(NameContainsKeywordsPredicate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"TheSoggy"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(trimmed.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"TheSoggy"},"content":"     * Parses {@code String s} into a {@code DebtContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"TheSoggy"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"TheSoggy"},"content":"    public static DebtContainsKeywordsPredicate prepareDebtContainsKeywordsPredicate(String s) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":202,"author":{"gitId":"TheSoggy"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"TheSoggy"},"content":"        String trimmed \u003d s.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"TheSoggy"},"content":"        if (trimmed.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"TheSoggy"},"content":"            throw new ParseException(DebtContainsKeywordsPredicate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"TheSoggy"},"content":"        return new DebtContainsKeywordsPredicate(Arrays.asList(trimmed.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":209,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":210,"author":{"gitId":"TheSoggy"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"TheSoggy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"TheSoggy"},"content":"     * in the given","lastModifiedDate":"2022-10-12"},{"lineNumber":213,"author":{"gitId":"waynezsy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-08"},{"lineNumber":214,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":215,"author":{"gitId":"waynezsy"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-08"},{"lineNumber":216,"author":{"gitId":"waynezsy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-08"},{"lineNumber":217,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":218,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":219,"author":{"gitId":"lyuting47"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":220,"author":{"gitId":"lyuting47"},"content":"     * Parses {@code String s} into a {@code DebtGreaterEqualAmountPredicate}.","lastModifiedDate":"2022-10-14"},{"lineNumber":221,"author":{"gitId":"lyuting47"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":222,"author":{"gitId":"lyuting47"},"content":"    public static DebtGreaterEqualAmountPredicate prepareDebtGreaterEqualAmountPredicate(String s)","lastModifiedDate":"2022-10-14"},{"lineNumber":223,"author":{"gitId":"lyuting47"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":224,"author":{"gitId":"lyuting47"},"content":"        Money m \u003d parseMoney(s);","lastModifiedDate":"2022-10-14"},{"lineNumber":225,"author":{"gitId":"lyuting47"},"content":"        return new DebtGreaterEqualAmountPredicate(m);","lastModifiedDate":"2022-10-14"},{"lineNumber":226,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tsammeow":9,"WR3nd3":17,"waynezsy":44,"lyuting47":10,"-":111,"TheSoggy":36}},{"path":"src/main/java/paymelah/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"tsammeow":1,"-":38}},{"path":"src/main/java/paymelah/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"tsammeow":2,"-":15}},{"path":"src/main/java/paymelah/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.UniquePersonList;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":3,"-":117}},{"path":"src/main/java/paymelah/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tsammeow":3,"-":84}},{"path":"src/main/java/paymelah/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":5,"-":145}},{"path":"src/main/java/paymelah/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":2,"-":15}},{"path":"src/main/java/paymelah/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"tsammeow":2,"-":14}},{"path":"src/main/java/paymelah/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":2,"-":85}},{"path":"src/main/java/paymelah/model/debt/Debt.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.model.debt;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static paymelah.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":" * Represents a Debt in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"public class Debt {","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"    private final Description description;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    private final Money money;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"     * @param description The description of the debt.","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     * @param money The money amount of the debt.","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    public Debt(Description description, Money money) {","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"        requireAllNonNull(description, money);","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"        this.money \u003d money;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"        return description;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"    public Money getMoney() {","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        return money;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"     * Returns a Debt with the given description and money.","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"tsammeow"},"content":"    public static Debt makeDebt(String description, String money) {","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"tsammeow"},"content":"        return new Debt(new Description(description), new Money(money));","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"     * Returns true only if both debts have the same data fields.","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"     * @param other The other {@code Debt} object to check.","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"     * @return true only if both debts have the same data fields.","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"        if (!(other instanceof Debt)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"        Debt otherDebt \u003d (Debt) other;","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"        return otherDebt.getDescription().equals(getDescription())","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"                \u0026\u0026 otherDebt.getMoney().equals(getMoney());","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"        return Objects.hash(description, money);","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"        builder.append(getDescription())","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"                .append(\"; Money: $\")","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"                .append(getMoney());","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"waynezsy"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"tsammeow":7,"waynezsy":70}},{"path":"src/main/java/paymelah/model/debt/DebtList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.debt;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.exceptions.DebtNotFoundException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":" * Represents a list of a person\u0027s {@link Debt} in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":" * Guarantees: debts are null, field values are validated, immutable.","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"public class DebtList {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"    private final List\u003cDebt\u003e debts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"    private BigDecimal totalDebt \u003d new BigDecimal(0).setScale(2);","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"     * Constructs a {@code DebtList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"     * {@code debts} must be present and all debts must be not null.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"     * @param debtList The list of debts owed.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"    public DebtList(DebtList debtList) {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"        requireAllNonNull(debtList);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"        debts.addAll(debtList.debts);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"TheSoggy"},"content":"        totalDebt \u003d debtList.totalDebt;","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"tsammeow"},"content":"     * Constructs an empty {@code DebtList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"tsammeow"},"content":"    public DebtList() {}","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"tsammeow"},"content":"     * Returns true if the list contains an equivalent debt as the given argument.","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"tsammeow"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"tsammeow"},"content":"     * @param toCheck The debt to check for in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"tsammeow"},"content":"     * @return true if the list contains an equivalent debt as the given argument.","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"tsammeow"},"content":"    public boolean contains(Debt toCheck) {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"tsammeow"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"tsammeow"},"content":"        return debts.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"TheSoggy"},"content":"    public BigDecimal getTotalDebt() {","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"TheSoggy"},"content":"        return totalDebt;","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"tsammeow"},"content":"     * Adds a debt to the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"tsammeow"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"tsammeow"},"content":"     * @param toAdd The debt to add to the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"tsammeow"},"content":"     * @return The modified debt list.","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"tsammeow"},"content":"    public DebtList addDebt(Debt toAdd) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"tsammeow"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"tsammeow"},"content":"        DebtList edited \u003d new DebtList(this);","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"tsammeow"},"content":"        edited.debts.add(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"TheSoggy"},"content":"        edited.totalDebt \u003d totalDebt.add(toAdd.getMoney().getValue());","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"tsammeow"},"content":"        return edited;","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"tsammeow"},"content":"     * Removes a debt from the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"tsammeow"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"tsammeow"},"content":"     * @param toRemove The debt to remove from the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"tsammeow"},"content":"     * @return The modified debt list.","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"tsammeow"},"content":"    public DebtList removeDebt(Debt toRemove) {","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"tsammeow"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"tsammeow"},"content":"        if (!contains(toRemove)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"tsammeow"},"content":"            throw new DebtNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"tsammeow"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"tsammeow"},"content":"        DebtList edited \u003d new DebtList(this);","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"tsammeow"},"content":"        edited.debts.remove(toRemove);","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"TheSoggy"},"content":"        edited.totalDebt \u003d totalDebt.subtract(toRemove.getMoney().getValue());","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"tsammeow"},"content":"        return edited;","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"tsammeow"},"content":"     * Returns an immutable debt list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"tsammeow"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"tsammeow"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"tsammeow"},"content":"     * @return An immutable debt list.","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"tsammeow"},"content":"    public List\u003cDebt\u003e asList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"tsammeow"},"content":"        return Collections.unmodifiableList(debts);","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"tsammeow"},"content":"     * Returns a debt list with the elements from {@code list}.","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"tsammeow"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"tsammeow"},"content":"     * @param list The list of {@code Debt}s to use.","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"tsammeow"},"content":"     * @return The new DebtList.","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"tsammeow"},"content":"    public static DebtList fromList(List\u003cDebt\u003e list) {","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"tsammeow"},"content":"        DebtList debtList \u003d new DebtList();","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"TheSoggy"},"content":"        for (Debt debt : list) {","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"TheSoggy"},"content":"            debtList.debts.add(debt);","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"TheSoggy"},"content":"            debtList.totalDebt \u003d debtList.totalDebt.add(debt.getMoney().getValue());","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"tsammeow"},"content":"        return debtList;","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"lyuting47"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"lyuting47"},"content":"     * Returns whether this DebtList is empty.","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"lyuting47"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"lyuting47"},"content":"     * @return true only if the DebtList is empty.","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"lyuting47"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"lyuting47"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"lyuting47"},"content":"        return debts.isEmpty();","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"tsammeow"},"content":"     * Returns true only if both debts have the same data fields.","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"tsammeow"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"tsammeow"},"content":"     * @param other The other {@code Debt} object to check.","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"tsammeow"},"content":"     * @return true only if both debts have the same data fields.","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"tsammeow"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"tsammeow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"tsammeow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"tsammeow"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"tsammeow"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"tsammeow"},"content":"        if (!(other instanceof DebtList)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"tsammeow"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"tsammeow"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"tsammeow"},"content":"        DebtList otherDebt \u003d (DebtList) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"tsammeow"},"content":"        return otherDebt.asList().equals(asList());","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"tsammeow"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"tsammeow"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"tsammeow"},"content":"        return Objects.hash(debts);","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":144,"author":{"gitId":"lyuting47"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"lyuting47"},"content":"    public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":146,"author":{"gitId":"lyuting47"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-07"},{"lineNumber":147,"author":{"gitId":"lyuting47"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-10-08"},{"lineNumber":148,"author":{"gitId":"lyuting47"},"content":"        for (Debt debt : debts) {","lastModifiedDate":"2022-10-07"},{"lineNumber":149,"author":{"gitId":"lyuting47"},"content":"            builder.append(i + \". \")","lastModifiedDate":"2022-10-08"},{"lineNumber":150,"author":{"gitId":"lyuting47"},"content":"                    .append(debt.toString())","lastModifiedDate":"2022-10-08"},{"lineNumber":151,"author":{"gitId":"lyuting47"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2022-10-07"},{"lineNumber":152,"author":{"gitId":"lyuting47"},"content":"            i++;","lastModifiedDate":"2022-10-08"},{"lineNumber":153,"author":{"gitId":"lyuting47"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":154,"author":{"gitId":"lyuting47"},"content":"        return builder.toString().equals(\"\") ? \"No debts\" : builder.toString();","lastModifiedDate":"2022-10-07"},{"lineNumber":155,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":156,"author":{"gitId":"tsammeow"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"tsammeow":121,"lyuting47":22,"TheSoggy":13}},{"path":"src/main/java/paymelah/model/debt/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.model.debt;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static paymelah.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":" * Represents a Debt\u0027s description in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"public class Description {","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"            \"Descriptions should not be blank or whitespace\";","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    /*","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S.*\";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    private final String description;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"    public Description(String description) {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"     * @param test The string to test for validity.","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"     * @return true if the given string is a valid description.","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"        return description;","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"        return description.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"waynezsy":59}},{"path":"src/main/java/paymelah/model/debt/Money.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.model.debt;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static paymelah.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":" * Represents a Debt\u0027s money amount in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMoney(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"lyuting47"},"content":"public class Money implements Comparable\u003cMoney\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"            \"Money amounts should use numbers to represent the amount in dollars,\"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"                    + \" separating dollar and cent values with a .\";","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\$?\\\\d+(\\\\.\\\\d{1,2})?\";","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    public static final int CENTS_PRECISION \u003d 2;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"    private final BigDecimal value;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"     * Constructs a {@code Money}.","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"     * @param money A valid money amount.","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"    public Money(String money) {","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"        requireNonNull(money);","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"        checkArgument(isValidMoney(money), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"        if (money.startsWith(\"$\")) {","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"            money \u003d money.substring(1);","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        value \u003d new BigDecimal(money).setScale(CENTS_PRECISION);","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"     * Returns true if a given string is a valid money amount.","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"     * @param test The string to test for validity.","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"     * @return true if the given string is a valid money amount.","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"    public static boolean isValidMoney(String test) {","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"    protected BigDecimal getValue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"        return value;","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"        return value.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"                || (other instanceof Money // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"                \u0026\u0026 value.equals(((Money) other).value)); // state check","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"lyuting47"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"lyuting47"},"content":"    public int compareTo(Money o) {","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"lyuting47"},"content":"        return this.getValue().compareTo(o.getValue());","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"waynezsy":64,"lyuting47":6}},{"path":"src/main/java/paymelah/model/debt/exceptions/DebtNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.debt.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"public class DebtNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"tsammeow":6}},{"path":"src/main/java/paymelah/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":2,"-":55}},{"path":"src/main/java/paymelah/model/person/DebtContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.StringUtil.containsWordIgnoreCase;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":" * Tests that a {@code Person}\u0027s {@code DebtList} contains a debt that matches","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":" * any of the keywords given.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"public class DebtContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Keyword should not be blank\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"    public DebtContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"        return person.getDebts().asList().stream().anyMatch(debt -\u003e keywords.stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"TheSoggy"},"content":"                .anyMatch(keyword -\u003e containsWordIgnoreCase(debt.getDescription().toString(), keyword)));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"TheSoggy"},"content":"                || (other instanceof DebtContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"TheSoggy"},"content":"                        \u0026\u0026 keywords.equals(((DebtContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"tsammeow"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"tsammeow":24,"TheSoggy":11}},{"path":"src/main/java/paymelah/model/person/DebtGreaterEqualAmountPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyuting47"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"lyuting47"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"lyuting47"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"lyuting47"},"content":" * Tests that a {@code Person}\u0027s {@code DebtList} has a sum greater or equal to the amount given.","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"lyuting47"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"lyuting47"},"content":"public class DebtGreaterEqualAmountPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"lyuting47"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"lyuting47"},"content":"            \"Money amounts should use numbers to represent the amount in dollars,\"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"lyuting47"},"content":"                    + \" separating dollar and cent values with a .\";","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"lyuting47"},"content":"    private final Money amount;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"lyuting47"},"content":"    public DebtGreaterEqualAmountPredicate(Money money) {","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"lyuting47"},"content":"        amount \u003d money;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"lyuting47"},"content":"    public Money getAmount() {","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"lyuting47"},"content":"        return amount;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"lyuting47"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"lyuting47"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"lyuting47"},"content":"        return person.getDebtsAmountAsMoney().compareTo(amount) \u003e\u003d 0;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"lyuting47"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"lyuting47"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"lyuting47"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"lyuting47"},"content":"                || (other instanceof DebtGreaterEqualAmountPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"lyuting47"},"content":"                \u0026\u0026 amount.equals(((DebtGreaterEqualAmountPredicate) other).amount)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"lyuting47"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"lyuting47":37}},{"path":"src/main/java/paymelah/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":2,"-":69}},{"path":"src/main/java/paymelah/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":2,"-":57}},{"path":"src/main/java/paymelah/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.util.StringUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Keyword should not be blank\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tsammeow":2,"-":29,"TheSoggy":3}},{"path":"src/main/java/paymelah/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.DebtList;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"    private final DebtList debts;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"tsammeow"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, DebtList debts) {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"        requireAllNonNull(name, phone, email, address, tags, debts);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"tsammeow"},"content":"        this.debts \u003d debts;","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"tsammeow"},"content":"    public DebtList getDebts() {","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"tsammeow"},"content":"        return debts;","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"lyuting47"},"content":"    public Money getDebtsAmountAsMoney() {","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"lyuting47"},"content":"        return new Money(debts.getTotalDebt().toString());","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"tsammeow"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"tsammeow"},"content":"                \u0026\u0026 otherPerson.getDebts().equals(getDebts());","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"tsammeow"},"content":"        return Objects.hash(name, phone, email, address, tags, debts);","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"tsammeow"},"content":"        List\u003cDebt\u003e debts \u003d getDebts().asList();","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"tsammeow"},"content":"        if (!debts.isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"tsammeow"},"content":"            builder.append(\"; Debts: \");","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"tsammeow"},"content":"            debts.forEach(builder::append);","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"tsammeow"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":24,"lyuting47":5,"-":116}},{"path":"src/main/java/paymelah/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":2,"-":51}},{"path":"src/main/java/paymelah/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":4,"-":133}},{"path":"src/main/java/paymelah/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"tsammeow":1,"-":10}},{"path":"src/main/java/paymelah/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"tsammeow":1,"-":5}},{"path":"src/main/java/paymelah/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsammeow":2,"-":52}},{"path":"src/main/java/paymelah/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.model.debt.Debt.makeDebt;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.DebtList;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"    public static final DebtList EMPTY_DEBT_LIST \u003d new DebtList();","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"lyuting47"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"lyuting47"},"content":"                EMPTY_DEBT_LIST.addDebt(makeDebt(\"McDonald\u0027s\", \"5\"))","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"lyuting47"},"content":"                                .addDebt(makeDebt(\"Taxi\", \"20\"))),","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"                getTagSet(\"colleagues\", \"friends\"), EMPTY_DEBT_LIST),","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"lyuting47"},"content":"                getTagSet(\"neighbours\"), EMPTY_DEBT_LIST.addDebt(makeDebt(\"Grab\", \"15.80\"))),","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"tsammeow"},"content":"                getTagSet(\"family\"), EMPTY_DEBT_LIST),","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"lyuting47"},"content":"                getTagSet(\"classmates\"), EMPTY_DEBT_LIST.addDebt(makeDebt(\"Bubble Tea\", \"4.5\"))),","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"lyuting47"},"content":"                getTagSet(\"colleagues\"), EMPTY_DEBT_LIST.addDebt(makeDebt(\"Ramen\", \"9.90\")))","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"tsammeow"},"content":"     * Returns a debt list containing the list of debts given.","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"tsammeow"},"content":"    public static DebtList getDebtList(Debt... debts) {","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"tsammeow"},"content":"        return DebtList.fromList(Arrays.stream(debts).collect(Collectors.toList()));","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"tsammeow":22,"lyuting47":6,"-":46}},{"path":"src/main/java/paymelah/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":" * Represents a storage for {@link paymelah.model.AddressBook}.","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsammeow":4,"-":41}},{"path":"src/main/java/paymelah/storage/JsonAdaptedDebt.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Description;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":" * Jackson-friendly version of {@link Debt}.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"class JsonAdaptedDebt {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"    private final String description;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"    private final String money;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"     * Constructs a {@code JsonAdaptedDebt} with the given debt details.","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"    public JsonAdaptedDebt(@JsonProperty(\"description\") String description, @JsonProperty(\"money\") String money) {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"        this.money \u003d money;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"     * Converts a given {@code Debt} into this class for Jackson use.","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"    public JsonAdaptedDebt(Debt source) {","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"        description \u003d source.getDescription().toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"tsammeow"},"content":"        money \u003d source.getMoney().toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"    public String getDebtDescription() {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"tsammeow"},"content":"        return description;","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"tsammeow"},"content":"    public String getDebtMoney() {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"tsammeow"},"content":"        return money;","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"tsammeow"},"content":"     * Converts this Jackson-friendly adapted debt object into the model\u0027s {@code Debt} object.","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"tsammeow"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"tsammeow"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted debt.","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"tsammeow"},"content":"    public Debt toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"tsammeow"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"tsammeow"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"tsammeow"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"tsammeow"},"content":"        if (!Money.isValidMoney(money)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"tsammeow"},"content":"            throw new IllegalValueException(Money.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"tsammeow"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"tsammeow"},"content":"        return new Debt(new Description(description), new Money(money));","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"tsammeow"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"tsammeow":59}},{"path":"src/main/java/paymelah/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.DebtList;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"    private final List\u003cJsonAdaptedDebt\u003e debts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"tsammeow"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"tsammeow"},"content":"            @JsonProperty(\"debts\") List\u003cJsonAdaptedDebt\u003e debts) {","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"tsammeow"},"content":"        if (debts !\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"tsammeow"},"content":"            this.debts.addAll(debts);","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"tsammeow"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"tsammeow"},"content":"        debts.addAll(source.getDebts().asList().stream()","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"tsammeow"},"content":"                .map(JsonAdaptedDebt::new)","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"tsammeow"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"tsammeow"},"content":"        final List\u003cDebt\u003e personDebts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"tsammeow"},"content":"        for (JsonAdaptedDebt debt : debts) {","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"tsammeow"},"content":"            personDebts.add(debt.toModelType());","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"tsammeow"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"tsammeow"},"content":"        final DebtList modelDebts \u003d DebtList.fromList(personDebts);","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"tsammeow"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelDebts);","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsammeow":28,"-":99}},{"path":"src/main/java/paymelah/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsammeow":3,"-":45}},{"path":"src/main/java/paymelah/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.util.FileUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.util.JsonUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsammeow":7,"-":73}},{"path":"src/main/java/paymelah/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsammeow":5,"-":55}},{"path":"src/main/java/paymelah/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.util.JsonUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsammeow":5,"-":42}},{"path":"src/main/java/paymelah/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tsammeow":5,"-":27}},{"path":"src/main/java/paymelah/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":6,"-":72}},{"path":"src/main/java/paymelah/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":" * Represents a storage for {@link paymelah.model.UserPrefs}.","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"     * Saves the given {@link paymelah.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsammeow":6,"-":30}},{"path":"src/main/java/paymelah/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"tsammeow"},"content":"         * @see paymelah.logic.Logic#execute(String)","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"tsammeow":5,"-":80}},{"path":"src/main/java/paymelah/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsammeow":2,"-":99,"TheSoggy":1}},{"path":"src/main/java/paymelah/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.Logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"tsammeow"},"content":"     * @see paymelah.logic.Logic#execute(String)","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsammeow":8,"-":188}},{"path":"src/main/java/paymelah/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"lyuting47"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"lyuting47"},"content":"    private Label debts;","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"lyuting47"},"content":"        debts.setText(person.getDebts().toString());","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tsammeow":2,"lyuting47":3,"-":75}},{"path":"src/main/java/paymelah/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsammeow":3,"-":46}},{"path":"src/main/java/paymelah/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsammeow":1,"-":27}},{"path":"src/main/java/paymelah/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":1,"-":27}},{"path":"src/main/java/paymelah/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tsammeow":1,"-":12}},{"path":"src/main/java/paymelah/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.MainApp;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.util.StringUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.Logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsammeow":5,"-":83}},{"path":"src/main/java/paymelah/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.MainApp;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsammeow":2,"-":86}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"         title\u003d\"PayMeLah\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"waynezsy":1,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"lyuting47"},"content":"      \u003cLabel fx:id\u003d\"debts\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$debts\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lyuting47":1,"-":36}},{"path":"src/test/java/paymelah/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"tsammeow":1,"-":57}},{"path":"src/test/java/paymelah/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"tsammeow":1,"-":26}},{"path":"src/test/java/paymelah/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":2,"-":133}},{"path":"src/test/java/paymelah/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.core.index;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tsammeow":2,"-":58}},{"path":"src/test/java/paymelah/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"tsammeow":2,"-":34}},{"path":"src/test/java/paymelah/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"tsammeow":3,"-":105}},{"path":"src/test/java/paymelah/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.Config;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsammeow":4,"-":112}},{"path":"src/test/java/paymelah/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":2,"-":21}},{"path":"src/test/java/paymelah/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.TestUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":3,"-":42}},{"path":"src/test/java/paymelah/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tsammeow":2,"-":141}},{"path":"src/test/java/paymelah/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.AddCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.ListCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"import paymelah.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"import paymelah.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"import paymelah.storage.StorageManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"tsammeow"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withDebts().build();","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tsammeow":24,"-":138}},{"path":"src/test/java/paymelah/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tsammeow":9,"-":36}},{"path":"src/test/java/paymelah/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tsammeow":10,"-":184}},{"path":"src/test/java/paymelah/logic/commands/AddDebtCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import static paymelah.testutil.TypicalDebts.SUPPER;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.DebtList;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"import paymelah.testutil.DebtBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"import paymelah.testutil.DebtListBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"public class AddDebtCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDebtCommand(null, SUPPER));","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"    public void constructor_nullDebt_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDebtCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"        Index index \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"        Debt validDebt \u003d new DebtBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"        Person personToAddDebt \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"        AddDebtCommand addDebtCommand \u003d new AddDebtCommand(INDEX_FIRST_PERSON, validDebt);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"        DebtList expectedDebtList \u003d new DebtListBuilder(personToAddDebt.getDebts()).withDebt(validDebt).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToAddDebt).withDebts(expectedDebtList).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"                AddDebtCommand.MESSAGE_ADD_DEBT_SUCCESS, validDebt, expectedPerson.getName());","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), expectedPerson);","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"        assertCommandSuccess(addDebtCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"        Debt validDebt \u003d new DebtBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"        AddDebtCommand addDebtCommand \u003d new AddDebtCommand(outOfBoundIndex, validDebt);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"        assertCommandFailure(addDebtCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"        Index index \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"        Debt validDebt \u003d new DebtBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"        Person personToAddDebt \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"waynezsy"},"content":"        AddDebtCommand addDebtCommand \u003d new AddDebtCommand(INDEX_FIRST_PERSON, validDebt);","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"waynezsy"},"content":"        DebtList expectedDebtList \u003d new DebtListBuilder(personToAddDebt.getDebts()).withDebt(validDebt).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"waynezsy"},"content":"        Person expectedPerson \u003d new PersonBuilder(personToAddDebt).withDebts(expectedDebtList).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"waynezsy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"waynezsy"},"content":"                AddDebtCommand.MESSAGE_ADD_DEBT_SUCCESS, validDebt, expectedPerson.getName());","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"waynezsy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"waynezsy"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"waynezsy"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), expectedPerson);","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"waynezsy"},"content":"        assertCommandSuccess(addDebtCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"waynezsy"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"waynezsy"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"waynezsy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"waynezsy"},"content":"        Debt validDebt \u003d new DebtBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"waynezsy"},"content":"        AddDebtCommand addDebtCommand \u003d new AddDebtCommand(outOfBoundIndex, validDebt);","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"waynezsy"},"content":"        assertCommandFailure(addDebtCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"waynezsy"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"waynezsy"},"content":"        Debt supper \u003d new DebtBuilder().withDescription(\"supper\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"waynezsy"},"content":"        Debt dinner \u003d new DebtBuilder().withDescription(\"dinner\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"waynezsy"},"content":"        AddDebtCommand addSupperToOneCommand \u003d new AddDebtCommand(INDEX_FIRST_PERSON, supper);","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"waynezsy"},"content":"        AddDebtCommand addSupperToTwoCommand \u003d new AddDebtCommand(INDEX_SECOND_PERSON, supper);","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"waynezsy"},"content":"        AddDebtCommand addDinnerToOneCommand \u003d new AddDebtCommand(INDEX_FIRST_PERSON, dinner);","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"waynezsy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"waynezsy"},"content":"        assertEquals(addSupperToOneCommand, addSupperToOneCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"waynezsy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"waynezsy"},"content":"        AddDebtCommand addSupperToOneCopy \u003d new AddDebtCommand(INDEX_FIRST_PERSON, supper);","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"waynezsy"},"content":"        assertEquals(addSupperToOneCommand, addSupperToOneCopy);","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"waynezsy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"waynezsy"},"content":"        assertNotEquals(1, addSupperToOneCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"waynezsy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"waynezsy"},"content":"        assertNotEquals(null, addSupperToOneCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"waynezsy"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"waynezsy"},"content":"        assertNotEquals(addSupperToOneCommand, addSupperToTwoCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"waynezsy"},"content":"        // different debt -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"waynezsy"},"content":"        assertNotEquals(addSupperToOneCommand, addDinnerToOneCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"waynezsy":126}},{"path":"src/test/java/paymelah/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tsammeow":7,"-":25}},{"path":"src/test/java/paymelah/logic/commands/ClearDebtsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WR3nd3"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"WR3nd3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"WR3nd3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.showDebtors;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"WR3nd3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"WR3nd3"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"WR3nd3"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"WR3nd3"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"WR3nd3"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"WR3nd3"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"WR3nd3"},"content":" * {@code ClearDebtsCommand}.","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"WR3nd3"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"WR3nd3"},"content":"public class ClearDebtsCommandTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"WR3nd3"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"WR3nd3"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"WR3nd3"},"content":"        Person debtorToClear \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"WR3nd3"},"content":"        ClearDebtsCommand clearDebtsCommand \u003d new ClearDebtsCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"WR3nd3"},"content":"        Person clearedDebtor \u003d new PersonBuilder(debtorToClear).withDebts().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"WR3nd3"},"content":"        String expectedMessage \u003d String.format(ClearDebtsCommand.MESSAGE_CLEAR_DEBTS_SUCCESS,","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"WR3nd3"},"content":"                clearedDebtor.getName());","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"WR3nd3"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"WR3nd3"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), clearedDebtor);","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"WR3nd3"},"content":"        assertCommandSuccess(clearDebtsCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"WR3nd3"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"WR3nd3"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"WR3nd3"},"content":"        ClearDebtsCommand clearDebtsCommand \u003d new ClearDebtsCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"WR3nd3"},"content":"        assertCommandFailure(clearDebtsCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"WR3nd3"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"WR3nd3"},"content":"        showDebtors(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"WR3nd3"},"content":"        Person debtorToClear \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"WR3nd3"},"content":"        ClearDebtsCommand clearDebtsCommand \u003d new ClearDebtsCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"WR3nd3"},"content":"        Person clearedDebtor \u003d new PersonBuilder(debtorToClear).withDebts().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"WR3nd3"},"content":"        String expectedMessage \u003d String.format(ClearDebtsCommand.MESSAGE_CLEAR_DEBTS_SUCCESS,","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"WR3nd3"},"content":"                clearedDebtor.getName());","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"WR3nd3"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"WR3nd3"},"content":"        expectedModel.setPerson(model.getFilteredPersonList()","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"WR3nd3"},"content":"                .get(INDEX_SECOND_PERSON.getZeroBased()), clearedDebtor);","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"WR3nd3"},"content":"        assertCommandSuccess(clearDebtsCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"WR3nd3"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"WR3nd3"},"content":"        showDebtors(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"WR3nd3"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"WR3nd3"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"WR3nd3"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"WR3nd3"},"content":"        ClearDebtsCommand clearDebtsCommand \u003d new ClearDebtsCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"WR3nd3"},"content":"        assertCommandFailure(clearDebtsCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"WR3nd3"},"content":"    public void equals() {","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"WR3nd3"},"content":"        ClearDebtsCommand clearDebtsFirstCommand \u003d new ClearDebtsCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"WR3nd3"},"content":"        ClearDebtsCommand clearDebtsSecondCommand \u003d new ClearDebtsCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"WR3nd3"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"WR3nd3"},"content":"        assertTrue(clearDebtsFirstCommand.equals(clearDebtsFirstCommand));","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"WR3nd3"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"WR3nd3"},"content":"        ClearDebtsCommand clearDebtsFirstCommandCopy \u003d new ClearDebtsCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"WR3nd3"},"content":"        assertTrue(clearDebtsFirstCommand.equals(clearDebtsFirstCommandCopy));","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"WR3nd3"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"WR3nd3"},"content":"        assertFalse(clearDebtsFirstCommand.equals(1));","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"WR3nd3"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"WR3nd3"},"content":"        assertFalse(clearDebtsFirstCommand.equals(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"WR3nd3"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"WR3nd3"},"content":"        assertFalse(clearDebtsFirstCommand.equals(clearDebtsSecondCommand));","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"WR3nd3"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"WR3nd3":109}},{"path":"src/test/java/paymelah/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"tsammeow":1,"-":53}},{"path":"src/test/java/paymelah/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_DEBT;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_MONEY;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"WR3nd3"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Description;","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"tsammeow"},"content":"    public static final String VALID_DEBT_KOI_DESC \u003d \"koi\";","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"tsammeow"},"content":"    public static final String VALID_DEBT_KOI_AMOUNT \u003d \"4.0\";","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"tsammeow"},"content":"    public static final Debt VALID_DEBT_KOI \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"tsammeow"},"content":"            new Debt(new Description(VALID_DEBT_KOI_DESC), new Money(VALID_DEBT_KOI_AMOUNT));","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"tsammeow"},"content":"    public static final String VALID_DEBT_PIZZA_DESC \u003d \"pizza\";","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"tsammeow"},"content":"    public static final String VALID_DEBT_PIZZA_AMOUNT \u003d \"$5\";","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"tsammeow"},"content":"    public static final Debt VALID_DEBT_PIZZA \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"tsammeow"},"content":"            new Debt(new Description(VALID_DEBT_PIZZA_DESC), new Money(VALID_DEBT_PIZZA_AMOUNT));","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"tsammeow"},"content":"    public static final String VALID_DEBT_KARAOKE_DESC \u003d \"karaoke\";","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"tsammeow"},"content":"    public static final String VALID_DEBT_KARAOKE_AMOUNT \u003d \"7\";","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"tsammeow"},"content":"    public static final Debt VALID_DEBT_KARAOKE \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"tsammeow"},"content":"            new Debt(new Description(VALID_DEBT_KARAOKE_DESC), new Money(VALID_DEBT_KARAOKE_AMOUNT));","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"    public static final String VALID_DESCRIPTION_MCDONALDS \u003d \"McDonald\u0027s\";","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"waynezsy"},"content":"    public static final String VALID_DESCRIPTION_SUPPER \u003d \"supper jio\";","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"waynezsy"},"content":"    public static final String VALID_MONEY_MCDONALDS \u003d \"10.80\";","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"waynezsy"},"content":"    public static final String VALID_MONEY_SUPPER \u003d \"$4.5\";","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"waynezsy"},"content":"    public static final String DESCRIPTION_DESC_MCDONALDS \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_MCDONALDS;","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"waynezsy"},"content":"    public static final String DESCRIPTION_DESC_SUPPER \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_SUPPER;","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"waynezsy"},"content":"    public static final String MONEY_DESC_MCDONALDS \u003d \" \" + PREFIX_MONEY + VALID_MONEY_MCDONALDS;","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"waynezsy"},"content":"    public static final String MONEY_DESC_SUPPER \u003d \" \" + PREFIX_MONEY + VALID_MONEY_SUPPER;","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"waynezsy"},"content":"    public static final String INVALID_DESCRIPTION_DESC \u003d \" \" + PREFIX_DESCRIPTION + \" \";","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"waynezsy"},"content":"    public static final String INVALID_MONEY_DESC \u003d \" \" + PREFIX_MONEY + \"one hundred\";","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"WR3nd3"},"content":"    public static final String VALID_DEBT_INDEX \u003d \" \" + PREFIX_DEBT + \"1\";","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"WR3nd3"},"content":"    public static final String VALID_DEBT_INDEXES \u003d \" \" + PREFIX_DEBT + \"1 2 3\";","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"WR3nd3"},"content":"    public static final String VALID_DEBT_INDEXES_REPEAT \u003d \" \" + PREFIX_DEBT + \"1 3 3 1\";","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"WR3nd3"},"content":"    public static final String INVALID_DEBT_INDEX \u003d \" \" + PREFIX_DEBT + \"a\";","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"WR3nd3"},"content":"    public static final String INVALID_DEBT_INDEX_ZERO \u003d \" \" + PREFIX_DEBT + \"0\";","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"WR3nd3"},"content":"    public static final String INVALID_DEBT_INDEXES \u003d \" \" + PREFIX_DEBT + \"1  2\";","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"WR3nd3"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":169,"author":{"gitId":"WR3nd3"},"content":"     * Updates {@code model}\u0027s filtered list to show only the persons with debt in the","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"WR3nd3"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-08"},{"lineNumber":171,"author":{"gitId":"WR3nd3"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":172,"author":{"gitId":"WR3nd3"},"content":"    public static void showDebtors(Model model) {","lastModifiedDate":"2022-10-08"},{"lineNumber":173,"author":{"gitId":"WR3nd3"},"content":"        Predicate\u003cPerson\u003e predicateShowDebtors \u003d p -\u003e !p.getDebts().isEmpty();","lastModifiedDate":"2022-10-08"},{"lineNumber":174,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":175,"author":{"gitId":"WR3nd3"},"content":"        model.updateFilteredPersonList(predicateShowDebtors);","lastModifiedDate":"2022-10-08"},{"lineNumber":176,"author":{"gitId":"WR3nd3"},"content":"        assertTrue(!model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2022-10-08"},{"lineNumber":177,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":178,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tsammeow":29,"WR3nd3":20,"waynezsy":15,"-":115}},{"path":"src/test/java/paymelah/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tsammeow":13,"-":96}},{"path":"src/test/java/paymelah/logic/commands/DeleteDebtCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WR3nd3"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"WR3nd3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"WR3nd3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.showDebtors;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIFTH_PERSON;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_DEBT;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_SECOND_DEBT;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_SEVENTH_PERSON;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_THIRD_DEBT;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"WR3nd3"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"WR3nd3"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"WR3nd3"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"WR3nd3"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"WR3nd3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"WR3nd3"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"WR3nd3"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.debt.DebtList;","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"WR3nd3"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"WR3nd3"},"content":"import paymelah.testutil.DebtListBuilder;","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"WR3nd3"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"WR3nd3"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"WR3nd3"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"WR3nd3"},"content":" * {@code DeleteDebtCommand}.","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"WR3nd3"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"WR3nd3"},"content":"public class DeleteDebtCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"WR3nd3"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"WR3nd3"},"content":"    public void execute_validIndexFollowedByValidDebtOnUnfilteredList_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"WR3nd3"},"content":"        Person debtor \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_DEBT));","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtCommand \u003d new DeleteDebtCommand(INDEX_FIRST_PERSON, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"WR3nd3"},"content":"        Debt toDelete \u003d debtor.getDebts().asList().get(INDEX_FIRST_DEBT.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"WR3nd3"},"content":"        DebtList expectedDebtList \u003d new DebtListBuilder(debtor.getDebts()).build().removeDebt(toDelete);","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"WR3nd3"},"content":"        Person editedDebtor \u003d new PersonBuilder(debtor).withDebts(expectedDebtList).build();","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"WR3nd3"},"content":"        String mainMessage \u003d String.format(DeleteDebtCommand.MESSAGE_DELETE_DEBT_SUCCESS, editedDebtor.getName());","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"WR3nd3"},"content":"        StringBuilder expectedMessage \u003d new StringBuilder(mainMessage);","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"WR3nd3"},"content":"        expectedMessage.append(\"1. \").append(toDelete.toString()).append(\"\\n\");","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"WR3nd3"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"WR3nd3"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), editedDebtor);","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"WR3nd3"},"content":"        assertCommandSuccess(deleteDebtCommand, model, expectedMessage.toString(), expectedModel);","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"WR3nd3"},"content":"    public void execute_validIndexFollowedByValidDebtOnFilteredList_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"WR3nd3"},"content":"        showDebtors(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"WR3nd3"},"content":"        Person debtor \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_DEBT));","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtCommand \u003d new DeleteDebtCommand(INDEX_FIRST_PERSON, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"WR3nd3"},"content":"        Debt toDelete \u003d debtor.getDebts().asList().get(INDEX_FIRST_DEBT.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"WR3nd3"},"content":"        DebtList expectedDebtList \u003d new DebtListBuilder(debtor.getDebts()).build().removeDebt(toDelete);","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"WR3nd3"},"content":"        Person editedDebtor \u003d new PersonBuilder(debtor).withDebts(expectedDebtList).build();","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"WR3nd3"},"content":"        String mainMessage \u003d String.format(DeleteDebtCommand.MESSAGE_DELETE_DEBT_SUCCESS, editedDebtor.getName());","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"WR3nd3"},"content":"        StringBuilder expectedMessage \u003d new StringBuilder(mainMessage);","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"WR3nd3"},"content":"        expectedMessage.append(\"1. \").append(toDelete.toString()).append(\"\\n\");","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"WR3nd3"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"WR3nd3"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), editedDebtor);","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"WR3nd3"},"content":"        assertCommandSuccess(deleteDebtCommand, model, expectedMessage.toString(), expectedModel);","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"WR3nd3"},"content":"    public void execute_validIndexFollowedByValidDebtsOnUnfilteredList_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"WR3nd3"},"content":"        Person debtor \u003d model.getFilteredPersonList().get(INDEX_SEVENTH_PERSON.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(INDEX_SECOND_DEBT, INDEX_FIRST_DEBT));","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtCommand \u003d new DeleteDebtCommand(INDEX_SEVENTH_PERSON, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"WR3nd3"},"content":"        Debt toDeleteOne \u003d debtor.getDebts().asList().get(INDEX_FIRST_DEBT.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"WR3nd3"},"content":"        Debt toDeleteTwo \u003d debtor.getDebts().asList().get(INDEX_SECOND_DEBT.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"WR3nd3"},"content":"        DebtList expectedDebtList \u003d new DebtListBuilder(debtor.getDebts()).build()","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"WR3nd3"},"content":"                .removeDebt(toDeleteOne).removeDebt(toDeleteTwo);","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"WR3nd3"},"content":"        Person editedDebtor \u003d new PersonBuilder(debtor).withDebts(expectedDebtList).build();","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"WR3nd3"},"content":"        String mainMessage \u003d String.format(DeleteDebtCommand.MESSAGE_DELETE_DEBT_SUCCESS, editedDebtor.getName());","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"WR3nd3"},"content":"        StringBuilder expectedMessage \u003d new StringBuilder(mainMessage);","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"WR3nd3"},"content":"        expectedMessage.append(\"1. \").append(toDeleteOne.toString()).append(\"\\n\");","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"WR3nd3"},"content":"        expectedMessage.append(\"2. \").append(toDeleteTwo.toString()).append(\"\\n\");","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"WR3nd3"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"WR3nd3"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_SEVENTH_PERSON.getZeroBased()), editedDebtor);","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"WR3nd3"},"content":"        assertCommandSuccess(deleteDebtCommand, model, expectedMessage.toString(), expectedModel);","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"WR3nd3"},"content":"    public void execute_validIndexFollowedByValidDebtsOnFilteredList_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"WR3nd3"},"content":"        showDebtors(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"WR3nd3"},"content":"        Person debtor \u003d model.getFilteredPersonList().get(INDEX_FIFTH_PERSON.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(INDEX_SECOND_DEBT, INDEX_FIRST_DEBT));","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtCommand \u003d new DeleteDebtCommand(INDEX_FIFTH_PERSON, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"WR3nd3"},"content":"        Debt toDeleteOne \u003d debtor.getDebts().asList().get(INDEX_FIRST_DEBT.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"WR3nd3"},"content":"        Debt toDeleteTwo \u003d debtor.getDebts().asList().get(INDEX_SECOND_DEBT.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":119,"author":{"gitId":"WR3nd3"},"content":"        DebtList expectedDebtList \u003d new DebtListBuilder(debtor.getDebts()).build()","lastModifiedDate":"2022-10-18"},{"lineNumber":120,"author":{"gitId":"WR3nd3"},"content":"                .removeDebt(toDeleteOne).removeDebt(toDeleteTwo);","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"WR3nd3"},"content":"        Person editedDebtor \u003d new PersonBuilder(debtor).withDebts(expectedDebtList).build();","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"WR3nd3"},"content":"        String mainMessage \u003d String.format(DeleteDebtCommand.MESSAGE_DELETE_DEBT_SUCCESS, editedDebtor.getName());","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"WR3nd3"},"content":"        StringBuilder expectedMessage \u003d new StringBuilder(mainMessage);","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"WR3nd3"},"content":"        expectedMessage.append(\"1. \").append(toDeleteOne.toString()).append(\"\\n\");","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"WR3nd3"},"content":"        expectedMessage.append(\"2. \").append(toDeleteTwo.toString()).append(\"\\n\");","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"WR3nd3"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-18"},{"lineNumber":129,"author":{"gitId":"WR3nd3"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FIFTH_PERSON.getZeroBased()), editedDebtor);","lastModifiedDate":"2022-10-18"},{"lineNumber":130,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":131,"author":{"gitId":"WR3nd3"},"content":"        assertCommandSuccess(deleteDebtCommand, model, expectedMessage.toString(), expectedModel);","lastModifiedDate":"2022-10-18"},{"lineNumber":132,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":133,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"WR3nd3"},"content":"    public void execute_invalidIndexOnUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"WR3nd3"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-18"},{"lineNumber":137,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_DEBT));","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtCommand \u003d new DeleteDebtCommand(outOfBoundIndex, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"WR3nd3"},"content":"        assertCommandFailure(deleteDebtCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"WR3nd3"},"content":"    public void execute_invalidIndexOnFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"WR3nd3"},"content":"        showDebtors(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"WR3nd3"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-18"},{"lineNumber":148,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_DEBT));","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtCommand \u003d new DeleteDebtCommand(outOfBoundIndex, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"WR3nd3"},"content":"        assertCommandFailure(deleteDebtCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"WR3nd3"},"content":"    public void execute_validIndexFollowedByInvalidDebtOnUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"WR3nd3"},"content":"        Person debtor \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"WR3nd3"},"content":"        int debtCount \u003d debtor.getDebts().asList().size();","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(Index.fromZeroBased(debtCount)));","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtCommand \u003d new DeleteDebtCommand(INDEX_FIRST_PERSON, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"WR3nd3"},"content":"        assertCommandFailure(deleteDebtCommand, model, Messages.MESSAGE_INVALID_DEBT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":161,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":162,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"WR3nd3"},"content":"    public void execute_validIndexFollowedByInvalidDebtOnFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":164,"author":{"gitId":"WR3nd3"},"content":"        showDebtors(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"WR3nd3"},"content":"        Person debtor \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"WR3nd3"},"content":"        int debtCount \u003d debtor.getDebts().asList().size();","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(Index.fromZeroBased(debtCount)));","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtCommand \u003d new DeleteDebtCommand(INDEX_FIRST_PERSON, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":170,"author":{"gitId":"WR3nd3"},"content":"        assertCommandFailure(deleteDebtCommand, model, Messages.MESSAGE_INVALID_DEBT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":171,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":172,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"WR3nd3"},"content":"    public void equals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"WR3nd3"},"content":"        List\u003cIndex\u003e listFirst \u003d Arrays.asList(INDEX_FIRST_DEBT, INDEX_THIRD_DEBT);","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"WR3nd3"},"content":"        List\u003cIndex\u003e listSecond \u003d Arrays.asList(INDEX_THIRD_DEBT);","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"WR3nd3"},"content":"        HashSet\u003cIndex\u003e indexSetFirst \u003d new HashSet\u003c\u003e(listFirst);","lastModifiedDate":"2022-10-09"},{"lineNumber":179,"author":{"gitId":"WR3nd3"},"content":"        HashSet\u003cIndex\u003e indexSetSecond \u003d new HashSet\u003c\u003e(listSecond);","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtFirstCommand \u003d new DeleteDebtCommand(INDEX_FIRST_PERSON, indexSetFirst);","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtSecondCommand \u003d new DeleteDebtCommand(INDEX_SECOND_PERSON, indexSetFirst);","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtThirdCommand \u003d new DeleteDebtCommand(INDEX_FIRST_PERSON, indexSetSecond);","lastModifiedDate":"2022-10-09"},{"lineNumber":184,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"WR3nd3"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":186,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":187,"author":{"gitId":"WR3nd3"},"content":"        assertTrue(deleteDebtFirstCommand.equals(deleteDebtFirstCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"WR3nd3"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand deleteDebtFirstCommandCopy \u003d new DeleteDebtCommand(INDEX_FIRST_PERSON, indexSetFirst);","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"WR3nd3"},"content":"        assertTrue(deleteDebtFirstCommand.equals(deleteDebtFirstCommandCopy));","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"WR3nd3"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"WR3nd3"},"content":"        assertFalse(deleteDebtFirstCommand.equals(1));","lastModifiedDate":"2022-10-09"},{"lineNumber":195,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"WR3nd3"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"WR3nd3"},"content":"        assertFalse(deleteDebtFirstCommand.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"WR3nd3"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":200,"author":{"gitId":"WR3nd3"},"content":"        assertFalse(deleteDebtFirstCommand.equals(deleteDebtSecondCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":202,"author":{"gitId":"WR3nd3"},"content":"        // different set of Debts -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":203,"author":{"gitId":"WR3nd3"},"content":"        assertFalse(deleteDebtFirstCommand.equals(deleteDebtThirdCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":204,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"WR3nd3"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"WR3nd3":205}},{"path":"src/test/java/paymelah/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"tsammeow"},"content":"        Index index \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"tsammeow"},"content":"        Person sourcePerson \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"tsammeow"},"content":"        Person editedPerson \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"tsammeow"},"content":"                new PersonBuilder().withDebts(sourcePerson.getDebts().asList().toArray(new Debt[0])).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"tsammeow"},"content":"        EditCommand editCommand \u003d new EditCommand(index, descriptor);","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"tsammeow":28,"-":149}},{"path":"src/test/java/paymelah/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tsammeow":10,"-":48}},{"path":"src/test/java/paymelah/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tsammeow":5,"-":15}},{"path":"src/test/java/paymelah/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"import static paymelah.logic.parser.ParserUtil.prepareNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"TheSoggy"},"content":" * {@code FindCommand}.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"TheSoggy"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"TheSoggy"},"content":"                Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"TheSoggy"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"TheSoggy"},"content":"                Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"TheSoggy"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"TheSoggy"},"content":"            NameContainsKeywordsPredicate predicate \u003d prepareNameContainsKeywordsPredicate(\"NonExistentName\");","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"TheSoggy"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"TheSoggy"},"content":"            fail(\"Invalid predicate\");","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"TheSoggy"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"TheSoggy"},"content":"            NameContainsKeywordsPredicate predicate \u003d prepareNameContainsKeywordsPredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"TheSoggy"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"TheSoggy"},"content":"            fail(\"Invalid predicate\");","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tsammeow":11,"-":59,"TheSoggy":18}},{"path":"src/test/java/paymelah/logic/commands/FindDebtCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"import static paymelah.logic.parser.ParserUtil.prepareDebtContainsKeywordsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"import paymelah.model.person.DebtContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":" * {@code FindDebtCommand}.","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"public class FindDebtCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"tsammeow"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"    public void equals() {","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"TheSoggy"},"content":"        DebtContainsKeywordsPredicate firstPredicate \u003d new DebtContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"TheSoggy"},"content":"                Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"TheSoggy"},"content":"        DebtContainsKeywordsPredicate secondPredicate \u003d new DebtContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"TheSoggy"},"content":"                Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"tsammeow"},"content":"        FindDebtCommand findDebtFirstCommand \u003d new FindDebtCommand(firstPredicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"tsammeow"},"content":"        FindDebtCommand findDebtSecondCommand \u003d new FindDebtCommand(secondPredicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"tsammeow"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"tsammeow"},"content":"        assertTrue(findDebtFirstCommand.equals(findDebtFirstCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"tsammeow"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"tsammeow"},"content":"        FindDebtCommand findDebtFirstCommandCopy \u003d new FindDebtCommand(firstPredicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"tsammeow"},"content":"        assertTrue(findDebtFirstCommand.equals(findDebtFirstCommandCopy));","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"tsammeow"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"tsammeow"},"content":"        assertFalse(findDebtFirstCommand.equals(1));","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"tsammeow"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"tsammeow"},"content":"        assertFalse(findDebtFirstCommand.equals(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"tsammeow"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"tsammeow"},"content":"        assertFalse(findDebtFirstCommand.equals(findDebtSecondCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"tsammeow"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"tsammeow"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"tsammeow"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"TheSoggy"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"TheSoggy"},"content":"            DebtContainsKeywordsPredicate predicate \u003d prepareDebtContainsKeywordsPredicate(\"NonExistentDebt\");","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"tsammeow"},"content":"            FindDebtCommand command \u003d new FindDebtCommand(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"tsammeow"},"content":"            expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"tsammeow"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"tsammeow"},"content":"            assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"TheSoggy"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"TheSoggy"},"content":"            fail(\"Invalid predicate\");","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"tsammeow"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"tsammeow"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"tsammeow"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"TheSoggy"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"TheSoggy"},"content":"            DebtContainsKeywordsPredicate predicate \u003d prepareDebtContainsKeywordsPredicate(\"burger\");","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"tsammeow"},"content":"            FindDebtCommand command \u003d new FindDebtCommand(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"tsammeow"},"content":"            expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"tsammeow"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"tsammeow"},"content":"            assertEquals(Arrays.asList(BENSON, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"TheSoggy"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"TheSoggy"},"content":"            fail(\"Invalid predicate\");","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"tsammeow"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"tsammeow"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"tsammeow":68,"TheSoggy":19}},{"path":"src/test/java/paymelah/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tsammeow":5,"-":15}},{"path":"src/test/java/paymelah/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tsammeow":8,"-":31}},{"path":"src/test/java/paymelah/logic/commands/ListDebtorsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lyuting47"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"lyuting47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"lyuting47"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"lyuting47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"lyuting47"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"lyuting47"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"lyuting47"},"content":"import static paymelah.logic.commands.ListDebtorsCommand.MESSAGE_NO_DEBTORS;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"lyuting47"},"content":"import static paymelah.logic.commands.ListDebtorsCommand.MESSAGE_SUCCESS_GENERIC;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"lyuting47"},"content":"import static paymelah.logic.commands.ListDebtorsCommand.MESSAGE_SUCCESS_SPECIFIC;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"lyuting47"},"content":"import static paymelah.logic.parser.ParserUtil.prepareDebtGreaterEqualAmountPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"lyuting47"},"content":"import static paymelah.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"lyuting47"},"content":"import static paymelah.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"lyuting47"},"content":"import static paymelah.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"lyuting47"},"content":"import static paymelah.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"lyuting47"},"content":"import static paymelah.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"lyuting47"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"lyuting47"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"lyuting47"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"lyuting47"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"lyuting47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"lyuting47"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.person.DebtGreaterEqualAmountPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"lyuting47"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"lyuting47"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListDebtorsCommand.","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"lyuting47"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"lyuting47"},"content":"class ListDebtorsCommandTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"lyuting47"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"lyuting47"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"lyuting47"},"content":"    public void equals() {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"lyuting47"},"content":"        DebtGreaterEqualAmountPredicate firstPredicate \u003d new DebtGreaterEqualAmountPredicate(","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"lyuting47"},"content":"                new Money(\"5\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"lyuting47"},"content":"        DebtGreaterEqualAmountPredicate secondPredicate \u003d new DebtGreaterEqualAmountPredicate(","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"lyuting47"},"content":"                new Money(\"10.0\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"lyuting47"},"content":"        ListDebtorsCommand firstCommand \u003d new ListDebtorsCommand(firstPredicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"lyuting47"},"content":"        ListDebtorsCommand secondCommand \u003d new ListDebtorsCommand(secondPredicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"lyuting47"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"lyuting47"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"lyuting47"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"lyuting47"},"content":"        DebtGreaterEqualAmountPredicate firstPredicateCopy \u003d new DebtGreaterEqualAmountPredicate(","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"lyuting47"},"content":"                new Money(\"$5.00\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"lyuting47"},"content":"        ListDebtorsCommand firstCommandCopy \u003d new ListDebtorsCommand(firstPredicateCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"lyuting47"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"lyuting47"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"lyuting47"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"lyuting47"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"lyuting47"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"lyuting47"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"lyuting47"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"lyuting47"},"content":"    public void execute_amountProvided_noPersonFound() {","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"lyuting47"},"content":"        String testAmount \u003d \"$1000\";","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"lyuting47"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"lyuting47"},"content":"            DebtGreaterEqualAmountPredicate predicate \u003d prepareDebtGreaterEqualAmountPredicate(testAmount);","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"lyuting47"},"content":"            String expectedMessage \u003d MESSAGE_NO_DEBTORS;","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"lyuting47"},"content":"            ListDebtorsCommand command \u003d new ListDebtorsCommand(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"lyuting47"},"content":"            expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"lyuting47"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"lyuting47"},"content":"            assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"lyuting47"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"lyuting47"},"content":"            fail(\"Invalid predicate\");","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"lyuting47"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"lyuting47"},"content":"    public void execute_amountSpecified_personsFound() {","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"lyuting47"},"content":"        String testAmount \u003d \"$20\";","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"lyuting47"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"lyuting47"},"content":"            DebtGreaterEqualAmountPredicate predicate \u003d prepareDebtGreaterEqualAmountPredicate(testAmount);","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"lyuting47"},"content":"            String expectedMessage \u003d String.format(MESSAGE_SUCCESS_SPECIFIC, predicate.getAmount());","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"lyuting47"},"content":"            ListDebtorsCommand command \u003d new ListDebtorsCommand(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"lyuting47"},"content":"            expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"lyuting47"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"lyuting47"},"content":"            assertEquals(Arrays.asList(CARL, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"lyuting47"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"lyuting47"},"content":"            fail(\"Invalid predicate\");","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"lyuting47"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"lyuting47"},"content":"    public void execute_amountUnspecified_personsFound() {","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"lyuting47"},"content":"        String expectedMessage \u003d MESSAGE_SUCCESS_GENERIC;","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"lyuting47"},"content":"        ListDebtorsCommand command \u003d new ListDebtorsCommand();","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"lyuting47"},"content":"        Predicate\u003cPerson\u003e predicate \u003d p -\u003e !p.getDebts().isEmpty();","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"lyuting47"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"lyuting47"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"lyuting47"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"lyuting47"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"lyuting47":109}},{"path":"src/test/java/paymelah/logic/commands/StatementCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TheSoggy"},"content":"package paymelah.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"TheSoggy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"TheSoggy"},"content":"import static paymelah.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"TheSoggy"},"content":"import static paymelah.logic.parser.ParserUtil.prepareDebtContainsKeywordsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"TheSoggy"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"TheSoggy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"TheSoggy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"TheSoggy"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"TheSoggy"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"TheSoggy"},"content":"import paymelah.model.ModelManager;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"TheSoggy"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"TheSoggy"},"content":"import paymelah.model.person.DebtContainsKeywordsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"TheSoggy"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"TheSoggy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"TheSoggy"},"content":" * StatementCommand.","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"TheSoggy"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"TheSoggy"},"content":"class StatementCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"TheSoggy"},"content":"    private Model model;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"TheSoggy"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"TheSoggy"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"TheSoggy"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"TheSoggy"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"TheSoggy"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"TheSoggy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"TheSoggy"},"content":"    public void execute_statementOnUnfilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"TheSoggy"},"content":"        String expectedMessage \u003d String.format(StatementCommand.MESSAGE_SUCCESS, \"94.32\");","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"TheSoggy"},"content":"        assertCommandSuccess(new StatementCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"TheSoggy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"TheSoggy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"TheSoggy"},"content":"    public void execute_statementOnFilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"TheSoggy"},"content":"        String expectedMessage \u003d String.format(StatementCommand.MESSAGE_SUCCESS, \"19.40\");","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"TheSoggy"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"TheSoggy"},"content":"            DebtContainsKeywordsPredicate predicate \u003d prepareDebtContainsKeywordsPredicate(\"burger\");","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"TheSoggy"},"content":"            model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"TheSoggy"},"content":"            expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"TheSoggy"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"TheSoggy"},"content":"            fail(\"Invalid predicate\");","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"TheSoggy"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"TheSoggy"},"content":"        assertCommandSuccess(new StatementCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"TheSoggy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"TheSoggy"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"TheSoggy":50}},{"path":"src/test/java/paymelah/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.AddCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"tsammeow"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).withDebts().build();","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"tsammeow"},"content":"                .withDebts().build();","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"tsammeow"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withDebts().build();","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tsammeow":41,"-":100}},{"path":"src/test/java/paymelah/logic/parser/AddDebtCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.DESCRIPTION_DESC_MCDONALDS;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.DESCRIPTION_DESC_SUPPER;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_DESCRIPTION_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_MONEY_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.MONEY_DESC_MCDONALDS;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.MONEY_DESC_SUPPER;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MCDONALDS;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_DESCRIPTION_SUPPER;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_MONEY_MCDONALDS;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_MONEY_SUPPER;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"import paymelah.logic.commands.AddDebtCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"import paymelah.testutil.DebtBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"public class AddDebtCommandParserTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDebtCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"    private AddDebtCommandParser parser \u003d new AddDebtCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"        // no index specified","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, DESCRIPTION_DESC_SUPPER + MONEY_DESC_SUPPER, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        // no field specified","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"        // missing description prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"1\" + VALID_DESCRIPTION_SUPPER + MONEY_DESC_SUPPER, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"        // missing money prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"1\" + DESCRIPTION_DESC_SUPPER + VALID_MONEY_SUPPER, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"        // negative index","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"-5\" + VALID_DESCRIPTION_SUPPER, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"        // zero index","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"0\" + VALID_DESCRIPTION_SUPPER, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DESCRIPTION_DESC + MONEY_DESC_SUPPER,","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"                Description.MESSAGE_CONSTRAINTS); // invalid description","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"1\" + DESCRIPTION_DESC_SUPPER + INVALID_MONEY_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"                Money.MESSAGE_CONSTRAINTS); // invalid money","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"        // invalid description followed by valid money","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DESCRIPTION_DESC + MONEY_DESC_SUPPER,","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"waynezsy"},"content":"                Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"waynezsy"},"content":"        // valid money followed by invalid money. The test case for invalid money followed by valid money","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"waynezsy"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"1\" + DESCRIPTION_DESC_SUPPER + MONEY_DESC_SUPPER + INVALID_MONEY_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"waynezsy"},"content":"                Money.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"waynezsy"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"waynezsy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DESCRIPTION_DESC + INVALID_MONEY_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"waynezsy"},"content":"                Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"waynezsy"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"waynezsy"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"waynezsy"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_MCDONALDS + MONEY_DESC_MCDONALDS;","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"waynezsy"},"content":"        Debt expectedDebt \u003d new DebtBuilder().withDescription(VALID_DESCRIPTION_MCDONALDS)","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"waynezsy"},"content":"                .withMoney(VALID_MONEY_MCDONALDS).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"waynezsy"},"content":"        AddDebtCommand expectedCommand \u003d new AddDebtCommand(targetIndex, expectedDebt);","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"waynezsy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"waynezsy"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"waynezsy"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"waynezsy"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_SUPPER + DESCRIPTION_DESC_MCDONALDS","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"waynezsy"},"content":"                + MONEY_DESC_SUPPER + MONEY_DESC_MCDONALDS;","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"waynezsy"},"content":"        Debt expectedDebt \u003d new DebtBuilder().withDescription(VALID_DESCRIPTION_MCDONALDS)","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"waynezsy"},"content":"                .withMoney(VALID_MONEY_MCDONALDS).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"waynezsy"},"content":"        AddDebtCommand expectedCommand \u003d new AddDebtCommand(targetIndex, expectedDebt);","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"waynezsy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"waynezsy"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"waynezsy"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"waynezsy"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DESCRIPTION_DESC + DESCRIPTION_DESC_MCDONALDS","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"waynezsy"},"content":"                + MONEY_DESC_MCDONALDS;","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"waynezsy"},"content":"        Debt expectedDebt \u003d new DebtBuilder().withDescription(VALID_DESCRIPTION_MCDONALDS)","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"waynezsy"},"content":"                .withMoney(VALID_MONEY_MCDONALDS).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"waynezsy"},"content":"        AddDebtCommand expectedCommand \u003d new AddDebtCommand(targetIndex, expectedDebt);","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"waynezsy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"waynezsy":123}},{"path":"src/test/java/paymelah/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.AddCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.EditCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.FindCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.ListCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.PersonUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tsammeow":20,"-":81}},{"path":"src/test/java/paymelah/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"tsammeow":1,"-":149}},{"path":"src/test/java/paymelah/logic/parser/ClearDebtsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WR3nd3"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"WR3nd3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"WR3nd3"},"content":"import paymelah.logic.commands.ClearDebtsCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"WR3nd3"},"content":"public class ClearDebtsCommandParserTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"WR3nd3"},"content":"    private ClearDebtsCommandParser parser \u003d new ClearDebtsCommandParser();","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"WR3nd3"},"content":"    public void parse_validArgs_returnsClearDebtsCommand() {","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"WR3nd3"},"content":"        assertParseSuccess(parser, \"1\", new ClearDebtsCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"WR3nd3"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"WR3nd3"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"WR3nd3"},"content":"                ClearDebtsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"WR3nd3"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"WR3nd3":26}},{"path":"src/test/java/paymelah/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.Command;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"tsammeow":3,"-":36}},{"path":"src/test/java/paymelah/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"tsammeow":6,"-":26}},{"path":"src/test/java/paymelah/logic/parser/DeleteDebtCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WR3nd3"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_DEBT_INDEX;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_DEBT_INDEXES;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_DEBT_INDEX_ZERO;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_DEBT_INDEX;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_DEBT_INDEXES;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_DEBT_INDEXES_REPEAT;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_DEBT;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_SECOND_DEBT;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_THIRD_DEBT;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"WR3nd3"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"WR3nd3"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"WR3nd3"},"content":"import java.util.List;","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"WR3nd3"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"WR3nd3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"WR3nd3"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"WR3nd3"},"content":"import paymelah.logic.commands.DeleteDebtCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"WR3nd3"},"content":"public class DeleteDebtCommandParserTest {","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"WR3nd3"},"content":"    //private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"WR3nd3"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"WR3nd3"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDebtCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"WR3nd3"},"content":"    private DeleteDebtCommandParser parser \u003d new DeleteDebtCommandParser();","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"WR3nd3"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"WR3nd3"},"content":"        // no person index specified","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"WR3nd3"},"content":"        assertParseFailure(parser, VALID_DEBT_INDEX, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"WR3nd3"},"content":"        // no debt specified","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"WR3nd3"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"WR3nd3"},"content":"        // no person and no debts specified","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"WR3nd3"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"WR3nd3"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"WR3nd3"},"content":"        // negative person index","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"WR3nd3"},"content":"        assertParseFailure(parser, \"-5\" + VALID_DEBT_INDEX, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"WR3nd3"},"content":"        // zero person index","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"WR3nd3"},"content":"        assertParseFailure(parser, \"0\" + VALID_DEBT_INDEX, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"WR3nd3"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"WR3nd3"},"content":"        assertParseFailure(parser, \"1 some random string\" + VALID_DEBT_INDEX, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"WR3nd3"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"WR3nd3"},"content":"        assertParseFailure(parser, \"1 i/ string\" + VALID_DEBT_INDEX, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"WR3nd3"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"WR3nd3"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEBT_INDEX, MESSAGE_INVALID_FORMAT); // non-index","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"WR3nd3"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEBT_INDEX_ZERO, MESSAGE_INVALID_FORMAT); // zero index","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"WR3nd3"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEBT_INDEXES, MESSAGE_INVALID_FORMAT); // multiple spacing","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"WR3nd3"},"content":"    public void parse_oneDebt_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"WR3nd3"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"WR3nd3"},"content":"        String userInput \u003d targetIndex.getOneBased() + VALID_DEBT_INDEX;","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_DEBT));","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand expectedCommand \u003d new DeleteDebtCommand(targetIndex, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"WR3nd3"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"WR3nd3"},"content":"    public void parse_multipleDebt_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"WR3nd3"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"WR3nd3"},"content":"        String userInput \u003d targetIndex.getOneBased() + VALID_DEBT_INDEXES;","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_DEBT, INDEX_SECOND_DEBT, INDEX_THIRD_DEBT));","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand expectedCommand \u003d new DeleteDebtCommand(targetIndex, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"WR3nd3"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"WR3nd3"},"content":"    public void parse_multipleDebtWithRepeat_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"WR3nd3"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"WR3nd3"},"content":"        String userInput \u003d targetIndex.getOneBased() + VALID_DEBT_INDEXES_REPEAT;","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_DEBT, INDEX_THIRD_DEBT));","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand expectedCommand \u003d new DeleteDebtCommand(targetIndex, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"WR3nd3"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"WR3nd3"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"WR3nd3"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"WR3nd3"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"WR3nd3"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DEBT_INDEX + VALID_DEBT_INDEX;","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"WR3nd3"},"content":"        Set\u003cIndex\u003e debtIndexSet \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_DEBT));","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"WR3nd3"},"content":"        DeleteDebtCommand expectedCommand \u003d new DeleteDebtCommand(targetIndex, debtIndexSet);","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"WR3nd3"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"WR3nd3"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"WR3nd3"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"WR3nd3"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"WR3nd3":114}},{"path":"src/test/java/paymelah/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.EditCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"tsammeow":40,"-":171}},{"path":"src/test/java/paymelah/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.FindCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"lyuting47"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"lyuting47"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"tsammeow":6,"lyuting47":2,"-":27}},{"path":"src/test/java/paymelah/logic/parser/ListDebtorsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lyuting47"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"lyuting47"},"content":"import static paymelah.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"lyuting47"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"lyuting47"},"content":"import static paymelah.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"lyuting47"},"content":"import static paymelah.model.debt.Money.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"lyuting47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"lyuting47"},"content":"import paymelah.logic.commands.ListDebtorsCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.person.DebtGreaterEqualAmountPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"lyuting47"},"content":"public class ListDebtorsCommandParserTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"lyuting47"},"content":"    private ListDebtorsCommandParser parser \u003d new ListDebtorsCommandParser();","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"lyuting47"},"content":"    public void parse_preamblePresent_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"lyuting47"},"content":"        assertParseFailure(parser, \"preamble\",","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"lyuting47"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListDebtorsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"lyuting47"},"content":"        assertParseFailure(parser, \"12345\",","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"lyuting47"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListDebtorsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"lyuting47"},"content":"    public void parse_invalidMoney_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"lyuting47"},"content":"        assertParseFailure(parser, \" m/-9.9\", MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"lyuting47"},"content":"        assertParseFailure(parser, \" m/1.2.9\", MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"lyuting47"},"content":"        assertParseFailure(parser, \" m/invalid money\", MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"lyuting47"},"content":"    public void parse_validMoney_returnsListDebtorsCommand() {","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"lyuting47"},"content":"        ListDebtorsCommand expectedListDebtorsCommand \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"lyuting47"},"content":"                new ListDebtorsCommand(new DebtGreaterEqualAmountPredicate(new Money(\"10\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"lyuting47"},"content":"        assertParseSuccess(parser, \" m/10.0\", expectedListDebtorsCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"lyuting47"},"content":"        assertParseSuccess(parser, \" m/10\", expectedListDebtorsCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"lyuting47"},"content":"        assertParseSuccess(parser, \" m/$10.00\", expectedListDebtorsCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"lyuting47"},"content":"    public void parse_multipleMoneytakeLast_returnsListDebtorsCommand() {","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"lyuting47"},"content":"        ListDebtorsCommand expectedListDebtorsCommand \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"lyuting47"},"content":"                new ListDebtorsCommand(new DebtGreaterEqualAmountPredicate(new Money(\"10\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"lyuting47"},"content":"        assertParseSuccess(parser, \" m/123 m/10.0\", expectedListDebtorsCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"lyuting47"},"content":"        assertParseSuccess(parser, \" m/10 m/10\", expectedListDebtorsCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"lyuting47"},"content":"        assertParseSuccess(parser, \" m/invalid money m/$10.00\", expectedListDebtorsCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"lyuting47"},"content":"    public void parse_noMoneySpecified_returnsGenericListDebtorsCommand() {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"lyuting47"},"content":"        ListDebtorsCommand expectedListDebtorsCommand \u003d new ListDebtorsCommand();","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"lyuting47"},"content":"        assertParseSuccess(parser, \"\", expectedListDebtorsCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"lyuting47"},"content":"        assertParseSuccess(parser, \"  \", expectedListDebtorsCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"lyuting47"},"content":"        assertParseSuccess(parser, \"  \\n \\t\", expectedListDebtorsCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"lyuting47"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"lyuting47":61}},{"path":"src/test/java/paymelah/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Description;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"    private static final String INVALID_MONEY \u003d \"one dollar\";","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"    private static final String VALID_DESCRIPTION \u003d \"Kickstarter\";","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"    private static final String VALID_MONEY \u003d \"2.50\";","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":204,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":205,"author":{"gitId":"waynezsy"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":206,"author":{"gitId":"waynezsy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((String) null));","lastModifiedDate":"2022-10-08"},{"lineNumber":207,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":208,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":209,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":210,"author":{"gitId":"waynezsy"},"content":"    public void parseDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":211,"author":{"gitId":"waynezsy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2022-10-08"},{"lineNumber":212,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":213,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":214,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":215,"author":{"gitId":"waynezsy"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":216,"author":{"gitId":"waynezsy"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2022-10-08"},{"lineNumber":217,"author":{"gitId":"waynezsy"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2022-10-08"},{"lineNumber":218,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":219,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":220,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":221,"author":{"gitId":"waynezsy"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":222,"author":{"gitId":"waynezsy"},"content":"        String descriptionWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2022-10-08"},{"lineNumber":223,"author":{"gitId":"waynezsy"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2022-10-08"},{"lineNumber":224,"author":{"gitId":"waynezsy"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(descriptionWithWhitespace));","lastModifiedDate":"2022-10-08"},{"lineNumber":225,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":226,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":227,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":228,"author":{"gitId":"waynezsy"},"content":"    public void parseMoney_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":229,"author":{"gitId":"waynezsy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMoney((String) null));","lastModifiedDate":"2022-10-08"},{"lineNumber":230,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":231,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":232,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":233,"author":{"gitId":"waynezsy"},"content":"    public void parseMoney_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":234,"author":{"gitId":"waynezsy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(INVALID_MONEY));","lastModifiedDate":"2022-10-08"},{"lineNumber":235,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":236,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":237,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":238,"author":{"gitId":"waynezsy"},"content":"    public void parseMoney_validValueWithoutWhitespace_returnsMoney() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":239,"author":{"gitId":"waynezsy"},"content":"        Money expectedMoney \u003d new Money(VALID_MONEY);","lastModifiedDate":"2022-10-08"},{"lineNumber":240,"author":{"gitId":"waynezsy"},"content":"        assertEquals(expectedMoney, ParserUtil.parseMoney(VALID_MONEY));","lastModifiedDate":"2022-10-08"},{"lineNumber":241,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":242,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":243,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":244,"author":{"gitId":"waynezsy"},"content":"    public void parseMoney_validValueWithWhitespace_returnsTrimmedMoney() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":245,"author":{"gitId":"waynezsy"},"content":"        String moneyWithWhitespace \u003d WHITESPACE + VALID_MONEY + WHITESPACE;","lastModifiedDate":"2022-10-08"},{"lineNumber":246,"author":{"gitId":"waynezsy"},"content":"        Money expectedMoney \u003d new Money(VALID_MONEY);","lastModifiedDate":"2022-10-08"},{"lineNumber":247,"author":{"gitId":"waynezsy"},"content":"        assertEquals(expectedMoney, ParserUtil.parseMoney(moneyWithWhitespace));","lastModifiedDate":"2022-10-08"},{"lineNumber":248,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":249,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":250,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":251,"author":{"gitId":"waynezsy"},"content":"    public void arePrefixesPresent() {","lastModifiedDate":"2022-10-08"},{"lineNumber":252,"author":{"gitId":"waynezsy"},"content":"        // To be implemented","lastModifiedDate":"2022-10-08"},{"lineNumber":253,"author":{"gitId":"waynezsy"},"content":"        assertTrue(true);","lastModifiedDate":"2022-10-08"},{"lineNumber":254,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"tsammeow":10,"waynezsy":59,"-":186}},{"path":"src/test/java/paymelah/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"tsammeow":9,"-":93}},{"path":"src/test/java/paymelah/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.AddressBookBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"tsammeow":8,"-":124}},{"path":"src/test/java/paymelah/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"tsammeow":2,"-":19}},{"path":"src/test/java/paymelah/model/debt/DebtListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.debt;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalDebts.MCDONALDS;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.DebtBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.DebtListBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"public class DebtListTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"    public void asList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"        DebtList debts \u003d new DebtListBuilder().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e debts.asList().remove(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"    public void addDebt_debtAdded() {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"        DebtList debts \u003d new DebtList();","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"        DebtList newDebts \u003d new DebtListBuilder(debts).withDebt(MCDONALDS).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"        assertEquals(newDebts, debts.addDebt(MCDONALDS));","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"    public void removeDebt_debtRemoved() {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"        Debt newDebt \u003d new DebtBuilder().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"        DebtList debts \u003d new DebtListBuilder().withDebt(MCDONALDS).withDebt(newDebt).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"        DebtList newDebts \u003d new DebtListBuilder().withDebt(newDebt).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"tsammeow"},"content":"        assertEquals(newDebts, debts.removeDebt(MCDONALDS));","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"tsammeow"},"content":"    public void equals() {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"tsammeow"},"content":"        DebtList debts \u003d new DebtListBuilder().withDebt(MCDONALDS).withDebt(new DebtBuilder().build()).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"tsammeow"},"content":"        DebtList debtsCopy \u003d new DebtListBuilder(debts).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"tsammeow"},"content":"        assertTrue(debts.equals(debtsCopy));","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"tsammeow"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"tsammeow":44}},{"path":"src/test/java/paymelah/model/debt/DebtTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.model.debt;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import static paymelah.testutil.TypicalDebts.CHICKEN_RICE;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import static paymelah.testutil.TypicalDebts.MCDONALDS;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"import paymelah.testutil.DebtBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"public class DebtTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    public void equals() {","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"        Debt mcdonaldsCopy \u003d new DebtBuilder(MCDONALDS).build();","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"        assertTrue(MCDONALDS.equals(mcdonaldsCopy));","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"        assertTrue(CHICKEN_RICE.equals(CHICKEN_RICE));","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"        assertFalse(MCDONALDS.equals(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"        assertFalse(MCDONALDS.equals(\"mcdonalds\"));","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"        // different debt -\u003e returns false","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"        assertFalse(MCDONALDS.equals(CHICKEN_RICE));","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"        Debt editedMcdonalds \u003d new DebtBuilder(MCDONALDS).withDescription(\"KFC\").build();","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"        assertFalse(MCDONALDS.equals(editedMcdonalds));","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        // different money -\u003e returns false","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        editedMcdonalds \u003d new DebtBuilder(MCDONALDS).withMoney(\"120.40\").build();","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        assertFalse(MCDONALDS.equals(editedMcdonalds));","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"    public void makeDebt() {","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"        Debt fromDebtBuilder \u003d new DebtBuilder().withDescription(\"Gift cards\").withMoney(\"50\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"        Debt fromMakeDebt \u003d Debt.makeDebt(\"Gift cards\", \"50\");","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"        assertEquals(fromDebtBuilder, fromMakeDebt);","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"waynezsy":48}},{"path":"src/test/java/paymelah/model/debt/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.model.debt;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"    public void isValidDescription() {","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"        // null description","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"        // invalid description","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"       \")); // many white spaces","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"        // valid description","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Description.isValidDescription(\"mcdonalds\")); // alphabets only","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Description.isValidDescription(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Description.isValidDescription(\"mcdonald\u0027s\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Description.isValidDescription(\"12345\")); // numbers only","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Description.isValidDescription(\"mcd0na1d5\")); // alphanumeric characters","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Description.isValidDescription(\"McDonalds\")); // with capital letters","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Description.isValidDescription(","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"                \"Samurai Chicken Burger Meal Upsized with Coke\")); // long descriptions","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"waynezsy":41}},{"path":"src/test/java/paymelah/model/debt/MoneyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.model.debt;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"public class MoneyTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Money(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"    public void constructor_invalidMoney_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"        String invalidMoney \u003d \"\";","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Money(invalidMoney));","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"    public void isValidMoney() {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"        // null money amount","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Money.isValidMoney(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"        // invalid money amounts","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"\")); // empty string","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\" \")); // spaces only","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"       \")); // many white spaces","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"$\")); // dollar sign only","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"-1.23\")); // with negative sign in front","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"0.\")); // no numbers after decimal point","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"0.12345\")); // more than 2 numbers after decimal point","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"phone\")); // non-numeric","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"20,1\")); // decimal point is wrong character","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"1$20c\")); // characters within digits","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"1234 5678\")); // spaces within digits","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"        assertFalse(Money.isValidMoney(\"$$2.50\")); // multiple leading dollar signs","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"        // valid money amounts","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Money.isValidMoney(\"911\")); // no decimal point","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Money.isValidMoney(\"0.1\")); // 1 number after decimal point","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Money.isValidMoney(\"0.12\")); // 2 numbers after decimal point","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Money.isValidMoney(\"$2.50\")); // with leading dollar sign","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"        assertTrue(Money.isValidMoney(\"124293842033123\")); // long numbers","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"    public void equals() {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"        Money noDecimal \u003d new Money(\"2\");","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"waynezsy"},"content":"        Money oneDecimal \u003d new Money(\"2.0\");","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"waynezsy"},"content":"        Money twoDecimal \u003d new Money(\"2.00\");","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"waynezsy"},"content":"        Money dollarSign \u003d new Money(\"$2\");","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"waynezsy"},"content":"        Money differentValue \u003d new Money(\"3\");","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"waynezsy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"waynezsy"},"content":"        assertEquals(twoDecimal, twoDecimal);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"waynezsy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"waynezsy"},"content":"        assertEquals(noDecimal, oneDecimal);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"waynezsy"},"content":"        assertEquals(oneDecimal, twoDecimal);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"waynezsy"},"content":"        assertEquals(noDecimal, dollarSign);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"waynezsy"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"waynezsy"},"content":"        assertNotEquals(noDecimal, differentValue);","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"waynezsy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"waynezsy"},"content":"        assertNotEquals(null, noDecimal);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"waynezsy":72}},{"path":"src/test/java/paymelah/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"tsammeow":2,"-":34}},{"path":"src/test/java/paymelah/model/person/DebtGreaterEqualAmountPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lyuting47"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"lyuting47"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"lyuting47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"lyuting47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"lyuting47"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"lyuting47"},"content":"import paymelah.testutil.DebtBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"lyuting47"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"lyuting47"},"content":"public class DebtGreaterEqualAmountPredicateTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"lyuting47"},"content":"    void equals() {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"lyuting47"},"content":"        Money firstAmount \u003d new Money(\"5.00\");","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"lyuting47"},"content":"        Money secondAmount \u003d new Money(\"10.5\");","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"lyuting47"},"content":"        DebtGreaterEqualAmountPredicate firstPredicate \u003d new DebtGreaterEqualAmountPredicate(firstAmount);","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"lyuting47"},"content":"        DebtGreaterEqualAmountPredicate secondPredicate \u003d new DebtGreaterEqualAmountPredicate(secondAmount);","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"lyuting47"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"lyuting47"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"lyuting47"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"lyuting47"},"content":"        DebtGreaterEqualAmountPredicate firstPredicateCopy \u003d new DebtGreaterEqualAmountPredicate(firstAmount);","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"lyuting47"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"lyuting47"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"lyuting47"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"lyuting47"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"lyuting47"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"lyuting47"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"lyuting47"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"lyuting47"},"content":"    public void moneyGreaterEqualAmount_returnsTrue() {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"lyuting47"},"content":"        Money amount \u003d new Money(\"5.00\");","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"lyuting47"},"content":"        DebtGreaterEqualAmountPredicate predicate \u003d new DebtGreaterEqualAmountPredicate(amount);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"lyuting47"},"content":"        // Single debt greater than amount","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"lyuting47"},"content":"        Person dude \u003d new PersonBuilder().withDebts(new DebtBuilder().withMoney(\"10.55\").build()).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"lyuting47"},"content":"        assertTrue(predicate.test(dude));","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"lyuting47"},"content":"        // Multiple debts whose sum greater than amount","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"lyuting47"},"content":"        dude \u003d new PersonBuilder().withDebts(","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"lyuting47"},"content":"                                    new DebtBuilder().withMoney(\"$4\").build(), new DebtBuilder().withMoney(\"3\").build())","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"lyuting47"},"content":"                                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"lyuting47"},"content":"        assertTrue(predicate.test(dude));","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"lyuting47"},"content":"        // Single debt exactly equal to amount","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"lyuting47"},"content":"        dude \u003d new PersonBuilder().withDebts(new DebtBuilder().withMoney(\"$5.0\").build()).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"lyuting47"},"content":"        assertTrue(predicate.test(dude));","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"lyuting47"},"content":"        // Multiple debts sum exactly equal to amount","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"lyuting47"},"content":"        dude \u003d new PersonBuilder().withDebts(","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"lyuting47"},"content":"                                    new DebtBuilder().withMoney(\"$4\").build(), new DebtBuilder().withMoney(\"1\").build())","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"lyuting47"},"content":"                                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"lyuting47"},"content":"        assertTrue(predicate.test(dude));","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"lyuting47"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"lyuting47"},"content":"    public void moneyGreaterEqualAmount_returnsFalse() {","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"lyuting47"},"content":"        Money amount \u003d new Money(\"5.00\");","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"lyuting47"},"content":"        DebtGreaterEqualAmountPredicate predicate \u003d new DebtGreaterEqualAmountPredicate(amount);","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"lyuting47"},"content":"        // Single debt less than amount","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"lyuting47"},"content":"        Person dude \u003d new PersonBuilder().withDebts(new DebtBuilder().withMoney(\"$4.55\").build()).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"lyuting47"},"content":"        assertFalse(predicate.test(dude));","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"lyuting47"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"lyuting47"},"content":"        // Multiple debts whose sum less than amount","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"lyuting47"},"content":"        dude \u003d new PersonBuilder().withDebts(","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"lyuting47"},"content":"                                    new DebtBuilder().withMoney(\"$2\").build(), new DebtBuilder().withMoney(\"1\").build())","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"lyuting47"},"content":"                                .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"lyuting47"},"content":"        assertFalse(predicate.test(dude));","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"lyuting47"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"lyuting47"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"lyuting47":80}},{"path":"src/test/java/paymelah/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"tsammeow":2,"-":66}},{"path":"src/test/java/paymelah/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tsammeow":2,"-":73}},{"path":"src/test/java/paymelah/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"tsammeow":2,"-":38}},{"path":"src/test/java/paymelah/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"tsammeow":10,"-":81}},{"path":"src/test/java/paymelah/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"tsammeow":2,"-":38}},{"path":"src/test/java/paymelah/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"tsammeow":9,"-":161}},{"path":"src/test/java/paymelah/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.model.tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"tsammeow":2,"-":24}},{"path":"src/test/java/paymelah/storage/JsonAdaptedDebtTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalDebts.CHICKEN_RICE;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Description;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"public class JsonAdaptedDebtTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"    private static final String INVALID_MONEY \u003d \"two dollars\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"    private static final String VALID_DESCRIPTION \u003d CHICKEN_RICE.getDescription().toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"    private static final String VALID_MONEY \u003d CHICKEN_RICE.getMoney().toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"    public void toModelType_validDetails_returnsDebt() throws IllegalValueException {","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"        JsonAdaptedDebt debt \u003d new JsonAdaptedDebt(VALID_DESCRIPTION, VALID_MONEY);","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"        assertEquals(CHICKEN_RICE, debt.toModelType());","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"        JsonAdaptedDebt debt \u003d new JsonAdaptedDebt(INVALID_DESCRIPTION, VALID_MONEY);","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"        assertThrows(IllegalValueException.class, Description.MESSAGE_CONSTRAINTS, debt::toModelType);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"tsammeow"},"content":"    public void toModelType_invalidMoney_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"        JsonAdaptedDebt debt \u003d new JsonAdaptedDebt(VALID_DESCRIPTION, INVALID_MONEY);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"tsammeow"},"content":"        assertThrows(IllegalValueException.class, Money.MESSAGE_CONSTRAINTS, debt::toModelType);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"tsammeow"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"tsammeow":37}},{"path":"src/test/java/paymelah/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"    private static final List\u003cJsonAdaptedDebt\u003e VALID_DEBTS \u003d BENSON.getDebts().asList().stream()","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"tsammeow"},"content":"            .map(JsonAdaptedDebt::new)","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"tsammeow"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_DEBTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"tsammeow"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"tsammeow"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_DEBTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"tsammeow"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_DEBTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"tsammeow"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"tsammeow"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_DEBTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"tsammeow"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_DEBTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"tsammeow"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"tsammeow"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS, VALID_DEBTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"tsammeow"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_DEBTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"tsammeow"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"tsammeow"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS, VALID_DEBTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"tsammeow"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_DEBTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsammeow":25,"-":92}},{"path":"src/test/java/paymelah/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsammeow":9,"-":101}},{"path":"src/test/java/paymelah/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.util.JsonUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.testutil.TypicalPersons;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsammeow":6,"-":41}},{"path":"src/test/java/paymelah/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsammeow":5,"-":118}},{"path":"src/test/java/paymelah/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":6,"-":62}},{"path":"src/test/java/paymelah/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":3,"-":31}},{"path":"src/test/java/paymelah/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"tsammeow":1,"-":33}},{"path":"src/test/java/paymelah/testutil/DebtBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Description;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Money;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":" * A utility class to help with building Debt objects.","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"public class DebtBuilder {","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Manicure\";","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"    public static final String DEFAULT_MONEY \u003d \"100\";","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"waynezsy"},"content":"    private Description description;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"waynezsy"},"content":"    private Money money;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"waynezsy"},"content":"     * Creates a {@code DebtBuilder} with the default details.","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"waynezsy"},"content":"    public DebtBuilder() {","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"waynezsy"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"waynezsy"},"content":"        money \u003d new Money(DEFAULT_MONEY);","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"     * Initializes the DebtBuilder with the data of {@code debtToCopy}.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"waynezsy"},"content":"    public DebtBuilder(Debt debtToCopy) {","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"waynezsy"},"content":"        description \u003d debtToCopy.getDescription();","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"waynezsy"},"content":"        money \u003d debtToCopy.getMoney();","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"waynezsy"},"content":"     * Sets the {@code Description} of the {@code Debt} that we are building.","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"waynezsy"},"content":"    public DebtBuilder withDescription(String description) {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"waynezsy"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"waynezsy"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"waynezsy"},"content":"     * Sets the {@code Money} of the {@code Debt} that we are building.","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"waynezsy"},"content":"    public DebtBuilder withMoney(String money) {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"waynezsy"},"content":"        this.money \u003d new Money(money);","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"waynezsy"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"waynezsy"},"content":"    public Debt build() {","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"waynezsy"},"content":"        return new Debt(description, money);","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"waynezsy":52}},{"path":"src/test/java/paymelah/testutil/DebtListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.DebtList;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":" * A utility class to help with building DebtList objects.","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"public class DebtListBuilder {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"    private List\u003cDebt\u003e debtList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"     * Creates an empty {@code DebtListBuilder}.","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"    public DebtListBuilder() {}","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"     * Initializes the {@code DebtListBuilder} with the data of {@code debtToCopy}.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"    public DebtListBuilder(DebtList debtToCopy) {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"        debtList.addAll(debtToCopy.asList());","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"     * Adds a {@link Debt} to the {@code DebtList} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"tsammeow"},"content":"    public DebtListBuilder withDebt(Debt debt) {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"        debtList.add(debt);","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"tsammeow"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"tsammeow"},"content":"    public DebtList build() {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"tsammeow"},"content":"        return DebtList.fromList(debtList);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"tsammeow"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"tsammeow":38}},{"path":"src/test/java/paymelah/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tsammeow":8,"-":79}},{"path":"src/test/java/paymelah/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.debt.DebtList;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"tsammeow"},"content":"    private DebtList debts;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"tsammeow"},"content":"        debts \u003d new DebtList();","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"tsammeow"},"content":"        debts \u003d personToCopy.getDebts();","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"tsammeow"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"tsammeow"},"content":"     * Sets the {@code DebtList} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"tsammeow"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"tsammeow"},"content":"    public PersonBuilder withDebts(Debt... debts) {","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"tsammeow"},"content":"        this.debts \u003d SampleDataUtil.getDebtList(debts);","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"tsammeow"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"tsammeow"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"waynezsy"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"waynezsy"},"content":"     * Sets the {@code DebtList} of the {@code Person} that we are building using a pre-existing DebtList.","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"waynezsy"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"waynezsy"},"content":"    public PersonBuilder withDebts(DebtList debts) {","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"waynezsy"},"content":"        this.debts \u003d SampleDataUtil.getDebtList(debts.asList().toArray(new Debt[0]));","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"waynezsy"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"waynezsy"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":114,"author":{"gitId":"tsammeow"},"content":"        return new Person(name, phone, email, address, tags, debts);","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"tsammeow":22,"waynezsy":8,"-":87}},{"path":"src/test/java/paymelah/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.AddCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import paymelah.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"tsammeow":10,"-":52}},{"path":"src/test/java/paymelah/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":1,"-":71}},{"path":"src/test/java/paymelah/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsammeow":4,"-":51}},{"path":"src/test/java/paymelah/testutil/TypicalDebts.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"waynezsy"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"waynezsy"},"content":"import paymelah.model.debt.Debt;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"waynezsy"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"waynezsy"},"content":" * A utility class containing a list of {@code Debt} objects to be used in tests.","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"waynezsy"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"waynezsy"},"content":"public class TypicalDebts {","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"waynezsy"},"content":"    public static final Debt MCDONALDS \u003d new DebtBuilder().withDescription(\"McDonald\u0027s\")","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"waynezsy"},"content":"            .withMoney(\"10.80\").build();","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"waynezsy"},"content":"    public static final Debt CHICKEN_RICE \u003d new DebtBuilder().withDescription(\"chicken rice\")","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"waynezsy"},"content":"            .withMoney(\"5.60\").build();","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"    public static final Debt SUPPER \u003d new DebtBuilder().withDescription(\"supper jio\")","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"            .withMoney(\"$4.5\").build();","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"    public static final Debt TAOBAO \u003d new DebtBuilder().withDescription(\"Taobao group buy\")","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"            .withMoney(\"34.52\").build();","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"    public static final Debt BURGER \u003d new DebtBuilder().withDescription(\"burger king\")","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"            .withMoney(\"10.40\").build();","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"    public static final Debt MEALS \u003d new DebtBuilder().withDescription(\"Volunteer meal\")","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"            .withMoney(\"5\").build();","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"    public static final Debt KFC_BURGER \u003d new DebtBuilder().withDescription(\"kfc zinger burger\")","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"            .withMoney(\"$4.5\").build();","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"tsammeow"},"content":"    public static final Debt COOP \u003d new DebtBuilder().withDescription(\"coop textbooks\")","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"tsammeow"},"content":"            .withMoney(\"$29.60\").build();","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"waynezsy"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"waynezsy"},"content":"    private TypicalDebts() {} // prevents instantiation","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"waynezsy"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"tsammeow":12,"waynezsy":15}},{"path":"src/test/java/paymelah/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import paymelah.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"WR3nd3"},"content":"    public static final Index INDEX_FIFTH_PERSON \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"WR3nd3"},"content":"    public static final Index INDEX_SEVENTH_PERSON \u003d Index.fromOneBased(7);","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"WR3nd3"},"content":"    public static final Index INDEX_FIRST_DEBT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"WR3nd3"},"content":"    public static final Index INDEX_SECOND_DEBT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"WR3nd3"},"content":"    public static final Index INDEX_THIRD_DEBT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"tsammeow":2,"WR3nd3":5,"-":10}},{"path":"src/test/java/paymelah/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_DEBT_KARAOKE;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_DEBT_KOI;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_DEBT_PIZZA;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"tsammeow"},"content":"import static paymelah.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalDebts.BURGER;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalDebts.COOP;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalDebts.KFC_BURGER;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalDebts.MCDONALDS;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalDebts.MEALS;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalDebts.SUPPER;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.TypicalDebts.TAOBAO;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.AddressBook;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"tsammeow"},"content":"import paymelah.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"tsammeow"},"content":"            .withTags(\"friends\").withDebts(MCDONALDS).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"tsammeow"},"content":"            .withTags(\"owesMoney\", \"friends\").withDebts(BURGER).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"tsammeow"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withDebts(COOP).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"tsammeow"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withDebts(TAOBAO).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"tsammeow"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withDebts(KFC_BURGER, SUPPER).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"tsammeow"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withDebts(MEALS).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"tsammeow"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"tsammeow"},"content":"            .withDebts(VALID_DEBT_PIZZA, VALID_DEBT_KARAOKE).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"tsammeow"},"content":"            .withDebts(VALID_DEBT_KOI, VALID_DEBT_KARAOKE).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"tsammeow"},"content":"    public static final String KEYWORD_MATCHING_BURGER \u003d \"burger\";","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"tsammeow"},"content":"    public static final String KEYWORD_NOT_MATCHING_BURGER \u003d \"burgers\";","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"tsammeow"},"content":"    public static final String KEYWORD_MATCHING_MEAL \u003d \"meal\";","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"tsammeow"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"tsammeow":36,"-":55}},{"path":"src/test/java/paymelah/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"tsammeow":1,"-":34}},{"path":"src/test/java/paymelah/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsammeow"},"content":"package paymelah.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsammeow"},"content":"import static paymelah.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"tsammeow"},"content":"import paymelah.MainApp;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"tsammeow":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"\u003c?import paymelah.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"tsammeow":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"tsammeow"},"content":"\u003cfx:root type\u003d\"paymelah.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"tsammeow":1,"-":5}}]
